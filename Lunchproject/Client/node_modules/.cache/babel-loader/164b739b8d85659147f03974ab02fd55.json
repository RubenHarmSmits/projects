{"remainingRequest":"C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\src\\services\\user_service.js","dependencies":[{"path":"C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\src\\services\\user_service.js","mtime":1555683630599},{"path":"C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\rsmits\\\\Documents\\\\lanthir-lunch\\\\Client\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Object$values from \"C:\\\\Users\\\\rsmits\\\\Documents\\\\lanthir-lunch\\\\Client\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/values\";\nimport _JSON$stringify from \"C:\\\\Users\\\\rsmits\\\\Documents\\\\lanthir-lunch\\\\Client\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\nimport _Promise from \"C:\\\\Users\\\\rsmits\\\\Documents\\\\lanthir-lunch\\\\Client\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport JWT from 'jsonwebtoken';\nimport httpClient from '../http_client';\nimport EventBus from '../components/EventBus';\n\nfunction getUser() {\n  var user = sessionStorage.getItem(\"user\");\n\n  if (user) {\n    return JSON.parse(user);\n  }\n\n  return null;\n}\n\nfunction googleCallback(user) {\n  return externalLogin(\"Google\", user.getAuthResponse().id_token, user.getBasicProfile());\n}\n\nfunction externalLogin(provider, token, profile) {\n  return new _Promise(function (resolve, reject) {\n    httpClient.post(\"Auth/ExternalLogin\", {\n      provider: provider,\n      idToken: token\n    }).then(function (res) {\n      var refreshToken = res.data.refreshToken;\n      var accessToken = res.data.accessToken;\n      var apiUser = JWT.decode(accessToken);\n      sessionStorage.setItem(\"user\", _JSON$stringify({\n        accessToken: accessToken,\n        refreshToken: refreshToken,\n        apiId: apiUser.nameid,\n        apiRole: apiUser.role,\n        name: profile.getGivenName(),\n        fullName: profile.getName(),\n        email: profile.getEmail(),\n        image: profile.getImageUrl()\n      }));\n      EventBus.$emit(\"login\", true);\n      resolve();\n    }).catch(function (err) {\n      // For now just return the first error\n      if (err.response && err.response.data.errors) {\n        reject(new Error(_Object$values(err.response.data.errors)[0]));\n      }\n\n      reject(err);\n    });\n  });\n}\n\nfunction removeCredentials() {\n  sessionStorage.removeItem(\"user\");\n  EventBus.$emit(\"login\", false);\n}\n\nfunction logout() {\n  return new _Promise(\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(resolve, reject) {\n      var error;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              error = null;\n              _context.prev = 1;\n              _context.next = 4;\n              return httpClient.post(\"Auth/Logout\");\n\n            case 4:\n              _context.next = 9;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](1);\n              error = _context.t0;\n\n            case 9:\n              removeCredentials();\n\n              if (error) {\n                reject(error);\n              }\n\n              resolve();\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 6]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n}\n\nexport default {\n  getUser: getUser,\n  googleCallback: googleCallback,\n  externalLogin: externalLogin,\n  logout: logout,\n  removeCredentials: removeCredentials\n};",{"version":3,"sources":["C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\src\\services\\user_service.js"],"names":["JWT","httpClient","EventBus","getUser","user","sessionStorage","getItem","JSON","parse","googleCallback","externalLogin","getAuthResponse","id_token","getBasicProfile","provider","token","profile","resolve","reject","post","idToken","then","res","refreshToken","data","accessToken","apiUser","decode","setItem","apiId","nameid","apiRole","role","name","getGivenName","fullName","getName","email","getEmail","image","getImageUrl","$emit","catch","err","response","errors","Error","removeCredentials","removeItem","logout","error"],"mappings":"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","sourcesContent":["import JWT from 'jsonwebtoken'\r\n\r\nimport httpClient from '../http_client'\r\nimport EventBus from '../components/EventBus';\r\n\r\nfunction getUser() {\r\n    let user = sessionStorage.getItem(\"user\")\r\n    if (user) {\r\n        return JSON.parse(user)\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction googleCallback(user) {\r\n    return externalLogin (\r\n        \"Google\",\r\n        user.getAuthResponse().id_token,\r\n        user.getBasicProfile(),\r\n    )\r\n}\r\n\r\nfunction externalLogin(provider, token, profile) {\r\n    return new Promise((resolve, reject) => {\r\n        httpClient.post(\"Auth/ExternalLogin\", {\r\n            provider,\r\n            idToken: token\r\n        }).then(res => {\r\n            let refreshToken = res.data.refreshToken\r\n            let accessToken = res.data.accessToken\r\n            let apiUser = JWT.decode(accessToken)\r\n\r\n            sessionStorage.setItem(\"user\", JSON.stringify({\r\n                accessToken,\r\n                refreshToken,\r\n                apiId: apiUser.nameid,\r\n                apiRole: apiUser.role,\r\n                name: profile.getGivenName(),\r\n                fullName: profile.getName(),\r\n                email: profile.getEmail(),\r\n                image: profile.getImageUrl()\r\n            }))\r\n            EventBus.$emit(\"login\", true);\r\n            resolve()\r\n        }).catch(err => {\r\n            // For now just return the first error\r\n            if (err.response && err.response.data.errors) {\r\n                reject(new Error(\r\n                    Object.values(err.response.data.errors)[0]\r\n                ))\r\n            }\r\n            reject(err)\r\n        })\r\n    })\r\n}\r\n\r\nfunction removeCredentials() {\r\n    sessionStorage.removeItem(\"user\")\r\n    EventBus.$emit(\"login\", false)\r\n}\r\n\r\nfunction logout() {\r\n    return new Promise(async (resolve, reject) => {\r\n        let error = null;\r\n\r\n        try {\r\n            await httpClient.post(\"Auth/Logout\")\r\n        } catch(e) {\r\n            error = e;\r\n        }\r\n\r\n        removeCredentials()\r\n\r\n        if (error) {\r\n            reject(error)\r\n        }\r\n        resolve()\r\n    })\r\n}\r\n\r\nexport default {\r\n    getUser,\r\n    googleCallback,\r\n    externalLogin,\r\n    logout,\r\n    removeCredentials\r\n}"]}]}