{"remainingRequest":"C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\src\\store\\auth.js","dependencies":[{"path":"C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\src\\store\\auth.js","mtime":1556010479786},{"path":"C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _JSON$stringify from \"C:\\\\Users\\\\rsmits\\\\Documents\\\\lanthir-lunch\\\\Client\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\nimport _Promise from \"C:\\\\Users\\\\rsmits\\\\Documents\\\\lanthir-lunch\\\\Client\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport _defineProperty from \"C:\\\\Users\\\\rsmits\\\\Documents\\\\lanthir-lunch\\\\Client\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.function.name\";\n\nvar _mutations, _actions;\n\nimport { externalLogin, logout } from './actions/auth';\nimport { types as messageTypes } from './message';\nvar messageModule = {\n  setMessage: \"\".concat(messageTypes.name, \"/\").concat(messageTypes.actions.onSetMessage)\n};\nexport var types = {\n  name: \"auth\",\n  getters: {\n    getUser: 'getUser'\n  },\n  actions: {\n    onInitGoogleAuth: \"onInitGoogleAuth\",\n    onAutoLogin: \"onAutoLogin\",\n    onExternalLogin: \"onExternalLogin\",\n    onLogout: \"onLogout\"\n  },\n  mutations: {\n    setGoogleAuth: \"setGoogleAuth\",\n    setAuthStart: \"setAuthStart\",\n    setAuthError: \"setAuthError\",\n    setAuthSuccess: \"setAuthSuccess\"\n  }\n};\nexport default {\n  state: {\n    googleAuth: null,\n    pending: false,\n    authenticated: false\n  },\n  getters: _defineProperty({}, types.getters.getUser, function (state) {\n    return state.authenticated ? JSON.parse(sessionStorage.getItem(\"user\")) : null;\n  }),\n  mutations: (_mutations = {}, _defineProperty(_mutations, types.mutations.setGoogleAuth, function (state, googleAuth) {\n    state.googleAuth = googleAuth;\n  }), _defineProperty(_mutations, types.mutations.setAuthStart, function (state) {\n    state.pending = true;\n  }), _defineProperty(_mutations, types.mutations.setAuthSuccess, function (state, login) {\n    state.pending = false;\n    state.authenticated = login;\n  }), _defineProperty(_mutations, types.mutations.setAuthError, function (state, login) {\n    state.pending = false;\n    state.authenticated = login;\n  }), _mutations),\n  actions: (_actions = {}, _defineProperty(_actions, types.actions.onInitGoogleAuth, function (_ref) {\n    var commit = _ref.commit,\n        dispatch = _ref.dispatch;\n    return new _Promise(function (resolve) {\n      gapi.load('auth2', function () {\n        gapi.auth2.init({\n          client_id: '1052492048864-bae100u8h2h3rh1obk3fdpcaumem0e3t.apps.googleusercontent.com'\n        }).then(function (res) {\n          commit(types.mutations.setGoogleAuth, res);\n          resolve();\n        }).catch(function (err) {\n          console.log(err);\n          commit(types.mutations.setAuthError, false);\n          dispatch(messageModule.setMessage, {\n            target: 'login',\n            status: messageTypes.status.error,\n            message: \"Er is iets misgegaan tijdens het laden van de Google API\"\n          }, {\n            root: true\n          });\n          resolve();\n        });\n      });\n    });\n  }), _defineProperty(_actions, types.actions.onAutoLogin, function (_ref2) {\n    var commit = _ref2.commit;\n    //commit(types.mutations.setAuthStart)\n    return new _Promise(function (resolve) {\n      var user = sessionStorage.getItem(\"user\");\n\n      if (user) {\n        commit(types.mutations.setAuthSuccess, true);\n      }\n\n      resolve();\n    });\n  }), _defineProperty(_actions, types.actions.onExternalLogin, function (_ref3, _ref4) {\n    var commit = _ref3.commit,\n        dispatch = _ref3.dispatch;\n    var provider = _ref4.provider,\n        token = _ref4.token,\n        profile = _ref4.profile;\n    commit(types.mutations.setAuthStart);\n    return new _Promise(function (resolve) {\n      externalLogin(provider, token, profile).then(function (user) {\n        sessionStorage.setItem(\"user\", _JSON$stringify(user));\n        commit(types.mutations.setAuthSuccess, true);\n        resolve();\n      }).catch(function (err) {\n        console.log(err);\n        commit(types.mutations.setAuthError, false);\n        dispatch(messageModule.setMessage, {\n          target: 'login',\n          status: messageTypes.status.error,\n          message: \"Er is iets misgegaan tijdens het inloggen\"\n        }, {\n          root: true\n        });\n        resolve();\n      });\n    });\n  }), _defineProperty(_actions, types.actions.onLogout, function (_ref5) {\n    var commit = _ref5.commit,\n        dispatch = _ref5.dispatch;\n    commit(types.mutations.setAuthStart);\n    return new _Promise(function (resolve) {\n      logout().then(function () {\n        localStorage.removeItem(\"user\");\n        commit(types.mutations.setAuthSuccess, false);\n        dispatch(messageModule.setMessage, {\n          target: 'login',\n          status: messageTypes.status.success,\n          message: \"Je bent uitgelogd\"\n        }, {\n          root: true\n        });\n        resolve();\n      }).catch(function (err) {\n        console.log(err);\n        localStorage.removeItem(\"user\");\n        commit(types.mutations.setAuthError, false);\n        dispatch(messageModule.setMessage, {\n          target: 'login',\n          status: messageTypes.status.error,\n          message: \"Er is iets misgegaan tijdens het uitloggen\"\n        }, {\n          root: true\n        });\n        resolve();\n      });\n    });\n  }), _actions)\n};",{"version":3,"sources":["C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\src\\store\\auth.js"],"names":["externalLogin","logout","types","messageTypes","messageModule","setMessage","name","actions","onSetMessage","getters","getUser","onInitGoogleAuth","onAutoLogin","onExternalLogin","onLogout","mutations","setGoogleAuth","setAuthStart","setAuthError","setAuthSuccess","state","googleAuth","pending","authenticated","JSON","parse","sessionStorage","getItem","login","commit","dispatch","resolve","gapi","load","auth2","init","client_id","then","res","catch","err","console","log","target","status","error","message","root","user","provider","token","profile","setItem","localStorage","removeItem","success"],"mappings":"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","sourcesContent":["import { externalLogin, logout } from './actions/auth'\r\nimport { types as messageTypes } from './message'\r\n\r\nconst messageModule = {\r\n    setMessage: `${messageTypes.name}/${messageTypes.actions.onSetMessage}`\r\n}\r\n\r\nexport const types = {\r\n    name: \"auth\",\r\n\r\n    getters: {\r\n        getUser: 'getUser'\r\n    },\r\n    actions: {\r\n        onInitGoogleAuth: \"onInitGoogleAuth\",\r\n        onAutoLogin: \"onAutoLogin\",\r\n        onExternalLogin: \"onExternalLogin\",\r\n        onLogout: \"onLogout\"\r\n    },\r\n    mutations: {\r\n        setGoogleAuth: \"setGoogleAuth\",\r\n        setAuthStart: \"setAuthStart\",\r\n        setAuthError: \"setAuthError\",\r\n        setAuthSuccess: \"setAuthSuccess\"\r\n    }\r\n}\r\n\r\nexport default {\r\n    state: {\r\n        googleAuth: null,\r\n        pending: false,\r\n        authenticated: false\r\n    },\r\n    getters: {\r\n        [types.getters.getUser]: state => {\r\n            return state.authenticated\r\n                ? JSON.parse(sessionStorage.getItem(\"user\"))\r\n                : null\r\n        }\r\n    },\r\n    mutations: {\r\n        [types.mutations.setGoogleAuth](state, googleAuth) {\r\n            state.googleAuth = googleAuth\r\n        },\r\n        [types.mutations.setAuthStart](state) {\r\n            state.pending = true\r\n        },\r\n        [types.mutations.setAuthSuccess](state, login) {\r\n            state.pending = false\r\n            state.authenticated = login\r\n        },\r\n        [types.mutations.setAuthError](state, login) {\r\n            state.pending = false\r\n            state.authenticated = login\r\n        }\r\n    },\r\n    actions: {\r\n        [types.actions.onInitGoogleAuth]({ commit, dispatch }) {\r\n            return new Promise(resolve => {\r\n                gapi.load('auth2', () => {\r\n                    gapi.auth2.init({\r\n                        client_id: '1052492048864-bae100u8h2h3rh1obk3fdpcaumem0e3t.apps.googleusercontent.com'\r\n                    })\r\n                    .then(res => {\r\n                        commit(types.mutations.setGoogleAuth, res)\r\n                        resolve()\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err)\r\n                        commit(types.mutations.setAuthError, false)\r\n                        dispatch(messageModule.setMessage, {\r\n                            target: 'login',\r\n                            status: messageTypes.status.error,\r\n                            message: `Er is iets misgegaan tijdens het laden van de Google API`\r\n                        }, { root: true })\r\n                        resolve()\r\n                    })\r\n                })\r\n            })\r\n        },\r\n        [types.actions.onAutoLogin]({ commit }) {\r\n            //commit(types.mutations.setAuthStart)\r\n            return new Promise(resolve => {\r\n                let user = sessionStorage.getItem(\"user\")\r\n                if (user) {\r\n                    commit(types.mutations.setAuthSuccess, true)\r\n                }\r\n                resolve()\r\n            })\r\n        },\r\n        [types.actions.onExternalLogin]({ commit, dispatch }, { provider, token, profile }) {\r\n            commit(types.mutations.setAuthStart)\r\n            return new Promise(resolve => {\r\n                externalLogin(provider, token, profile)\r\n                    .then(user => {\r\n                        sessionStorage.setItem(\"user\", JSON.stringify(user))\r\n                        commit(types.mutations.setAuthSuccess, true)\r\n                        resolve()\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err)\r\n                        commit(types.mutations.setAuthError, false)\r\n                        dispatch(messageModule.setMessage, {\r\n                            target: 'login',\r\n                            status: messageTypes.status.error,\r\n                            message: `Er is iets misgegaan tijdens het inloggen`\r\n                        }, { root: true })\r\n                        resolve()\r\n                    })\r\n            })\r\n        },\r\n        [types.actions.onLogout]({ commit, dispatch }) {\r\n            commit(types.mutations.setAuthStart)\r\n            return new Promise(resolve => {\r\n                logout()\r\n                    .then(() => {\r\n                        localStorage.removeItem(\"user\")\r\n                        commit(types.mutations.setAuthSuccess, false)\r\n                        dispatch(messageModule.setMessage, {\r\n                            target: 'login',\r\n                            status: messageTypes.status.success,\r\n                            message: \"Je bent uitgelogd\"\r\n                        }, { root: true })\r\n                        resolve()\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err)\r\n                        localStorage.removeItem(\"user\")\r\n                        commit(types.mutations.setAuthError, false)\r\n                        dispatch(messageModule.setMessage, {\r\n                            target: 'login',\r\n                            status: messageTypes.status.error,\r\n                            message: `Er is iets misgegaan tijdens het uitloggen`\r\n                        }, { root: true })\r\n                        resolve()\r\n                    })\r\n            })\r\n        }\r\n    }\r\n}"]}]}