{"remainingRequest":"C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\src\\http\\axios.js","dependencies":[{"path":"C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\src\\http\\axios.js","mtime":1556010479772},{"path":"C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Promise from \"C:\\\\Users\\\\rsmits\\\\Documents\\\\lanthir-lunch\\\\Client\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport \"core-js/modules/es6.function.name\";\nimport constants from '../constants';\nimport store from '../store';\nimport { types as authTypes } from '../store/auth';\nimport { types as messageTypes } from '../store/message';\nimport router from \"../router\";\nexport var configureAxios = function configureAxios(axios) {\n  axios.interceptors.request.use(function (config) {\n    if (config.baseURL !== constants.API_URL || config.headers.Authorization) {\n      return config;\n    }\n\n    if (store.state.auth.authenticated) {\n      var user = store.getters[\"\".concat(authTypes.name, \"/\").concat(authTypes.getters.getUser)];\n      config.headers.Authorization = \"Bearer \".concat(user.accessToken);\n    }\n\n    return config;\n  }, function (error) {\n    return _Promise.reject(error);\n  });\n  axios.interceptors.response.use(function (response) {\n    return response;\n  }, function (error) {\n    if (error.response && error.response.status === 401) {\n      store.commit(\"\".concat(authTypes.name, \"/\").concat(authTypes.mutations.setAuthError), false);\n      store.dispatch(\"\".concat(messageTypes.name, \"/\").concat(messageTypes.actions.onSetMessage), {\n        target: 'login',\n        message: \"De sessie is verlopen. Je moet opnieuw inloggen\",\n        status: messageTypes.status.warning\n      });\n      router.push({\n        name: 'login'\n      });\n    } else {\n      return _Promise.reject(error);\n    }\n  });\n};",{"version":3,"sources":["C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\src\\http\\axios.js"],"names":["constants","store","types","authTypes","messageTypes","router","configureAxios","axios","interceptors","request","use","config","baseURL","API_URL","headers","Authorization","state","auth","authenticated","user","getters","name","getUser","accessToken","error","reject","response","status","commit","mutations","setAuthError","dispatch","actions","onSetMessage","target","message","warning","push"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,cAAtB;AAEA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,KAAK,IAAIC,SAAlB,QAAmC,eAAnC;AACA,SAASD,KAAK,IAAIE,YAAlB,QAAsC,kBAAtC;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AACrCA,EAAAA,KAAK,CAACC,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACI,UAAAC,MAAM,EAAI;AACN,QAAIA,MAAM,CAACC,OAAP,KAAmBZ,SAAS,CAACa,OAA7B,IAAwCF,MAAM,CAACG,OAAP,CAAeC,aAA3D,EAA0E;AACtE,aAAOJ,MAAP;AACH;;AACD,QAAIV,KAAK,CAACe,KAAN,CAAYC,IAAZ,CAAiBC,aAArB,EAAoC;AAChC,UAAIC,IAAI,GAAGlB,KAAK,CAACmB,OAAN,WAAiBjB,SAAS,CAACkB,IAA3B,cAAmClB,SAAS,CAACiB,OAAV,CAAkBE,OAArD,EAAX;AACAX,MAAAA,MAAM,CAACG,OAAP,CAAeC,aAAf,oBAAyCI,IAAI,CAACI,WAA9C;AACH;;AACD,WAAOZ,MAAP;AACH,GAVL,EAWI,UAAAa,KAAK;AAAA,WAAI,SAAQC,MAAR,CAAeD,KAAf,CAAJ;AAAA,GAXT;AAcAjB,EAAAA,KAAK,CAACC,YAAN,CAAmBkB,QAAnB,CAA4BhB,GAA5B,CACI,UAAAgB,QAAQ;AAAA,WAAIA,QAAJ;AAAA,GADZ,EAEI,UAAAF,KAAK,EAAI;AACL,QAAIA,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeC,MAAf,KAA0B,GAAhD,EAAqD;AACjD1B,MAAAA,KAAK,CAAC2B,MAAN,WAAgBzB,SAAS,CAACkB,IAA1B,cAAkClB,SAAS,CAAC0B,SAAV,CAAoBC,YAAtD,GAAsE,KAAtE;AACA7B,MAAAA,KAAK,CAAC8B,QAAN,WAAkB3B,YAAY,CAACiB,IAA/B,cAAuCjB,YAAY,CAAC4B,OAAb,CAAqBC,YAA5D,GAA4E;AACxEC,QAAAA,MAAM,EAAE,OADgE;AAExEC,QAAAA,OAAO,EAAE,iDAF+D;AAGxER,QAAAA,MAAM,EAAEvB,YAAY,CAACuB,MAAb,CAAoBS;AAH4C,OAA5E;AAKA/B,MAAAA,MAAM,CAACgC,IAAP,CAAY;AACRhB,QAAAA,IAAI,EAAE;AADE,OAAZ;AAGH,KAVD,MAUO;AACH,aAAO,SAAQI,MAAR,CAAeD,KAAf,CAAP;AACH;AACJ,GAhBL;AAkBH,CAjCM","sourcesContent":["import constants from '../constants'\r\n\r\nimport store from '../store'\r\nimport { types as authTypes } from '../store/auth'\r\nimport { types as messageTypes } from '../store/message'\r\n\r\nimport router from \"../router\"\r\n\r\nexport const configureAxios = (axios) => {\r\n    axios.interceptors.request.use(\r\n        config => {\r\n            if (config.baseURL !== constants.API_URL || config.headers.Authorization) {\r\n                return config;\r\n            }\r\n            if (store.state.auth.authenticated) {\r\n                let user = store.getters[`${authTypes.name}/${authTypes.getters.getUser}`]\r\n                config.headers.Authorization = `Bearer ${user.accessToken}`\r\n            }\r\n            return config;\r\n        },\r\n        error => Promise.reject(error)\r\n    );\r\n\r\n    axios.interceptors.response.use(\r\n        response => response,\r\n        error => {\r\n            if (error.response && error.response.status === 401) {\r\n                store.commit(`${authTypes.name}/${authTypes.mutations.setAuthError}`, false)\r\n                store.dispatch(`${messageTypes.name}/${messageTypes.actions.onSetMessage}`, {\r\n                    target: 'login',\r\n                    message: \"De sessie is verlopen. Je moet opnieuw inloggen\",\r\n                    status: messageTypes.status.warning\r\n                })\r\n                router.push({\r\n                    name: 'login'\r\n                })\r\n            } else {\r\n                return Promise.reject(error)\r\n            }\r\n        }\r\n    )\r\n}"]}]}