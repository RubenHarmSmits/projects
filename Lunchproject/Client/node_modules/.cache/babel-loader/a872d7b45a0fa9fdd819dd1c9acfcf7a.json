{"remainingRequest":"C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\src\\http_client.js","dependencies":[{"path":"C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\src\\http_client.js","mtime":1555683630594},{"path":"C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Promise from \"C:\\\\Users\\\\rsmits\\\\Documents\\\\lanthir-lunch\\\\Client\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport Axios from 'axios';\nimport Router from './router';\nimport UserService from './services/user_service';\nvar apiUrl = \"\".concat(process.env.VUE_APP_API_URL || \"http://localhost:5000/sogyolunchapi\");\nvar axios = Axios.create({\n  baseURL: apiUrl,\n  headers: {\n    \"Access-Control-Allow-Origin\": apiUrl\n  },\n  timeout: 20000\n}); // Add authorization header\n\naxios.interceptors.request.use(function (config) {\n  if (config.baseURL !== apiUrl || config.headers.Authorization) {\n    return config;\n  }\n\n  var user = UserService.getUser();\n\n  if (user) {\n    if (user.accessToken) {\n      config.headers.Authorization = \"Bearer \".concat(user.accessToken);\n    }\n  }\n\n  return config;\n}, function (error) {\n  return _Promise.reject(error);\n});\naxios.interceptors.response.use(function (response) {\n  return response;\n}, function (error) {\n  if (error.response && error.response.status == 401) {\n    UserService.removeCredentials();\n    Router.push({\n      name: 'login',\n      params: {\n        initialMessage: \"De sessie is verlopen. Je moet opnieuw inloggen.\"\n      }\n    });\n  } else {\n    return _Promise.reject(error);\n  }\n});\nexport default axios;",{"version":3,"sources":["C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\src\\http_client.js"],"names":["Axios","Router","UserService","apiUrl","process","env","VUE_APP_API_URL","axios","create","baseURL","headers","timeout","interceptors","request","use","config","Authorization","user","getUser","accessToken","error","reject","response","status","removeCredentials","push","name","params","initialMessage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AAEA,IAAMC,MAAM,aAAMC,OAAO,CAACC,GAAR,CAAYC,eAAZ,IAA+B,qCAArC,CAAZ;AAEA,IAAMC,KAAK,GAAGP,KAAK,CAACQ,MAAN,CAAa;AACzBC,EAAAA,OAAO,EAAEN,MADgB;AAEzBO,EAAAA,OAAO,EAAE;AACP,mCAA+BP;AADxB,GAFgB;AAKzBQ,EAAAA,OAAO,EAAE;AALgB,CAAb,CAAd,C,CAQA;;AACAJ,KAAK,CAACK,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACE,UAAAC,MAAM,EAAI;AACR,MAAIA,MAAM,CAACN,OAAP,KAAmBN,MAAnB,IAA6BY,MAAM,CAACL,OAAP,CAAeM,aAAhD,EAA+D;AAC7D,WAAOD,MAAP;AACD;;AACD,MAAIE,IAAI,GAAGf,WAAW,CAACgB,OAAZ,EAAX;;AACA,MAAID,IAAJ,EAAU;AACR,QAAIA,IAAI,CAACE,WAAT,EAAsB;AACpBJ,MAAAA,MAAM,CAACL,OAAP,CAAeM,aAAf,oBAAyCC,IAAI,CAACE,WAA9C;AACD;AACF;;AACD,SAAOJ,MAAP;AACD,CAZH,EAaE,UAAAK,KAAK;AAAA,SAAI,SAAQC,MAAR,CAAeD,KAAf,CAAJ;AAAA,CAbP;AAgBAb,KAAK,CAACK,YAAN,CAAmBU,QAAnB,CAA4BR,GAA5B,CACE,UAAAQ,QAAQ;AAAA,SAAIA,QAAJ;AAAA,CADV,EAEE,UAAAF,KAAK,EAAI;AACP,MAAIA,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeC,MAAf,IAAyB,GAA/C,EAAoD;AAClDrB,IAAAA,WAAW,CAACsB,iBAAZ;AAEAvB,IAAAA,MAAM,CAACwB,IAAP,CAAY;AACVC,MAAAA,IAAI,EAAE,OADI;AAEVC,MAAAA,MAAM,EAAE;AACNC,QAAAA,cAAc,EAAE;AADV;AAFE,KAAZ;AAMD,GATD,MASO;AACL,WAAO,SAAQP,MAAR,CAAeD,KAAf,CAAP;AACD;AACF,CAfH;AAkBA,eAAeb,KAAf","sourcesContent":["import Axios from 'axios'\r\nimport Router from './router'\r\nimport UserService from './services/user_service'\r\n\r\nconst apiUrl = `${process.env.VUE_APP_API_URL || \"http://localhost:5000/sogyolunchapi\"}`\r\n\r\nconst axios = Axios.create({\r\n  baseURL: apiUrl,\r\n  headers: {\r\n    \"Access-Control-Allow-Origin\": apiUrl\r\n  },\r\n  timeout: 20000\r\n});\r\n\r\n// Add authorization header\r\naxios.interceptors.request.use(\r\n  config => {\r\n    if (config.baseURL !== apiUrl || config.headers.Authorization) {\r\n      return config;\r\n    }\r\n    let user = UserService.getUser()\r\n    if (user) {\r\n      if (user.accessToken) {\r\n        config.headers.Authorization = `Bearer ${user.accessToken}`\r\n      }\r\n    }\r\n    return config;\r\n  },\r\n  error => Promise.reject(error)\r\n);\r\n\r\naxios.interceptors.response.use(\r\n  response => response,\r\n  error => {\r\n    if (error.response && error.response.status == 401) {\r\n      UserService.removeCredentials()\r\n  \r\n      Router.push({\r\n        name: 'login',\r\n        params: {\r\n          initialMessage: \"De sessie is verlopen. Je moet opnieuw inloggen.\"\r\n        }\r\n      })\r\n    } else {\r\n      return Promise.reject(error)\r\n    }\r\n  }\r\n);\r\n\r\nexport default axios;"]}]}