{"remainingRequest":"C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\src\\components\\Bestelhistorie\\Bestelhistorie.component.js?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\src\\components\\Bestelhistorie\\Bestelhistorie.component.js","mtime":1554385549335},{"path":"C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _getIterator from \"C:\\\\Users\\\\rsmits\\\\Documents\\\\lanthir-lunch\\\\Client\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/get-iterator\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\rsmits\\\\Documents\\\\lanthir-lunch\\\\Client\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nimport apiPath from '../../Filepaths';\nexport default {\n  name: 'Bestelhistorie',\n  data: function data() {\n    return {\n      headers: [{\n        text: 'Product',\n        align: 'left',\n        sortable: true,\n        value: 'productnaam'\n      }, {\n        text: 'Aantal',\n        value: 'aantal'\n      }, {\n        text: 'Prijs',\n        value: 'prijs'\n      }, {\n        text: 'Bezorgdatum',\n        value: 'datum'\n      }],\n      search: '',\n      bestellingen: [],\n      producten: [],\n      rowsPerPageItems: [50, 20, 30, {\n        \"text\": \"All\",\n        \"value\": -1\n      }]\n    };\n  },\n  mounted: function mounted() {\n    this.fetchBestellingenPerGebruiker();\n  },\n  methods: {\n    prijsGeformatteerd: function prijsGeformatteerd(prijs) {\n      prijs = prijs.toString();\n\n      while (prijs.length < 3) {\n        prijs = \"0\" + prijs;\n      }\n\n      return prijs.substring(0, prijs.length - 2) + \".\" + prijs.substring(prijs.length - 2);\n    },\n    // voor bestelhistorie; gebruiker moet nog toegevoegd worden\n    fetchBestellingenPerGebruiker: function () {\n      var _fetchBestellingenPerGebruiker = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"\".concat(apiPath, \"bestelling\"));\n\n              case 2:\n                response = _context.sent;\n                _context.next = 5;\n                return response.json();\n\n              case 5:\n                this.bestellingen = _context.sent;\n                this.productenUitBestellingen();\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function fetchBestellingenPerGebruiker() {\n        return _fetchBestellingenPerGebruiker.apply(this, arguments);\n      }\n\n      return fetchBestellingenPerGebruiker;\n    }(),\n    productenUitBestellingen: function productenUitBestellingen() {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = _getIterator(this.bestellingen), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var bestelling = _step.value;\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = _getIterator(bestelling.productenPerBestellingen), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var product = _step2.value;\n              this.producten.push({\n                \"productId\": product.product.productId,\n                \"datum\": bestelling.bezorgdatum,\n                \"productnaam\": product.product.naam,\n                \"aantal\": product.aantal,\n                \"prijs\": product.prijs\n              });\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["C:\\Users\\rsmits\\Documents\\lanthir-lunch\\Client\\src\\components\\Bestelhistorie\\Bestelhistorie.component.js"],"names":["apiPath","name","data","headers","text","align","sortable","value","search","bestellingen","producten","rowsPerPageItems","mounted","fetchBestellingenPerGebruiker","methods","prijsGeformatteerd","prijs","toString","length","substring","fetch","response","json","productenUitBestellingen","bestelling","productenPerBestellingen","product","push","productId","bezorgdatum","naam","aantal"],"mappings":";;;;;AAAA,OAAOA,OAAP,MAAoB,iBAApB;AAGA,eAAe;AACXC,EAAAA,IAAI,EAAE,gBADK;AAGXC,EAAAA,IAHW,kBAGJ;AACH,WAAO;AACHC,MAAAA,OAAO,EAAE,CACL;AACIC,QAAAA,IAAI,EAAE,SADV;AAEIC,QAAAA,KAAK,EAAE,MAFX;AAGIC,QAAAA,QAAQ,EAAE,IAHd;AAIIC,QAAAA,KAAK,EAAE;AAJX,OADK,EAOL;AACIH,QAAAA,IAAI,EAAE,QADV;AAEIG,QAAAA,KAAK,EAAE;AAFX,OAPK,EAWL;AACIH,QAAAA,IAAI,EAAE,OADV;AAEIG,QAAAA,KAAK,EAAE;AAFX,OAXK,EAeL;AACIH,QAAAA,IAAI,EAAE,aADV;AAEIG,QAAAA,KAAK,EAAE;AAFX,OAfK,CADN;AAsBHC,MAAAA,MAAM,EAAE,EAtBL;AAyBHC,MAAAA,YAAY,EAAE,EAzBX;AA2BHC,MAAAA,SAAS,EAAE,EA3BR;AA6BHC,MAAAA,gBAAgB,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa;AAAE,gBAAQ,KAAV;AAAiB,iBAAS,CAAC;AAA3B,OAAb;AA7Bf,KAAP;AA+BH,GAnCU;AAqCXC,EAAAA,OArCW,qBAqCD;AACN,SAAKC,6BAAL;AACH,GAvCU;AA0CXC,EAAAA,OAAO,EAAE;AAELC,IAAAA,kBAFK,8BAEcC,KAFd,EAEqB;AACtBA,MAAAA,KAAK,GAAGA,KAAK,CAACC,QAAN,EAAR;;AACA,aAAOD,KAAK,CAACE,MAAN,GAAe,CAAtB,EAAyB;AACrBF,QAAAA,KAAK,GAAG,MAAMA,KAAd;AACH;;AACD,aAAOA,KAAK,CAACG,SAAN,CAAgB,CAAhB,EAAmBH,KAAK,CAACE,MAAN,GAAe,CAAlC,IAAuC,GAAvC,GAA6CF,KAAK,CAACG,SAAN,CAAgBH,KAAK,CAACE,MAAN,GAAe,CAA/B,CAApD;AACH,KARI;AAUL;AAEML,IAAAA,6BAZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAgBoBO,KAAK,WAAIpB,OAAJ,gBAhBzB;;AAAA;AAgBGqB,gBAAAA,QAhBH;AAAA;AAAA,uBAiByBA,QAAQ,CAACC,IAAT,EAjBzB;;AAAA;AAiBD,qBAAKb,YAjBJ;AAkBD,qBAAKc,wBAAL;;AAlBC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAuBHA,IAAAA,wBAvBG,sCAuBwB;AAAA;AAAA;AAAA;;AAAA;AACzB,0CAAuB,KAAKd,YAA5B,4GAA0C;AAAA,cAAjCe,UAAiC;AAAA;AAAA;AAAA;;AAAA;AAEtC,+CAAoBA,UAAU,CAACC,wBAA/B,iHAAyD;AAAA,kBAAhDC,OAAgD;AACrD,mBAAKhB,SAAL,CAAeiB,IAAf,CAAoB;AAAE,6BAAaD,OAAO,CAACA,OAAR,CAAgBE,SAA/B;AAA0C,yBAASJ,UAAU,CAACK,WAA9D;AAA2E,+BAAeH,OAAO,CAACA,OAAR,CAAgBI,IAA1G;AAAgH,0BAAUJ,OAAO,CAACK,MAAlI;AAA0I,yBAASL,OAAO,CAACV;AAA3J,eAApB;AACH;AAJqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKzC;AANwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQ5B;AA/BI;AA1CE,CAAf","sourcesContent":["import apiPath from '../../Filepaths';\r\n\r\n\r\nexport default {\r\n    name: 'Bestelhistorie',\r\n\r\n    data() {\r\n        return {\r\n            headers: [\r\n                {\r\n                    text: 'Product',\r\n                    align: 'left',\r\n                    sortable: true,\r\n                    value: 'productnaam'\r\n                },\r\n                {\r\n                    text: 'Aantal',\r\n                    value: 'aantal'\r\n                },\r\n                {\r\n                    text: 'Prijs',\r\n                    value: 'prijs'\r\n                },\r\n                {\r\n                    text: 'Bezorgdatum',\r\n                    value: 'datum'\r\n                },\r\n            \r\n            ],\r\n            search: '',\r\n\r\n\r\n            bestellingen: [],\r\n\r\n            producten: [],\r\n\r\n            rowsPerPageItems: [50, 20, 30, { \"text\": \"All\", \"value\": -1 }],\r\n        };\r\n    },\r\n\r\n    mounted() {\r\n        this.fetchBestellingenPerGebruiker();\r\n    },\r\n\r\n\r\n    methods: {\r\n\r\n        prijsGeformatteerd(prijs) {\r\n            prijs = prijs.toString();\r\n            while (prijs.length < 3) {\r\n                prijs = \"0\" + prijs;\r\n            }\r\n            return prijs.substring(0, prijs.length - 2) + \".\" + prijs.substring(prijs.length - 2);\r\n        },\r\n\r\n        // voor bestelhistorie; gebruiker moet nog toegevoegd worden\r\n\r\n        async fetchBestellingenPerGebruiker() {\r\n            \r\n            //this.bestellingen = [];\r\n            //this.producten = [];\r\n            let response = await fetch(`${apiPath}bestelling`);\r\n            this.bestellingen = await response.json();\r\n            this.productenUitBestellingen();\r\n            \r\n        },\r\n\r\n\r\n          productenUitBestellingen() {\r\n            for (let bestelling of this.bestellingen) {\r\n\r\n                for (let product of bestelling.productenPerBestellingen) {\r\n                    this.producten.push({ \"productId\": product.product.productId, \"datum\": bestelling.bezorgdatum, \"productnaam\": product.product.naam, \"aantal\": product.aantal, \"prijs\": product.prijs }  )\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n       \r\n    }\r\n};\r\n\r\n\r\n"]}]}