2019-04-18 13:25:19.644 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:25:20.747 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:25:27.049 +02:00 [Error] Failed executing DbCommand ("73"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [key].[Xml]
FROM [DataProtectionKeys] AS [key]"
System.Data.SqlClient.SqlException (0x80131904): Invalid object name 'DataProtectionKeys'.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at System.Data.SqlClient.SqlDataReader.get_MetaData()
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite, String method)
   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)
   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at System.Data.Common.DbCommand.ExecuteReader()
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Execute(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues)
ClientConnectionId:87026766-b6ce-434d-9dec-4d4b970c1ab2
Error Number:208,State:1,Class:16
2019-04-18 13:25:27.134 +02:00 [Error] An exception occurred while iterating over the results of a query for context type '"Repository.LunchAppContext"'."
""System.Data.SqlClient.SqlException (0x80131904): Invalid object name 'DataProtectionKeys'.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at System.Data.SqlClient.SqlDataReader.get_MetaData()
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite, String method)
   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)
   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at System.Data.Common.DbCommand.ExecuteReader()
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Execute(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues)
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReader(IRelationalConnection connection, IReadOnlyDictionary`2 parameterValues)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementation[TState,TResult](Func`3 operation, Func`3 verifySucceeded, TState state)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()
   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()
ClientConnectionId:87026766-b6ce-434d-9dec-4d4b970c1ab2
Error Number:208,State:1,Class:16"
System.Data.SqlClient.SqlException (0x80131904): Invalid object name 'DataProtectionKeys'.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at System.Data.SqlClient.SqlDataReader.get_MetaData()
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite, String method)
   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)
   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at System.Data.Common.DbCommand.ExecuteReader()
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Execute(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues)
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReader(IRelationalConnection connection, IReadOnlyDictionary`2 parameterValues)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementation[TState,TResult](Func`3 operation, Func`3 verifySucceeded, TState state)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()
   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()
ClientConnectionId:87026766-b6ce-434d-9dec-4d4b970c1ab2
Error Number:208,State:1,Class:16
2019-04-18 13:25:27.159 +02:00 [Error] An error occurred while reading the key ring.
System.Data.SqlClient.SqlException (0x80131904): Invalid object name 'DataProtectionKeys'.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at System.Data.SqlClient.SqlDataReader.get_MetaData()
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite, String method)
   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)
   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at System.Data.Common.DbCommand.ExecuteReader()
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Execute(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues)
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReader(IRelationalConnection connection, IReadOnlyDictionary`2 parameterValues)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementation[TState,TResult](Func`3 operation, Func`3 verifySucceeded, TState state)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()
   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()
   at System.Collections.Generic.List`1.AddEnumerable(IEnumerable`1 enumerable)
   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   at Microsoft.AspNetCore.DataProtection.EntityFrameworkCore.EntityFrameworkCoreXmlRepository`1.GetAllElements()
   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.GetAllKeys()
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.ICacheableKeyRingProvider.GetCacheableKeyRing(DateTimeOffset now)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)
ClientConnectionId:87026766-b6ce-434d-9dec-4d4b970c1ab2
Error Number:208,State:1,Class:16
2019-04-18 13:25:27.180 +02:00 [Information] Key ring failed to load during application startup.
System.Data.SqlClient.SqlException (0x80131904): Invalid object name 'DataProtectionKeys'.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlDataReader.TryConsumeMetaData()
   at System.Data.SqlClient.SqlDataReader.get_MetaData()
   at System.Data.SqlClient.SqlCommand.FinishExecuteReader(SqlDataReader ds, RunBehavior runBehavior, String resetOptionsString)
   at System.Data.SqlClient.SqlCommand.RunExecuteReaderTds(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, Boolean async, Int32 timeout, Task& task, Boolean asyncWrite, SqlDataReader ds)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, TaskCompletionSource`1 completion, Int32 timeout, Task& task, Boolean asyncWrite, String method)
   at System.Data.SqlClient.SqlCommand.ExecuteReader(CommandBehavior behavior)
   at System.Data.SqlClient.SqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at System.Data.Common.DbCommand.ExecuteReader()
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Execute(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues)
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReader(IRelationalConnection connection, IReadOnlyDictionary`2 parameterValues)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementation[TState,TResult](Func`3 operation, Func`3 verifySucceeded, TState state)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()
   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()
   at System.Collections.Generic.List`1.AddEnumerable(IEnumerable`1 enumerable)
   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   at Microsoft.AspNetCore.DataProtection.EntityFrameworkCore.EntityFrameworkCoreXmlRepository`1.GetAllElements()
   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.GetAllKeys()
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.ICacheableKeyRingProvider.GetCacheableKeyRing(DateTimeOffset now)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRing()
   at Microsoft.AspNetCore.DataProtection.Internal.DataProtectionStartupFilter.Configure(Action`1 next)
ClientConnectionId:87026766-b6ce-434d-9dec-4d4b970c1ab2
Error Number:208,State:1,Class:16
2019-04-18 13:25:27.201 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:25:27.226 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:25:27.273 +02:00 [Information] Executed DbCommand ("22"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT OBJECT_ID(N'[__EFMigrationsHistory]');"
2019-04-18 13:25:27.279 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT OBJECT_ID(N'[__EFMigrationsHistory]');"
2019-04-18 13:25:27.288 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];"
2019-04-18 13:25:27.342 +02:00 [Information] Applying migration '"20190417103448_Initial"'.
2019-04-18 13:25:27.433 +02:00 [Information] Executed DbCommand ("16"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""CREATE TABLE [AspNetRoles] (
    [Id] uniqueidentifier NOT NULL,
    [Name] nvarchar(256) NULL,
    [NormalizedName] nvarchar(256) NULL,
    [ConcurrencyStamp] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetRoles] PRIMARY KEY ([Id])
);"
2019-04-18 13:25:27.440 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""CREATE TABLE [AspNetUsers] (
    [Id] uniqueidentifier NOT NULL,
    [UserName] nvarchar(256) NULL,
    [NormalizedUserName] nvarchar(256) NULL,
    [Email] nvarchar(256) NULL,
    [NormalizedEmail] nvarchar(256) NULL,
    [EmailConfirmed] bit NOT NULL,
    [PasswordHash] nvarchar(max) NULL,
    [SecurityStamp] nvarchar(max) NULL,
    [ConcurrencyStamp] nvarchar(max) NULL,
    [PhoneNumber] nvarchar(max) NULL,
    [PhoneNumberConfirmed] bit NOT NULL,
    [TwoFactorEnabled] bit NOT NULL,
    [LockoutEnd] datetimeoffset NULL,
    [LockoutEnabled] bit NOT NULL,
    [AccessFailedCount] int NOT NULL,
    CONSTRAINT [PK_AspNetUsers] PRIMARY KEY ([Id])
);"
2019-04-18 13:25:27.445 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""CREATE TABLE [DataProtectionKeys] (
    [Id] int NOT NULL IDENTITY,
    [FriendlyName] nvarchar(max) NULL,
    [Xml] nvarchar(max) NULL,
    CONSTRAINT [PK_DataProtectionKeys] PRIMARY KEY ([Id])
);"
2019-04-18 13:25:27.448 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""CREATE TABLE [IdentityRole] (
    [Id] nvarchar(450) NOT NULL,
    [Name] nvarchar(max) NULL,
    [NormalizedName] nvarchar(max) NULL,
    [ConcurrencyStamp] nvarchar(max) NULL,
    CONSTRAINT [PK_IdentityRole] PRIMARY KEY ([Id])
);"
2019-04-18 13:25:27.466 +02:00 [Error] Failed executing DbCommand ("15"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""CREATE TABLE [Winkels] (
    [WinkelId] int NOT NULL IDENTITY,
    [Winkelnaam] nvarchar(max) NOT NULL,
    [Winkellocatie] nvarchar(max) NULL,
    CONSTRAINT [PK_Winkels] PRIMARY KEY ([WinkelId])
);"
System.Data.SqlClient.SqlException (0x80131904): There is already an object named 'Winkels' in the database.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlCommand.EndExecuteNonQueryInternal(IAsyncResult asyncResult)
   at System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
ClientConnectionId:87026766-b6ce-434d-9dec-4d4b970c1ab2
Error Number:2714,State:6,Class:16
2019-04-18 13:26:24.942 +02:00 [Fatal] Application startup exception
System.AggregateException: One or more errors occurred. (There is already an object named 'Winkels' in the database.) ---> System.Data.SqlClient.SqlException: There is already an object named 'Winkels' in the database.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlCommand.EndExecuteNonQueryInternal(IAsyncResult asyncResult)
   at System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.MigrationCommand.ExecuteNonQueryAsync(IRelationalConnection connection, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationCommandExecutor.ExecuteNonQueryAsync(IEnumerable`1 migrationCommands, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.MigrateAsync(String targetMigration, CancellationToken cancellationToken)
   at Repository.DBInitializer.Migrate() in C:\Users\rsmits\Documents\lanthir-lunch\SogyoLunchApp\Repository\DBInitializer.cs:line 35
   --- End of inner exception stack trace ---
   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)
   at System.Threading.Tasks.Task.Wait()
   at Services.Startup.AppInitializeDatbase(IApplicationBuilder app) in C:\Users\rsmits\Documents\lanthir-lunch\SogyoLunchApp\Services\Startup.cs:line 93
   at Services.Startup.Configure(IApplicationBuilder app, IHostingEnvironment env) in C:\Users\rsmits\Documents\lanthir-lunch\SogyoLunchApp\Services\Startup.cs:line 72
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Hosting.ConventionBasedStartup.Configure(IApplicationBuilder app)
   at Microsoft.AspNetCore.Mvc.Internal.MiddlewareFilterBuilderStartupFilter.<>c__DisplayClass0_0.<Configure>g__MiddlewareFilterBuilder|0(IApplicationBuilder builder)
   at Microsoft.AspNetCore.Hosting.Internal.AutoRequestServicesStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder builder)
   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()
---> (Inner Exception #0) System.Data.SqlClient.SqlException (0x80131904): There is already an object named 'Winkels' in the database.
   at System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at System.Data.SqlClient.SqlCommand.EndExecuteNonQueryInternal(IAsyncResult asyncResult)
   at System.Data.SqlClient.SqlCommand.EndExecuteNonQuery(IAsyncResult asyncResult)
   at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.MigrationCommand.ExecuteNonQueryAsync(IRelationalConnection connection, IReadOnlyDictionary`2 parameterValues, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationCommandExecutor.ExecuteNonQueryAsync(IEnumerable`1 migrationCommands, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.MigrateAsync(String targetMigration, CancellationToken cancellationToken)
   at Repository.DBInitializer.Migrate() in C:\Users\rsmits\Documents\lanthir-lunch\SogyoLunchApp\Repository\DBInitializer.cs:line 35
ClientConnectionId:87026766-b6ce-434d-9dec-4d4b970c1ab2
Error Number:2714,State:6,Class:16<---

2019-04-18 13:26:35.936 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:26:36.573 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:26:46.819 +02:00 [Error] An error occurred using the connection to database '"LanthirLunch"' on server '"(localdb)\mssqllocaldb"'.
System.Data.SqlClient.SqlException (0x80131904): Cannot open database "LanthirLunch" requested by the login. The login failed.
Login failed for user 'SOGYO\rsmits'.
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   at System.Data.SqlClient.SqlConnection.Open()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnection(Boolean errorsExpected)
ClientConnectionId:f18a1906-8b10-4573-a52b-a9743bc9283a
Error Number:4060,State:1,Class:11
2019-04-18 13:26:46.912 +02:00 [Error] An exception occurred while iterating over the results of a query for context type '"Repository.LunchAppContext"'."
""System.Data.SqlClient.SqlException (0x80131904): Cannot open database \"LanthirLunch\" requested by the login. The login failed.
Login failed for user 'SOGYO\rsmits'.
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   at System.Data.SqlClient.SqlConnection.Open()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnection(Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open(Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementation[TState,TResult](Func`3 operation, Func`3 verifySucceeded, TState state)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()
   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()
ClientConnectionId:f18a1906-8b10-4573-a52b-a9743bc9283a
Error Number:4060,State:1,Class:11"
System.Data.SqlClient.SqlException (0x80131904): Cannot open database "LanthirLunch" requested by the login. The login failed.
Login failed for user 'SOGYO\rsmits'.
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   at System.Data.SqlClient.SqlConnection.Open()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnection(Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open(Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementation[TState,TResult](Func`3 operation, Func`3 verifySucceeded, TState state)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()
   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()
ClientConnectionId:f18a1906-8b10-4573-a52b-a9743bc9283a
Error Number:4060,State:1,Class:11
2019-04-18 13:26:46.968 +02:00 [Error] An error occurred while reading the key ring.
System.Data.SqlClient.SqlException (0x80131904): Cannot open database "LanthirLunch" requested by the login. The login failed.
Login failed for user 'SOGYO\rsmits'.
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   at System.Data.SqlClient.SqlConnection.Open()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnection(Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open(Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementation[TState,TResult](Func`3 operation, Func`3 verifySucceeded, TState state)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()
   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()
   at System.Collections.Generic.List`1.AddEnumerable(IEnumerable`1 enumerable)
   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   at Microsoft.AspNetCore.DataProtection.EntityFrameworkCore.EntityFrameworkCoreXmlRepository`1.GetAllElements()
   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.GetAllKeys()
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.ICacheableKeyRingProvider.GetCacheableKeyRing(DateTimeOffset now)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)
ClientConnectionId:f18a1906-8b10-4573-a52b-a9743bc9283a
Error Number:4060,State:1,Class:11
2019-04-18 13:26:47.015 +02:00 [Information] Key ring failed to load during application startup.
System.Data.SqlClient.SqlException (0x80131904): Cannot open database "LanthirLunch" requested by the login. The login failed.
Login failed for user 'SOGYO\rsmits'.
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   at System.Data.SqlClient.SqlConnection.Open()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnection(Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open(Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementation[TState,TResult](Func`3 operation, Func`3 verifySucceeded, TState state)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()
   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()
   at System.Collections.Generic.List`1.AddEnumerable(IEnumerable`1 enumerable)
   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   at Microsoft.AspNetCore.DataProtection.EntityFrameworkCore.EntityFrameworkCoreXmlRepository`1.GetAllElements()
   at Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager.GetAllKeys()
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.CreateCacheableKeyRingCore(DateTimeOffset now, IKey keyJustAdded)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.Microsoft.AspNetCore.DataProtection.KeyManagement.Internal.ICacheableKeyRingProvider.GetCacheableKeyRing(DateTimeOffset now)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRingCore(DateTime utcNow)
   at Microsoft.AspNetCore.DataProtection.KeyManagement.KeyRingProvider.GetCurrentKeyRing()
   at Microsoft.AspNetCore.DataProtection.Internal.DataProtectionStartupFilter.Configure(Action`1 next)
ClientConnectionId:f18a1906-8b10-4573-a52b-a9743bc9283a
Error Number:4060,State:1,Class:11
2019-04-18 13:26:47.052 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:26:47.071 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:26:48.055 +02:00 [Information] Executed DbCommand ("885"ms) [Parameters=[""], CommandType='Text', CommandTimeout='60']"
""CREATE DATABASE [LanthirLunch];"
2019-04-18 13:26:48.142 +02:00 [Information] Executed DbCommand ("65"ms) [Parameters=[""], CommandType='Text', CommandTimeout='60']"
""IF SERVERPROPERTY('EngineEdition') <> 5
BEGIN
    ALTER DATABASE [LanthirLunch] SET READ_COMMITTED_SNAPSHOT ON;
END;"
2019-04-18 13:26:48.448 +02:00 [Information] Executed DbCommand ("243"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""CREATE TABLE [__EFMigrationsHistory] (
    [MigrationId] nvarchar(150) NOT NULL,
    [ProductVersion] nvarchar(32) NOT NULL,
    CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
);"
2019-04-18 13:26:48.471 +02:00 [Information] Executed DbCommand ("18"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT OBJECT_ID(N'[__EFMigrationsHistory]');"
2019-04-18 13:26:48.479 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];"
2019-04-18 13:26:48.500 +02:00 [Information] Applying migration '"20190417103448_Initial"'.
2019-04-18 13:26:48.593 +02:00 [Information] Executed DbCommand ("33"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""CREATE TABLE [AspNetRoles] (
    [Id] uniqueidentifier NOT NULL,
    [Name] nvarchar(256) NULL,
    [NormalizedName] nvarchar(256) NULL,
    [ConcurrencyStamp] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetRoles] PRIMARY KEY ([Id])
);"
2019-04-18 13:26:48.643 +02:00 [Information] Executed DbCommand ("44"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""CREATE TABLE [AspNetUsers] (
    [Id] uniqueidentifier NOT NULL,
    [UserName] nvarchar(256) NULL,
    [NormalizedUserName] nvarchar(256) NULL,
    [Email] nvarchar(256) NULL,
    [NormalizedEmail] nvarchar(256) NULL,
    [EmailConfirmed] bit NOT NULL,
    [PasswordHash] nvarchar(max) NULL,
    [SecurityStamp] nvarchar(max) NULL,
    [ConcurrencyStamp] nvarchar(max) NULL,
    [PhoneNumber] nvarchar(max) NULL,
    [PhoneNumberConfirmed] bit NOT NULL,
    [TwoFactorEnabled] bit NOT NULL,
    [LockoutEnd] datetimeoffset NULL,
    [LockoutEnabled] bit NOT NULL,
    [AccessFailedCount] int NOT NULL,
    CONSTRAINT [PK_AspNetUsers] PRIMARY KEY ([Id])
);"
2019-04-18 13:26:48.654 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""CREATE TABLE [DataProtectionKeys] (
    [Id] int NOT NULL IDENTITY,
    [FriendlyName] nvarchar(max) NULL,
    [Xml] nvarchar(max) NULL,
    CONSTRAINT [PK_DataProtectionKeys] PRIMARY KEY ([Id])
);"
2019-04-18 13:26:48.661 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""CREATE TABLE [IdentityRole] (
    [Id] nvarchar(450) NOT NULL,
    [Name] nvarchar(max) NULL,
    [NormalizedName] nvarchar(max) NULL,
    [ConcurrencyStamp] nvarchar(max) NULL,
    CONSTRAINT [PK_IdentityRole] PRIMARY KEY ([Id])
);"
2019-04-18 13:26:48.677 +02:00 [Information] Executed DbCommand ("12"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""CREATE TABLE [Winkels] (
    [WinkelId] int NOT NULL IDENTITY,
    [Winkelnaam] nvarchar(max) NOT NULL,
    [Winkellocatie] nvarchar(max) NULL,
    CONSTRAINT [PK_Winkels] PRIMARY KEY ([WinkelId])
);"
2019-04-18 13:26:48.727 +02:00 [Information] Executed DbCommand ("47"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""CREATE TABLE [AspNetRoleClaims] (
    [Id] int NOT NULL IDENTITY,
    [RoleId] uniqueidentifier NOT NULL,
    [ClaimType] nvarchar(max) NULL,
    [ClaimValue] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetRoleClaims] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_AspNetRoleClaims_AspNetRoles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [AspNetRoles] ([Id]) ON DELETE CASCADE
);"
2019-04-18 13:26:48.732 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""CREATE TABLE [AspNetUserClaims] (
    [Id] int NOT NULL IDENTITY,
    [UserId] uniqueidentifier NOT NULL,
    [ClaimType] nvarchar(max) NULL,
    [ClaimValue] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetUserClaims] PRIMARY KEY ([Id]),
    CONSTRAINT [FK_AspNetUserClaims_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);"
2019-04-18 13:26:48.770 +02:00 [Information] Executed DbCommand ("34"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""CREATE TABLE [AspNetUserLogins] (
    [LoginProvider] nvarchar(450) NOT NULL,
    [ProviderKey] nvarchar(450) NOT NULL,
    [ProviderDisplayName] nvarchar(max) NULL,
    [UserId] uniqueidentifier NOT NULL,
    CONSTRAINT [PK_AspNetUserLogins] PRIMARY KEY ([LoginProvider], [ProviderKey]),
    CONSTRAINT [FK_AspNetUserLogins_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);"
2019-04-18 13:26:48.845 +02:00 [Information] Executed DbCommand ("71"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""CREATE TABLE [AspNetUserRoles] (
    [UserId] uniqueidentifier NOT NULL,
    [RoleId] uniqueidentifier NOT NULL,
    CONSTRAINT [PK_AspNetUserRoles] PRIMARY KEY ([UserId], [RoleId]),
    CONSTRAINT [FK_AspNetUserRoles_AspNetRoles_RoleId] FOREIGN KEY ([RoleId]) REFERENCES [AspNetRoles] ([Id]) ON DELETE CASCADE,
    CONSTRAINT [FK_AspNetUserRoles_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);"
2019-04-18 13:26:48.858 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""CREATE TABLE [AspNetUserTokens] (
    [UserId] uniqueidentifier NOT NULL,
    [LoginProvider] nvarchar(450) NOT NULL,
    [Name] nvarchar(450) NOT NULL,
    [Value] nvarchar(max) NULL,
    CONSTRAINT [PK_AspNetUserTokens] PRIMARY KEY ([UserId], [LoginProvider], [Name]),
    CONSTRAINT [FK_AspNetUserTokens_AspNetUsers_UserId] FOREIGN KEY ([UserId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);"
2019-04-18 13:26:48.868 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""CREATE TABLE [Bestellingen] (
    [BestellingId] int NOT NULL IDENTITY,
    [Besteldatum] datetime2 NOT NULL,
    [Bezorgdatum] datetime2 NOT NULL,
    [GebruikerId] uniqueidentifier NOT NULL,
    CONSTRAINT [PK_Bestellingen] PRIMARY KEY ([BestellingId]),
    CONSTRAINT [FK_Bestellingen_AspNetUsers_GebruikerId] FOREIGN KEY ([GebruikerId]) REFERENCES [AspNetUsers] ([Id]) ON DELETE CASCADE
);"
2019-04-18 13:26:48.889 +02:00 [Information] Executed DbCommand ("13"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""CREATE TABLE [Producten] (
    [ProductId] int NOT NULL IDENTITY,
    [Naam] nvarchar(max) NULL,
    [Prijs] int NOT NULL,
    [WinkelId] int NOT NULL,
    CONSTRAINT [PK_Producten] PRIMARY KEY ([ProductId]),
    CONSTRAINT [FK_Producten_Winkels_WinkelId] FOREIGN KEY ([WinkelId]) REFERENCES [Winkels] ([WinkelId]) ON DELETE CASCADE
);"
2019-04-18 13:26:48.908 +02:00 [Information] Executed DbCommand ("14"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""CREATE TABLE [StandaardWinkelsPerBezorgdagen] (
    [Dag] int NOT NULL,
    [WinkelId] int NULL,
    [BestelDeadlineDag] int NULL,
    [BestelDeadlineTijd] time NOT NULL,
    CONSTRAINT [PK_StandaardWinkelsPerBezorgdagen] PRIMARY KEY ([Dag]),
    CONSTRAINT [FK_StandaardWinkelsPerBezorgdagen_Winkels_WinkelId] FOREIGN KEY ([WinkelId]) REFERENCES [Winkels] ([WinkelId]) ON DELETE NO ACTION
);"
2019-04-18 13:26:48.947 +02:00 [Information] Executed DbCommand ("34"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""CREATE TABLE [WinkelUitzonderingenPerBezorgdagen] (
    [Date] datetime2 NOT NULL,
    [WinkelId] int NULL,
    [BestelDeadline] datetime2 NULL,
    CONSTRAINT [PK_WinkelUitzonderingenPerBezorgdagen] PRIMARY KEY ([Date]),
    CONSTRAINT [FK_WinkelUitzonderingenPerBezorgdagen_Winkels_WinkelId] FOREIGN KEY ([WinkelId]) REFERENCES [Winkels] ([WinkelId]) ON DELETE NO ACTION
);"
2019-04-18 13:26:48.954 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""CREATE TABLE [ProductenPerBestellingen] (
    [BestellingId] int NOT NULL,
    [ProductId] int NOT NULL,
    [Prijs] int NOT NULL,
    [Aantal] int NOT NULL,
    [Notitie] nvarchar(max) NULL,
    CONSTRAINT [PK_ProductenPerBestellingen] PRIMARY KEY ([BestellingId], [ProductId]),
    CONSTRAINT [FK_ProductenPerBestellingen_Bestellingen_BestellingId] FOREIGN KEY ([BestellingId]) REFERENCES [Bestellingen] ([BestellingId]) ON DELETE CASCADE,
    CONSTRAINT [FK_ProductenPerBestellingen_Producten_ProductId] FOREIGN KEY ([ProductId]) REFERENCES [Producten] ([ProductId]) ON DELETE CASCADE
);"
2019-04-18 13:26:49.580 +02:00 [Information] Executed DbCommand ("611"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'ConcurrencyStamp', N'Name', N'NormalizedName') AND [object_id] = OBJECT_ID(N'[IdentityRole]'))
    SET IDENTITY_INSERT [IdentityRole] ON;
INSERT INTO [IdentityRole] ([Id], [ConcurrencyStamp], [Name], [NormalizedName])
VALUES (N'51916355-944c-4d52-8641-6598d6983745', N'65fe010d-9573-46e3-9980-329f90291437', N'User', NULL),
(N'd0d5e76c-5632-4984-802f-c24e77c79eb6', N'1c4132cc-6ef2-44fb-84f8-322dcc990cd7', N'Admin', NULL);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'ConcurrencyStamp', N'Name', N'NormalizedName') AND [object_id] = OBJECT_ID(N'[IdentityRole]'))
    SET IDENTITY_INSERT [IdentityRole] OFF;"
2019-04-18 13:26:49.619 +02:00 [Information] Executed DbCommand ("34"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Dag', N'BestelDeadlineDag', N'BestelDeadlineTijd', N'WinkelId') AND [object_id] = OBJECT_ID(N'[StandaardWinkelsPerBezorgdagen]'))
    SET IDENTITY_INSERT [StandaardWinkelsPerBezorgdagen] ON;
INSERT INTO [StandaardWinkelsPerBezorgdagen] ([Dag], [BestelDeadlineDag], [BestelDeadlineTijd], [WinkelId])
VALUES (2, NULL, '00:00:00', NULL),
(4, NULL, '00:00:00', NULL),
(6, NULL, '00:00:00', NULL),
(0, NULL, '00:00:00', NULL);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Dag', N'BestelDeadlineDag', N'BestelDeadlineTijd', N'WinkelId') AND [object_id] = OBJECT_ID(N'[StandaardWinkelsPerBezorgdagen]'))
    SET IDENTITY_INSERT [StandaardWinkelsPerBezorgdagen] OFF;"
2019-04-18 13:26:49.657 +02:00 [Information] Executed DbCommand ("32"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'WinkelId', N'Winkellocatie', N'Winkelnaam') AND [object_id] = OBJECT_ID(N'[Winkels]'))
    SET IDENTITY_INSERT [Winkels] ON;
INSERT INTO [Winkels] ([WinkelId], [Winkellocatie], [Winkelnaam])
VALUES (1, NULL, N'Albert Heijn Bezorgservice'),
(2, NULL, N'snackbar');
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'WinkelId', N'Winkellocatie', N'Winkelnaam') AND [object_id] = OBJECT_ID(N'[Winkels]'))
    SET IDENTITY_INSERT [Winkels] OFF;"
2019-04-18 13:26:49.708 +02:00 [Information] Executed DbCommand ("46"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ProductId', N'Naam', N'Prijs', N'WinkelId') AND [object_id] = OBJECT_ID(N'[Producten]'))
    SET IDENTITY_INSERT [Producten] ON;
INSERT INTO [Producten] ([ProductId], [Naam], [Prijs], [WinkelId])
VALUES (-1, N'Kaas', 120, 1),
(-2, N'Bier', 220, 1),
(-3, N'Kroket', 180, 2);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'ProductId', N'Naam', N'Prijs', N'WinkelId') AND [object_id] = OBJECT_ID(N'[Producten]'))
    SET IDENTITY_INSERT [Producten] OFF;"
2019-04-18 13:26:49.723 +02:00 [Information] Executed DbCommand ("10"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Dag', N'BestelDeadlineDag', N'BestelDeadlineTijd', N'WinkelId') AND [object_id] = OBJECT_ID(N'[StandaardWinkelsPerBezorgdagen]'))
    SET IDENTITY_INSERT [StandaardWinkelsPerBezorgdagen] ON;
INSERT INTO [StandaardWinkelsPerBezorgdagen] ([Dag], [BestelDeadlineDag], [BestelDeadlineTijd], [WinkelId])
VALUES (1, 5, '11:00:00', 1),
(3, 1, '11:00:00', 1),
(5, 5, '11:00:00', 2);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Dag', N'BestelDeadlineDag', N'BestelDeadlineTijd', N'WinkelId') AND [object_id] = OBJECT_ID(N'[StandaardWinkelsPerBezorgdagen]'))
    SET IDENTITY_INSERT [StandaardWinkelsPerBezorgdagen] OFF;"
2019-04-18 13:26:49.730 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""CREATE INDEX [IX_AspNetRoleClaims_RoleId] ON [AspNetRoleClaims] ([RoleId]);"
2019-04-18 13:26:49.735 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""CREATE UNIQUE INDEX [RoleNameIndex] ON [AspNetRoles] ([NormalizedName]) WHERE [NormalizedName] IS NOT NULL;"
2019-04-18 13:26:49.738 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""CREATE INDEX [IX_AspNetUserClaims_UserId] ON [AspNetUserClaims] ([UserId]);"
2019-04-18 13:26:49.743 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""CREATE INDEX [IX_AspNetUserLogins_UserId] ON [AspNetUserLogins] ([UserId]);"
2019-04-18 13:26:49.746 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""CREATE INDEX [IX_AspNetUserRoles_RoleId] ON [AspNetUserRoles] ([RoleId]);"
2019-04-18 13:26:49.749 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""CREATE INDEX [EmailIndex] ON [AspNetUsers] ([NormalizedEmail]);"
2019-04-18 13:26:49.754 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""CREATE UNIQUE INDEX [UserNameIndex] ON [AspNetUsers] ([NormalizedUserName]) WHERE [NormalizedUserName] IS NOT NULL;"
2019-04-18 13:26:49.758 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""CREATE INDEX [IX_Bestellingen_GebruikerId] ON [Bestellingen] ([GebruikerId]);"
2019-04-18 13:26:49.818 +02:00 [Information] Executed DbCommand ("56"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""CREATE INDEX [IX_Producten_WinkelId] ON [Producten] ([WinkelId]);"
2019-04-18 13:26:49.826 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""CREATE INDEX [IX_ProductenPerBestellingen_ProductId] ON [ProductenPerBestellingen] ([ProductId]);"
2019-04-18 13:26:49.856 +02:00 [Information] Executed DbCommand ("25"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""CREATE INDEX [IX_StandaardWinkelsPerBezorgdagen_WinkelId] ON [StandaardWinkelsPerBezorgdagen] ([WinkelId]);"
2019-04-18 13:26:49.877 +02:00 [Information] Executed DbCommand ("13"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""CREATE INDEX [IX_WinkelUitzonderingenPerBezorgdagen_WinkelId] ON [WinkelUitzonderingenPerBezorgdagen] ([WinkelId]);"
2019-04-18 13:26:49.904 +02:00 [Information] Executed DbCommand ("24"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20190417103448_Initial', N'2.2.2-servicing-10034');"
2019-04-18 13:26:49.909 +02:00 [Information] Applying migration '"20190418090911_CategorieToegevoegd"'.
2019-04-18 13:26:50.057 +02:00 [Information] Executed DbCommand ("121"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""DELETE FROM [IdentityRole]
WHERE [Id] = N'51916355-944c-4d52-8641-6598d6983745';
SELECT @@ROWCOUNT;"
2019-04-18 13:26:50.087 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""DELETE FROM [IdentityRole]
WHERE [Id] = N'd0d5e76c-5632-4984-802f-c24e77c79eb6';
SELECT @@ROWCOUNT;"
2019-04-18 13:26:50.124 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""CREATE TABLE [Categorien] (
    [CategorieId] int NOT NULL IDENTITY,
    [CategorieNaam] nvarchar(max) NULL,
    [VolgordeNummer] int NULL,
    CONSTRAINT [PK_Categorien] PRIMARY KEY ([CategorieId])
);"
2019-04-18 13:26:50.144 +02:00 [Information] Executed DbCommand ("10"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'ConcurrencyStamp', N'Name', N'NormalizedName') AND [object_id] = OBJECT_ID(N'[IdentityRole]'))
    SET IDENTITY_INSERT [IdentityRole] ON;
INSERT INTO [IdentityRole] ([Id], [ConcurrencyStamp], [Name], [NormalizedName])
VALUES (N'38e2ec3d-c6e2-4d9b-bbf9-ecbd6fe2f9c1', N'614f27a0-02dd-4296-9988-0d936fa8b564', N'User', NULL);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'ConcurrencyStamp', N'Name', N'NormalizedName') AND [object_id] = OBJECT_ID(N'[IdentityRole]'))
    SET IDENTITY_INSERT [IdentityRole] OFF;"
2019-04-18 13:26:50.166 +02:00 [Information] Executed DbCommand ("11"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'ConcurrencyStamp', N'Name', N'NormalizedName') AND [object_id] = OBJECT_ID(N'[IdentityRole]'))
    SET IDENTITY_INSERT [IdentityRole] ON;
INSERT INTO [IdentityRole] ([Id], [ConcurrencyStamp], [Name], [NormalizedName])
VALUES (N'9fd0905f-903e-454c-ba91-0b357c6bbf56', N'af91d961-3b7f-4d12-9fe5-c14bfef17898', N'Admin', NULL);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'ConcurrencyStamp', N'Name', N'NormalizedName') AND [object_id] = OBJECT_ID(N'[IdentityRole]'))
    SET IDENTITY_INSERT [IdentityRole] OFF;"
2019-04-18 13:26:50.178 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20190418090911_CategorieToegevoegd', N'2.2.2-servicing-10034');"
2019-04-18 13:26:50.191 +02:00 [Information] Applying migration '"20190418091121_relatieProductCategorie"'.
2019-04-18 13:26:50.210 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""DELETE FROM [IdentityRole]
WHERE [Id] = N'38e2ec3d-c6e2-4d9b-bbf9-ecbd6fe2f9c1';
SELECT @@ROWCOUNT;"
2019-04-18 13:26:50.219 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""DELETE FROM [IdentityRole]
WHERE [Id] = N'9fd0905f-903e-454c-ba91-0b357c6bbf56';
SELECT @@ROWCOUNT;"
2019-04-18 13:26:50.242 +02:00 [Information] Executed DbCommand ("16"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""ALTER TABLE [Producten] ADD [CategorieId] int NULL;"
2019-04-18 13:26:50.252 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'ConcurrencyStamp', N'Name', N'NormalizedName') AND [object_id] = OBJECT_ID(N'[IdentityRole]'))
    SET IDENTITY_INSERT [IdentityRole] ON;
INSERT INTO [IdentityRole] ([Id], [ConcurrencyStamp], [Name], [NormalizedName])
VALUES (N'31a684d8-77c7-4908-a48a-88ce2874fb47', N'07b80bcb-8915-4595-ab95-a8a8d718696b', N'User', NULL);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'ConcurrencyStamp', N'Name', N'NormalizedName') AND [object_id] = OBJECT_ID(N'[IdentityRole]'))
    SET IDENTITY_INSERT [IdentityRole] OFF;"
2019-04-18 13:26:50.263 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'ConcurrencyStamp', N'Name', N'NormalizedName') AND [object_id] = OBJECT_ID(N'[IdentityRole]'))
    SET IDENTITY_INSERT [IdentityRole] ON;
INSERT INTO [IdentityRole] ([Id], [ConcurrencyStamp], [Name], [NormalizedName])
VALUES (N'ad301c98-e0bd-47af-a000-01a6d8419800', N'5786dece-8e9b-4ece-b127-c0a52b13cea5', N'Admin', NULL);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'ConcurrencyStamp', N'Name', N'NormalizedName') AND [object_id] = OBJECT_ID(N'[IdentityRole]'))
    SET IDENTITY_INSERT [IdentityRole] OFF;"
2019-04-18 13:26:50.269 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20190418091121_relatieProductCategorie', N'2.2.2-servicing-10034');"
2019-04-18 13:26:50.274 +02:00 [Information] Applying migration '"20190418091521_CategorieObjectToegevoegd"'.
2019-04-18 13:26:50.293 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""DELETE FROM [IdentityRole]
WHERE [Id] = N'31a684d8-77c7-4908-a48a-88ce2874fb47';
SELECT @@ROWCOUNT;"
2019-04-18 13:26:50.297 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""DELETE FROM [IdentityRole]
WHERE [Id] = N'ad301c98-e0bd-47af-a000-01a6d8419800';
SELECT @@ROWCOUNT;"
2019-04-18 13:26:50.308 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'ConcurrencyStamp', N'Name', N'NormalizedName') AND [object_id] = OBJECT_ID(N'[IdentityRole]'))
    SET IDENTITY_INSERT [IdentityRole] ON;
INSERT INTO [IdentityRole] ([Id], [ConcurrencyStamp], [Name], [NormalizedName])
VALUES (N'4554aa7e-f324-4356-bd6c-1d0ad713632c', N'e551feaf-2b67-4c4a-93c0-1ae497aef0e4', N'User', NULL);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'ConcurrencyStamp', N'Name', N'NormalizedName') AND [object_id] = OBJECT_ID(N'[IdentityRole]'))
    SET IDENTITY_INSERT [IdentityRole] OFF;"
2019-04-18 13:26:50.320 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'ConcurrencyStamp', N'Name', N'NormalizedName') AND [object_id] = OBJECT_ID(N'[IdentityRole]'))
    SET IDENTITY_INSERT [IdentityRole] ON;
INSERT INTO [IdentityRole] ([Id], [ConcurrencyStamp], [Name], [NormalizedName])
VALUES (N'be6d7bdc-4070-4381-aa95-96a7c1ad384b', N'89000517-6a1a-44cd-91c5-58a982d8c7c4', N'Admin', NULL);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'ConcurrencyStamp', N'Name', N'NormalizedName') AND [object_id] = OBJECT_ID(N'[IdentityRole]'))
    SET IDENTITY_INSERT [IdentityRole] OFF;"
2019-04-18 13:26:50.352 +02:00 [Information] Executed DbCommand ("25"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""CREATE INDEX [IX_Producten_CategorieId] ON [Producten] ([CategorieId]);"
2019-04-18 13:26:50.358 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""ALTER TABLE [Producten] ADD CONSTRAINT [FK_Producten_Categorien_CategorieId] FOREIGN KEY ([CategorieId]) REFERENCES [Categorien] ([CategorieId]) ON DELETE NO ACTION;"
2019-04-18 13:26:50.362 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20190418091521_CategorieObjectToegevoegd', N'2.2.2-servicing-10034');"
2019-04-18 13:26:50.366 +02:00 [Information] Applying migration '"20190418094950_CategorieHeeftWinkel"'.
2019-04-18 13:26:50.384 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""DELETE FROM [IdentityRole]
WHERE [Id] = N'4554aa7e-f324-4356-bd6c-1d0ad713632c';
SELECT @@ROWCOUNT;"
2019-04-18 13:26:50.390 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""DELETE FROM [IdentityRole]
WHERE [Id] = N'be6d7bdc-4070-4381-aa95-96a7c1ad384b';
SELECT @@ROWCOUNT;"
2019-04-18 13:26:50.395 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""ALTER TABLE [Categorien] ADD [WinkelId] int NOT NULL DEFAULT 0;"
2019-04-18 13:26:50.406 +02:00 [Information] Executed DbCommand ("9"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'ConcurrencyStamp', N'Name', N'NormalizedName') AND [object_id] = OBJECT_ID(N'[IdentityRole]'))
    SET IDENTITY_INSERT [IdentityRole] ON;
INSERT INTO [IdentityRole] ([Id], [ConcurrencyStamp], [Name], [NormalizedName])
VALUES (N'8982c385-ecc6-4018-bcf6-5014c9821785', N'7870e89a-df1f-471f-a3b4-dee65fea04b9', N'User', NULL);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'ConcurrencyStamp', N'Name', N'NormalizedName') AND [object_id] = OBJECT_ID(N'[IdentityRole]'))
    SET IDENTITY_INSERT [IdentityRole] OFF;"
2019-04-18 13:26:50.419 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'ConcurrencyStamp', N'Name', N'NormalizedName') AND [object_id] = OBJECT_ID(N'[IdentityRole]'))
    SET IDENTITY_INSERT [IdentityRole] ON;
INSERT INTO [IdentityRole] ([Id], [ConcurrencyStamp], [Name], [NormalizedName])
VALUES (N'5bbf9cd5-5f71-4b78-804f-2d4d41473d98', N'980ce0c0-3e37-4a15-8d5b-45e7e197cd39', N'Admin', NULL);
IF EXISTS (SELECT * FROM [sys].[identity_columns] WHERE [name] IN (N'Id', N'ConcurrencyStamp', N'Name', N'NormalizedName') AND [object_id] = OBJECT_ID(N'[IdentityRole]'))
    SET IDENTITY_INSERT [IdentityRole] OFF;"
2019-04-18 13:26:50.426 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""CREATE INDEX [IX_Categorien_WinkelId] ON [Categorien] ([WinkelId]);"
2019-04-18 13:26:50.432 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""ALTER TABLE [Categorien] ADD CONSTRAINT [FK_Categorien_Winkels_WinkelId] FOREIGN KEY ([WinkelId]) REFERENCES [Winkels] ([WinkelId]) ON DELETE CASCADE;"
2019-04-18 13:26:50.436 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""INSERT INTO [__EFMigrationsHistory] ([MigrationId], [ProductVersion])
VALUES (N'20190418094950_CategorieHeeftWinkel', N'2.2.2-servicing-10034');"
2019-04-18 13:26:50.525 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__normalizedName_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [r].[Id], [r].[ConcurrencyStamp], [r].[Name], [r].[NormalizedName]
FROM [AspNetRoles] AS [r]
WHERE [r].[NormalizedName] = @__normalizedName_0"
2019-04-18 13:26:50.675 +02:00 [Information] Executed DbCommand ("46"ms) [Parameters=["@p0='?' (DbType = Guid), @p1='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
INSERT INTO [AspNetRoles] ([Id], [ConcurrencyStamp], [Name], [NormalizedName])
VALUES (@p0, @p1, @p2, @p3);"
2019-04-18 13:26:54.463 +02:00 [Information] Request starting HTTP/1.1 GET https://localhost:5001/api/values  
2019-04-18 13:26:54.906 +02:00 [Information] Sending file. Request path: '"/index.html"'. Physical path: '"C:\Users\rsmits\Documents\lanthir-lunch\SogyoLunchApp\Services\wwwroot\index.html"'
2019-04-18 13:26:54.966 +02:00 [Information] Request finished in 503.9894ms 200 text/html
2019-04-18 13:26:55.048 +02:00 [Information] Request starting HTTP/1.1 GET https://localhost:5001/api/Sogyologo.jpg  
2019-04-18 13:26:55.074 +02:00 [Information] Request finished in 25.582ms 404 
2019-04-18 13:27:16.420 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 13:27:16.434 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:27:16.435 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:27:16.439 +02:00 [Information] Request finished in 18.5337ms 204 
2019-04-18 13:27:16.485 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 13:27:16.494 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:27:16.662 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:27:16.739 +02:00 [Information] Route matched with "{action = \"getBezorgdagen\", controller = \"Bezorgdag\"}". Executing action "Services.APIService.BezorgdagController.getBezorgdagen (Services)"
2019-04-18 13:27:16.758 +02:00 [Information] Authorization failed.
2019-04-18 13:27:16.759 +02:00 [Information] Authorization failed for the request at filter '"Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter"'.
2019-04-18 13:27:16.766 +02:00 [Information] Executing ChallengeResult with authentication schemes ([]).
2019-04-18 13:27:16.776 +02:00 [Information] AuthenticationScheme: "Bearer" was challenged.
2019-04-18 13:27:16.780 +02:00 [Information] Executed action "Services.APIService.BezorgdagController.getBezorgdagen (Services)" in 33.4535ms
2019-04-18 13:27:16.784 +02:00 [Information] Request finished in 299.1555ms 401 
2019-04-18 13:27:23.253 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/Auth/ExternalLogin  
2019-04-18 13:27:23.258 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:27:23.260 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:27:23.261 +02:00 [Information] Request finished in 9.0191ms 204 
2019-04-18 13:27:23.265 +02:00 [Information] Request starting HTTP/1.1 POST http://localhost:5000/sogyolunchapi/Auth/ExternalLogin application/json;charset=UTF-8 1303
2019-04-18 13:27:23.266 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:27:23.267 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:27:23.283 +02:00 [Information] Route matched with "{action = \"ExternalLogin\", controller = \"Auth\"}". Executing action "SogyoLunchApp.APIService.AuthController.ExternalLogin (Services)"
2019-04-18 13:27:23.296 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:27:23.448 +02:00 [Information] Executing action method "SogyoLunchApp.APIService.AuthController.ExternalLogin (Services)" with arguments (["SogyoLunchApp.APIService.ExternalLoginModel"]) - Validation state: Valid
2019-04-18 13:27:23.957 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:27:23.975 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__normalizedEmail_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName]
FROM [AspNetUsers] AS [u]
WHERE [u].[NormalizedEmail] = @__normalizedEmail_0"
2019-04-18 13:27:24.009 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__normalizedUserName_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName]
FROM [AspNetUsers] AS [u]
WHERE [u].[NormalizedUserName] = @__normalizedUserName_0"
2019-04-18 13:27:24.141 +02:00 [Information] Executed DbCommand ("69"ms) [Parameters=["@p0='?' (DbType = Guid), @p1='?' (DbType = Int32), @p2='?' (Size = 4000), @p3='?' (Size = 256), @p4='?' (DbType = Boolean), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTimeOffset), @p7='?' (Size = 256), @p8='?' (Size = 256), @p9='?' (Size = 4000), @p10='?' (Size = 4000), @p11='?' (DbType = Boolean), @p12='?' (Size = 4000), @p13='?' (DbType = Boolean), @p14='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
INSERT INTO [AspNetUsers] ([Id], [AccessFailedCount], [ConcurrencyStamp], [Email], [EmailConfirmed], [LockoutEnabled], [LockoutEnd], [NormalizedEmail], [NormalizedUserName], [PasswordHash], [PhoneNumber], [PhoneNumberConfirmed], [SecurityStamp], [TwoFactorEnabled], [UserName])
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14);"
2019-04-18 13:27:24.172 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT COUNT(*)
FROM [AspNetUsers] AS [a]"
2019-04-18 13:27:24.198 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__normalizedRoleName_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [r].[Id], [r].[ConcurrencyStamp], [r].[Name], [r].[NormalizedName]
FROM [AspNetRoles] AS [r]
WHERE [r].[NormalizedName] = @__normalizedRoleName_0"
2019-04-18 13:27:24.227 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[RoleId]
FROM [AspNetUserRoles] AS [e]
WHERE ([e].[UserId] = @__get_Item_0) AND ([e].[RoleId] = @__get_Item_1)"
2019-04-18 13:27:24.240 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__normalizedRoleName_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [r].[Id], [r].[ConcurrencyStamp], [r].[Name], [r].[NormalizedName]
FROM [AspNetRoles] AS [r]
WHERE [r].[NormalizedName] = @__normalizedRoleName_0"
2019-04-18 13:27:24.258 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__normalizedUserName_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName]
FROM [AspNetUsers] AS [u]
WHERE [u].[NormalizedUserName] = @__normalizedUserName_0"
2019-04-18 13:27:24.321 +02:00 [Information] Executed DbCommand ("47"ms) [Parameters=["@p0='?' (DbType = Guid), @p1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
INSERT INTO [AspNetUserRoles] ([UserId], [RoleId])
VALUES (@p0, @p1);"
2019-04-18 13:27:24.330 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@p14='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p15='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTimeOffset), @p6='?' (Size = 256), @p7='?' (Size = 256), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Boolean), @p11='?' (Size = 4000), @p12='?' (DbType = Boolean), @p13='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [LockoutEnabled] = @p4, [LockoutEnd] = @p5, [NormalizedEmail] = @p6, [NormalizedUserName] = @p7, [PasswordHash] = @p8, [PhoneNumber] = @p9, [PhoneNumberConfirmed] = @p10, [SecurityStamp] = @p11, [TwoFactorEnabled] = @p12, [UserName] = @p13
WHERE [Id] = @p14 AND [ConcurrencyStamp] = @p15;
SELECT @@ROWCOUNT;"
2019-04-18 13:27:24.354 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__loginProvider_0='?' (Size = 450), @__providerKey_1='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [userLogin].[LoginProvider], [userLogin].[ProviderKey], [userLogin].[ProviderDisplayName], [userLogin].[UserId]
FROM [AspNetUserLogins] AS [userLogin]
WHERE ([userLogin].[LoginProvider] = @__loginProvider_0) AND ([userLogin].[ProviderKey] = @__providerKey_1)"
2019-04-18 13:27:24.371 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__normalizedUserName_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName]
FROM [AspNetUsers] AS [u]
WHERE [u].[NormalizedUserName] = @__normalizedUserName_0"
2019-04-18 13:27:24.421 +02:00 [Information] Executed DbCommand ("45"ms) [Parameters=["@p0='?' (Size = 450), @p1='?' (Size = 450), @p2='?' (Size = 4000), @p3='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
INSERT INTO [AspNetUserLogins] ([LoginProvider], [ProviderKey], [ProviderDisplayName], [UserId])
VALUES (@p0, @p1, @p2, @p3);"
2019-04-18 13:27:24.427 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@p14='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p15='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTimeOffset), @p6='?' (Size = 256), @p7='?' (Size = 256), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Boolean), @p11='?' (Size = 4000), @p12='?' (DbType = Boolean), @p13='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [LockoutEnabled] = @p4, [LockoutEnd] = @p5, [NormalizedEmail] = @p6, [NormalizedUserName] = @p7, [PasswordHash] = @p8, [PhoneNumber] = @p9, [PhoneNumberConfirmed] = @p10, [SecurityStamp] = @p11, [TwoFactorEnabled] = @p12, [UserName] = @p13
WHERE [Id] = @p14 AND [ConcurrencyStamp] = @p15;
SELECT @@ROWCOUNT;"
2019-04-18 13:27:24.459 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__user_Id_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [uc].[Id], [uc].[ClaimType], [uc].[ClaimValue], [uc].[UserId]
FROM [AspNetUserClaims] AS [uc]
WHERE [uc].[UserId] = @__user_Id_0"
2019-04-18 13:27:24.499 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__userId_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [role].[Name]
FROM [AspNetUserRoles] AS [userRole]
INNER JOIN [AspNetRoles] AS [role] ON [userRole].[RoleId] = [role].[Id]
WHERE [userRole].[UserId] = @__userId_0"
2019-04-18 13:27:24.510 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__normalizedName_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [r].[Id], [r].[ConcurrencyStamp], [r].[Name], [r].[NormalizedName]
FROM [AspNetRoles] AS [r]
WHERE [r].[NormalizedName] = @__normalizedName_0"
2019-04-18 13:27:24.529 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__role_Id_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [rc].[ClaimType], [rc].[ClaimValue]
FROM [AspNetRoleClaims] AS [rc]
WHERE [rc].[RoleId] = @__role_Id_0"
2019-04-18 13:27:24.549 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:27:24.550 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:27:24.553 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [key].[Xml]
FROM [DataProtectionKeys] AS [key]"
2019-04-18 13:27:24.564 +02:00 [Information] Creating key {06f6421a-1711-422e-928c-75b2936991e7} with creation date 2019-04-18 11:27:24Z, activation date 2019-04-18 11:27:24Z, and expiration date 2019-07-17 11:27:24Z.
2019-04-18 13:27:24.585 +02:00 [Warning] No XML encryptor configured. Key {06f6421a-1711-422e-928c-75b2936991e7} may be persisted to storage in unencrypted form.
2019-04-18 13:27:24.588 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:27:24.595 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:27:24.638 +02:00 [Information] Executed DbCommand ("26"ms) [Parameters=["@p0='?' (Size = 4000), @p1='?' (Size = 4000)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
INSERT INTO [DataProtectionKeys] ([FriendlyName], [Xml])
VALUES (@p0, @p1);
SELECT [Id]
FROM [DataProtectionKeys]
WHERE @@ROWCOUNT = 1 AND [Id] = scope_identity();"
2019-04-18 13:27:24.646 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:27:24.647 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:27:24.649 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [key].[Xml]
FROM [DataProtectionKeys] AS [key]"
2019-04-18 13:27:24.679 +02:00 [Information] AuthenticationScheme: "Identity.Application" signed in.
2019-04-18 13:27:24.684 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__userId_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [role].[Name]
FROM [AspNetUserRoles] AS [userRole]
INNER JOIN [AspNetRoles] AS [role] ON [userRole].[RoleId] = [role].[Id]
WHERE [userRole].[UserId] = @__userId_0"
2019-04-18 13:27:24.798 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:27:24.880 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__normalizedUserName_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName]
FROM [AspNetUsers] AS [u]
WHERE [u].[NormalizedUserName] = @__normalizedUserName_0"
2019-04-18 13:27:24.889 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@p14='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p15='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTimeOffset), @p6='?' (Size = 256), @p7='?' (Size = 256), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Boolean), @p11='?' (Size = 4000), @p12='?' (DbType = Boolean), @p13='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [LockoutEnabled] = @p4, [LockoutEnd] = @p5, [NormalizedEmail] = @p6, [NormalizedUserName] = @p7, [PasswordHash] = @p8, [PhoneNumber] = @p9, [PhoneNumberConfirmed] = @p10, [SecurityStamp] = @p11, [TwoFactorEnabled] = @p12, [UserName] = @p13
WHERE [Id] = @p14 AND [ConcurrencyStamp] = @p15;
SELECT @@ROWCOUNT;"
2019-04-18 13:27:24.906 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:27:24.919 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__normalizedUserName_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName]
FROM [AspNetUsers] AS [u]
WHERE [u].[NormalizedUserName] = @__normalizedUserName_0"
2019-04-18 13:27:24.948 +02:00 [Information] Executed DbCommand ("24"ms) [Parameters=["@p0='?' (DbType = Guid), @p1='?' (Size = 450), @p2='?' (Size = 450), @p3='?' (Size = 4000)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
INSERT INTO [AspNetUserTokens] ([UserId], [LoginProvider], [Name], [Value])
VALUES (@p0, @p1, @p2, @p3);"
2019-04-18 13:27:24.954 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@p14='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p15='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTimeOffset), @p6='?' (Size = 256), @p7='?' (Size = 256), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Boolean), @p11='?' (Size = 4000), @p12='?' (DbType = Boolean), @p13='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [LockoutEnabled] = @p4, [LockoutEnd] = @p5, [NormalizedEmail] = @p6, [NormalizedUserName] = @p7, [PasswordHash] = @p8, [PhoneNumber] = @p9, [PhoneNumberConfirmed] = @p10, [SecurityStamp] = @p11, [TwoFactorEnabled] = @p12, [UserName] = @p13
WHERE [Id] = @p14 AND [ConcurrencyStamp] = @p15;
SELECT @@ROWCOUNT;"
2019-04-18 13:27:24.964 +02:00 [Information] Executed action method "SogyoLunchApp.APIService.AuthController.ExternalLogin (Services)", returned result "Microsoft.AspNetCore.Mvc.OkObjectResult" in 1507.7936ms.
2019-04-18 13:27:24.977 +02:00 [Information] Executing ObjectResult, writing value of type '"<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"'.
2019-04-18 13:27:24.995 +02:00 [Information] Executed action "SogyoLunchApp.APIService.AuthController.ExternalLogin (Services)" in 1709.5631ms
2019-04-18 13:27:25.003 +02:00 [Information] Request finished in 1738.0782ms 200 application/json; charset=utf-8
2019-04-18 13:27:25.113 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 13:27:25.119 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:27:25.126 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:27:25.128 +02:00 [Information] Request finished in 14.2046ms 204 
2019-04-18 13:27:25.133 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 13:27:25.137 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:27:25.161 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:27:25.237 +02:00 [Information] Successfully validated the token.
2019-04-18 13:27:25.251 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:27:25.282 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:27:25.298 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:27:25.319 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:27:25.336 +02:00 [Information] Route matched with "{action = \"getBezorgdagen\", controller = \"Bezorgdag\"}". Executing action "Services.APIService.BezorgdagController.getBezorgdagen (Services)"
2019-04-18 13:27:25.339 +02:00 [Information] Authorization was successful.
2019-04-18 13:27:25.345 +02:00 [Information] Executing action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)" with arguments (["40"]) - Validation state: Valid
2019-04-18 13:27:25.369 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.387 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.411 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.415 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.421 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.427 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.432 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.436 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.443 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.447 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.452 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.459 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.463 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.468 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.475 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.480 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.484 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.487 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.491 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.494 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.497 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.500 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.502 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.506 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.508 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.511 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.514 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.517 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.520 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.523 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.526 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.529 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.532 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.537 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.541 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.545 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.548 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.551 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.555 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.561 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.567 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.572 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.578 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.584 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.590 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.596 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.618 +02:00 [Information] Executed DbCommand ("19"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.624 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.630 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.638 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.644 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.649 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.653 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.658 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.663 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.669 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.678 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.682 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.687 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.691 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.698 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.705 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.710 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.714 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.719 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.723 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.728 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.731 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.734 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.737 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.741 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.744 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.747 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.749 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.752 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.755 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.758 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.761 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.765 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:25.768 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:25.770 +02:00 [Information] Executed action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 423.6472ms.
2019-04-18 13:27:25.774 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[System.DateTime, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"'.
2019-04-18 13:27:25.777 +02:00 [Information] Executed action "Services.APIService.BezorgdagController.getBezorgdagen (Services)" in 439.5998ms
2019-04-18 13:27:25.779 +02:00 [Information] Request finished in 645.602ms 200 application/json; charset=utf-8
2019-04-18 13:27:25.794 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 13:27:25.795 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:27:25.802 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 13:27:25.802 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 13:27:25.805 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 13:27:25.807 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:27:25.806 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:27:25.820 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 13:27:25.826 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 13:27:25.828 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:27:25.828 +02:00 [Information] Request finished in 34.555ms 204 
2019-04-18 13:27:25.843 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:27:25.844 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:27:25.845 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 13:27:25.846 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:27:25.847 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:27:25.849 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:27:25.850 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:27:25.851 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:27:25.852 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:27:25.853 +02:00 [Information] Request finished in 47.7257ms 204 
2019-04-18 13:27:25.854 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:27:25.865 +02:00 [Information] Request finished in 38.1717ms 204 
2019-04-18 13:27:25.866 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:27:25.868 +02:00 [Information] Request finished in 50.0732ms 204 
2019-04-18 13:27:25.869 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 13:27:25.870 +02:00 [Information] Request finished in 67.6613ms 204 
2019-04-18 13:27:25.871 +02:00 [Information] Request finished in 69.681ms 204 
2019-04-18 13:27:25.873 +02:00 [Information] Request finished in 28.1601ms 204 
2019-04-18 13:27:25.876 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:27:25.880 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 13:27:25.882 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:27:25.882 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 13:27:25.883 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:27:25.883 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 13:27:25.883 +02:00 [Information] Request finished in 14.8767ms 204 
2019-04-18 13:27:25.884 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 13:27:25.884 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:27:25.885 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 13:27:25.885 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:27:25.888 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:27:25.889 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 13:27:25.890 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:27:25.891 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:27:25.892 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:27:25.903 +02:00 [Information] Successfully validated the token.
2019-04-18 13:27:25.904 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:27:25.905 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:27:25.906 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:27:25.908 +02:00 [Information] Successfully validated the token.
2019-04-18 13:27:25.909 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:27:25.910 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:27:25.911 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:27:25.912 +02:00 [Information] Successfully validated the token.
2019-04-18 13:27:25.913 +02:00 [Information] Successfully validated the token.
2019-04-18 13:27:25.914 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:27:25.915 +02:00 [Information] Successfully validated the token.
2019-04-18 13:27:25.916 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:27:25.916 +02:00 [Information] Successfully validated the token.
2019-04-18 13:27:25.917 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:27:25.918 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:27:25.919 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:27:25.919 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:27:25.923 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:27:25.928 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:27:25.929 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:27:25.929 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:27:25.930 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:27:25.932 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:27:25.959 +02:00 [Information] Executed DbCommand ("10"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:27:25.964 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:27:25.967 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:27:25.977 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:27:25.984 +02:00 [Information] Route matched with "{action = \"GetWinkelBijDatum\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)"
2019-04-18 13:27:25.986 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:27:25.988 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:27:25.988 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:27:25.995 +02:00 [Information] Route matched with "{action = \"GetWinkelBijDatum\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)"
2019-04-18 13:27:25.996 +02:00 [Information] Authorization was successful.
2019-04-18 13:27:26.003 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:27:26.004 +02:00 [Information] Authorization was successful.
2019-04-18 13:27:26.006 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:27:26.007 +02:00 [Information] Executing action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 13:27:26.007 +02:00 [Information] Executing action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 13:27:26.012 +02:00 [Information] Route matched with "{action = \"GetDeadlinePerDatum\", controller = \"Deadline\"}". Executing action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)"
2019-04-18 13:27:26.016 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:27:26.019 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:27:26.021 +02:00 [Information] Route matched with "{action = \"GetProductenbijDatum\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenbijDatum (Services)"
2019-04-18 13:27:26.027 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:26.027 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:26.028 +02:00 [Information] Authorization was successful.
2019-04-18 13:27:26.029 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 13:27:26.032 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 13:27:26.033 +02:00 [Information] Authorization was successful.
2019-04-18 13:27:26.041 +02:00 [Information] Executing action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 13:27:26.044 +02:00 [Information] Authorization was successful.
2019-04-18 13:27:26.045 +02:00 [Information] Authorization was successful.
2019-04-18 13:27:26.047 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenbijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 13:27:26.051 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 13:27:26.051 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 13:27:26.059 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 3.9892ms.
2019-04-18 13:27:26.060 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1372ms.
2019-04-18 13:27:26.061 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 13:27:26.063 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 13:27:26.091 +02:00 [Information] Executed DbCommand ("40"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:26.091 +02:00 [Information] Executed DbCommand ("37"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:26.153 +02:00 [Information] Executed DbCommand ("12"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 13:27:26.153 +02:00 [Information] Executed DbCommand ("17"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:26.154 +02:00 [Information] Executed DbCommand ("18"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:26.169 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 123.5657ms
2019-04-18 13:27:26.170 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:26.176 +02:00 [Information] Request finished in 287.2278ms 200 application/json; charset=utf-8
2019-04-18 13:27:26.198 +02:00 [Information] Executed action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 176.4888ms.
2019-04-18 13:27:26.198 +02:00 [Information] Executed action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 174.347ms.
2019-04-18 13:27:26.203 +02:00 [Information] Executed DbCommand ("33"ms) [Parameters=["@__bezorgdag_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [x].[Dag], [x].[BestelDeadlineDag], [x].[BestelDeadlineTijd], [x].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [x]
WHERE [x].[Dag] = @__bezorgdag_0"
2019-04-18 13:27:26.212 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 13:27:26.213 +02:00 [Information] Executing JsonResult, writing value of type '"SogyoLunchApp.Winkel"'.
2019-04-18 13:27:26.215 +02:00 [Information] Executing JsonResult, writing value of type '"SogyoLunchApp.Winkel"'.
2019-04-18 13:27:26.217 +02:00 [Information] Executed action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 168.9415ms.
2019-04-18 13:27:26.218 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:27:26.218 +02:00 [Information] Executed DbCommand ("9"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 13:27:26.222 +02:00 [Information] Executed action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" in 225.3959ms
2019-04-18 13:27:26.222 +02:00 [Information] Executed action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" in 217.5998ms
2019-04-18 13:27:26.222 +02:00 [Information] Executing JsonResult, writing value of type '"System.DateTime"'.
2019-04-18 13:27:26.223 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:27:26.227 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 182.9048ms
2019-04-18 13:27:26.227 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 13:27:26.228 +02:00 [Information] Request finished in 348.201ms 200 application/json; charset=utf-8
2019-04-18 13:27:26.230 +02:00 [Information] Request finished in 347.985ms 200 application/json; charset=utf-8
2019-04-18 13:27:26.231 +02:00 [Information] Executed action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" in 202.4714ms
2019-04-18 13:27:26.232 +02:00 [Information] Successfully validated the token.
2019-04-18 13:27:26.234 +02:00 [Information] Request finished in 349.7024ms 200 application/json; charset=utf-8
2019-04-18 13:27:26.237 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 13:27:26.238 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:27:26.241 +02:00 [Information] Request finished in 355.8831ms 200 application/json; charset=utf-8
2019-04-18 13:27:26.243 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenbijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 190.8206ms.
2019-04-18 13:27:26.246 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:27:26.247 +02:00 [Information] Successfully validated the token.
2019-04-18 13:27:26.248 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 13:27:26.255 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenbijDatum (Services)" in 221.801ms
2019-04-18 13:27:26.257 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:27:26.258 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:27:26.260 +02:00 [Information] Request finished in 376.7196ms 200 application/json; charset=utf-8
2019-04-18 13:27:26.260 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:27:26.268 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:27:26.268 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:27:26.278 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:27:26.284 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:27:26.286 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:27:26.292 +02:00 [Information] Route matched with "{action = \"GetDeadlinePerDatum\", controller = \"Deadline\"}". Executing action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)"
2019-04-18 13:27:26.293 +02:00 [Information] Route matched with "{action = \"GetProductenbijDatum\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenbijDatum (Services)"
2019-04-18 13:27:26.294 +02:00 [Information] Authorization was successful.
2019-04-18 13:27:26.296 +02:00 [Information] Authorization was successful.
2019-04-18 13:27:26.297 +02:00 [Information] Executing action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 13:27:26.297 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenbijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 13:27:26.302 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:26.303 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:27:26.312 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__bezorgdag_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [x].[Dag], [x].[BestelDeadlineDag], [x].[BestelDeadlineTijd], [x].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [x]
WHERE [x].[Dag] = @__bezorgdag_0"
2019-04-18 13:27:26.314 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:27:26.314 +02:00 [Information] Executed action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 15.0552ms.
2019-04-18 13:27:26.319 +02:00 [Information] Executing JsonResult, writing value of type '"System.DateTime"'.
2019-04-18 13:27:26.320 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 13:27:26.321 +02:00 [Information] Executed action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" in 26.6064ms
2019-04-18 13:27:26.324 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenbijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 22.688ms.
2019-04-18 13:27:26.325 +02:00 [Information] Request finished in 88.2452ms 200 application/json; charset=utf-8
2019-04-18 13:27:26.327 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 13:27:26.330 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenbijDatum (Services)" in 33.9052ms
2019-04-18 13:27:26.331 +02:00 [Information] Request finished in 119.3345ms 200 application/json; charset=utf-8
2019-04-18 13:29:25.563 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 13:29:25.564 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:29:25.566 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:29:25.568 +02:00 [Information] Request finished in 5.5318ms 204 
2019-04-18 13:29:25.592 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 13:29:25.599 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:29:25.606 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:29:25.611 +02:00 [Information] Successfully validated the token.
2019-04-18 13:29:25.613 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:29:25.618 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:29:25.636 +02:00 [Information] Executed DbCommand ("11"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:29:25.646 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:29:25.657 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 13:29:25.662 +02:00 [Information] Authorization was successful.
2019-04-18 13:29:25.670 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 13:29:25.677 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 2.7181ms.
2019-04-18 13:29:25.680 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 13:29:25.693 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 13:29:25.699 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 36.8546ms
2019-04-18 13:29:25.701 +02:00 [Information] Request finished in 111.1816ms 200 application/json; charset=utf-8
2019-04-18 13:29:25.735 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/winkel/Albert Heijn Bezorgservice  
2019-04-18 13:29:25.737 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:29:25.743 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:29:25.745 +02:00 [Information] Request finished in 9.425ms 204 
2019-04-18 13:29:25.751 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/winkel/Albert Heijn Bezorgservice  
2019-04-18 13:29:25.753 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:29:25.762 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:29:25.764 +02:00 [Information] Successfully validated the token.
2019-04-18 13:29:25.765 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:29:25.767 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:29:25.779 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:29:25.820 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:29:25.829 +02:00 [Information] Route matched with "{action = \"GetProductenPerWinkel\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenPerWinkel (Services)"
2019-04-18 13:29:25.830 +02:00 [Information] Authorization was successful.
2019-04-18 13:29:25.832 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenPerWinkel (Services)" with arguments (["Albert Heijn Bezorgservice"]) - Validation state: Valid
2019-04-18 13:29:25.849 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__name_0='?' (Size = 4000)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]
WHERE [w].[Winkelnaam] = @__name_0"
2019-04-18 13:29:25.857 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 13:29:25.862 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenPerWinkel (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 28.2515ms.
2019-04-18 13:29:25.863 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 13:29:25.865 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenPerWinkel (Services)" in 34.6101ms
2019-04-18 13:29:25.867 +02:00 [Information] Request finished in 115.4843ms 200 application/json; charset=utf-8
2019-04-18 13:30:04.523 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/winkel/snackbar  
2019-04-18 13:30:04.525 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:30:04.527 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:30:04.528 +02:00 [Information] Request finished in 4.9478ms 204 
2019-04-18 13:30:04.536 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/winkel/snackbar  
2019-04-18 13:30:04.537 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:30:04.541 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:30:04.543 +02:00 [Information] Successfully validated the token.
2019-04-18 13:30:04.545 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:30:04.547 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:30:04.552 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:30:04.564 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:30:04.569 +02:00 [Information] Route matched with "{action = \"GetProductenPerWinkel\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenPerWinkel (Services)"
2019-04-18 13:30:04.570 +02:00 [Information] Authorization was successful.
2019-04-18 13:30:04.574 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenPerWinkel (Services)" with arguments (["snackbar"]) - Validation state: Valid
2019-04-18 13:30:04.580 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__name_0='?' (Size = 4000)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]
WHERE [w].[Winkelnaam] = @__name_0"
2019-04-18 13:30:04.584 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 13:30:04.586 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenPerWinkel (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 8.5668ms.
2019-04-18 13:30:04.588 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 13:30:04.591 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenPerWinkel (Services)" in 20.1463ms
2019-04-18 13:30:04.592 +02:00 [Information] Request finished in 55.7526ms 200 application/json; charset=utf-8
2019-04-18 13:30:05.160 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/winkel/Albert Heijn Bezorgservice  
2019-04-18 13:30:05.163 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:30:05.165 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:30:05.166 +02:00 [Information] Request finished in 5.6565ms 204 
2019-04-18 13:30:05.170 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/winkel/Albert Heijn Bezorgservice  
2019-04-18 13:30:05.174 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:30:05.175 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:30:05.178 +02:00 [Information] Successfully validated the token.
2019-04-18 13:30:05.179 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:30:05.181 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:30:05.185 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:30:05.195 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:30:05.200 +02:00 [Information] Route matched with "{action = \"GetProductenPerWinkel\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenPerWinkel (Services)"
2019-04-18 13:30:05.202 +02:00 [Information] Authorization was successful.
2019-04-18 13:30:05.203 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenPerWinkel (Services)" with arguments (["Albert Heijn Bezorgservice"]) - Validation state: Valid
2019-04-18 13:30:05.208 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__name_0='?' (Size = 4000)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]
WHERE [w].[Winkelnaam] = @__name_0"
2019-04-18 13:30:05.213 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 13:30:05.217 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenPerWinkel (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 10.7605ms.
2019-04-18 13:30:05.219 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 13:30:05.220 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenPerWinkel (Services)" in 18.7574ms
2019-04-18 13:30:05.222 +02:00 [Information] Request finished in 51.6002ms 200 application/json; charset=utf-8
2019-04-18 13:30:10.905 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 13:30:10.906 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:30:10.907 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:30:10.908 +02:00 [Information] Request finished in 3.2319ms 204 
2019-04-18 13:30:10.915 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 13:30:10.916 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:30:10.918 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:30:10.919 +02:00 [Information] Successfully validated the token.
2019-04-18 13:30:10.920 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:30:10.924 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:30:10.929 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:30:10.935 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:30:10.940 +02:00 [Information] Route matched with "{action = \"getBezorgdagen\", controller = \"Bezorgdag\"}". Executing action "Services.APIService.BezorgdagController.getBezorgdagen (Services)"
2019-04-18 13:30:10.944 +02:00 [Information] Authorization was successful.
2019-04-18 13:30:10.946 +02:00 [Information] Executing action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)" with arguments (["40"]) - Validation state: Valid
2019-04-18 13:30:10.949 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:10.954 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:10.959 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:10.962 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:10.965 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:10.968 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:10.971 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:10.979 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:10.982 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:10.985 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:10.988 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:10.995 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:10.999 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.002 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.011 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.016 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.020 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.026 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.029 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.032 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.036 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.041 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.044 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.047 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.050 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.053 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.057 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.060 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.063 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.066 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.069 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.072 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.076 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.079 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.081 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.084 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.087 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.091 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.094 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.097 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.100 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.102 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.105 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.109 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.112 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.115 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.117 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.120 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.123 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.126 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.129 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.132 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.134 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.137 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.141 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.145 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.148 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.151 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.154 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.157 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.160 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.163 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.166 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.169 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.172 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.175 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.178 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.181 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.184 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.187 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.189 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.193 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.196 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.199 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.201 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.204 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.207 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.210 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.214 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.217 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.219 +02:00 [Information] Executed action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 272.1247ms.
2019-04-18 13:30:11.221 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[System.DateTime, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"'.
2019-04-18 13:30:11.223 +02:00 [Information] Executed action "Services.APIService.BezorgdagController.getBezorgdagen (Services)" in 278.5483ms
2019-04-18 13:30:11.225 +02:00 [Information] Request finished in 309.8956ms 200 application/json; charset=utf-8
2019-04-18 13:30:11.242 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 13:30:11.242 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 13:30:11.243 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 13:30:11.243 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 13:30:11.244 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:30:11.246 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:30:11.247 +02:00 [Information] Request finished in 5.2285ms 204 
2019-04-18 13:30:11.248 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:30:11.249 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:30:11.250 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:30:11.251 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 13:30:11.253 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:30:11.255 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:30:11.256 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:30:11.257 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:30:11.258 +02:00 [Information] Request finished in 14.9164ms 204 
2019-04-18 13:30:11.259 +02:00 [Information] Request finished in 16.9033ms 204 
2019-04-18 13:30:11.260 +02:00 [Information] Request finished in 16.0759ms 204 
2019-04-18 13:30:11.261 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:30:11.262 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 13:30:11.266 +02:00 [Information] Request finished in 13.999ms 204 
2019-04-18 13:30:11.266 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 13:30:11.267 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:30:11.267 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 13:30:11.267 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 13:30:11.268 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:30:11.270 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:30:11.271 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:30:11.276 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:30:11.278 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:30:11.280 +02:00 [Information] Request finished in 17.807ms 204 
2019-04-18 13:30:11.281 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:30:11.282 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:30:11.283 +02:00 [Information] Request finished in 15.8903ms 204 
2019-04-18 13:30:11.284 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 13:30:11.285 +02:00 [Information] Request finished in 18.4789ms 204 
2019-04-18 13:30:11.286 +02:00 [Information] Request finished in 19.6537ms 204 
2019-04-18 13:30:11.287 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 13:30:11.288 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:30:11.290 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:30:11.292 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 13:30:11.294 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:30:11.295 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 13:30:11.297 +02:00 [Information] Request finished in 12.5495ms 204 
2019-04-18 13:30:11.298 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:30:11.299 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:30:11.300 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:30:11.301 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 13:30:11.302 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:30:11.316 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 13:30:11.320 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:30:11.324 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:30:11.330 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 13:30:11.330 +02:00 [Information] Request finished in 42.9337ms 204 
2019-04-18 13:30:11.334 +02:00 [Information] Successfully validated the token.
2019-04-18 13:30:11.335 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:30:11.336 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 13:30:11.337 +02:00 [Information] Request finished in 45.3943ms 204 
2019-04-18 13:30:11.341 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:30:11.342 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:30:11.343 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:30:11.344 +02:00 [Information] Successfully validated the token.
2019-04-18 13:30:11.345 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:30:11.346 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 13:30:11.347 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:30:11.348 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:30:11.349 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:30:11.349 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:30:11.351 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:30:11.351 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:30:11.352 +02:00 [Information] Successfully validated the token.
2019-04-18 13:30:11.353 +02:00 [Information] Successfully validated the token.
2019-04-18 13:30:11.357 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:30:11.359 +02:00 [Information] Successfully validated the token.
2019-04-18 13:30:11.359 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:30:11.362 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:30:11.363 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:30:11.363 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:30:11.364 +02:00 [Information] Successfully validated the token.
2019-04-18 13:30:11.368 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:30:11.369 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:30:11.370 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:30:11.375 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:30:11.378 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:30:11.380 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:30:11.380 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:30:11.381 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:30:11.384 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:30:11.384 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:30:11.386 +02:00 [Information] Route matched with "{action = \"GetWinkelBijDatum\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)"
2019-04-18 13:30:11.390 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 13:30:11.393 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:30:11.395 +02:00 [Information] Authorization was successful.
2019-04-18 13:30:11.395 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:30:11.400 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:30:11.402 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 13:30:11.403 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:30:11.406 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:30:11.407 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.5648ms.
2019-04-18 13:30:11.410 +02:00 [Information] Route matched with "{action = \"GetWinkelBijDatum\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)"
2019-04-18 13:30:11.413 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 13:30:11.417 +02:00 [Information] Authorization was successful.
2019-04-18 13:30:11.419 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:30:11.423 +02:00 [Information] Authorization was successful.
2019-04-18 13:30:11.426 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 13:30:11.426 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:30:11.427 +02:00 [Information] Executing action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 13:30:11.428 +02:00 [Information] Authorization was successful.
2019-04-18 13:30:11.432 +02:00 [Information] Route matched with "{action = \"GetWinkelBijDatum\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)"
2019-04-18 13:30:11.432 +02:00 [Information] Executing action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 13:30:11.436 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 13:30:11.437 +02:00 [Information] Route matched with "{action = \"GetProductenbijDatum\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenbijDatum (Services)"
2019-04-18 13:30:11.439 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.440 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 13:30:11.441 +02:00 [Information] Authorization was successful.
2019-04-18 13:30:11.444 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.446 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 51.1965ms
2019-04-18 13:30:11.447 +02:00 [Information] Authorization was successful.
2019-04-18 13:30:11.452 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.452 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.2844ms.
2019-04-18 13:30:11.453 +02:00 [Information] Executing action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 13:30:11.457 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.457 +02:00 [Information] Request finished in 156.3286ms 200 application/json; charset=utf-8
2019-04-18 13:30:11.459 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenbijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 13:30:11.462 +02:00 [Information] Executed action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 23.1989ms.
2019-04-18 13:30:11.463 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 13:30:11.466 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.468 +02:00 [Information] Executed action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 24.7294ms.
2019-04-18 13:30:11.469 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 13:30:11.471 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.472 +02:00 [Information] Executing JsonResult, writing value of type '"SogyoLunchApp.Winkel"'.
2019-04-18 13:30:11.475 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 13:30:11.477 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.478 +02:00 [Information] Executing JsonResult, writing value of type '"SogyoLunchApp.Winkel"'.
2019-04-18 13:30:11.479 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:30:11.482 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.483 +02:00 [Information] Executed action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" in 59.5281ms
2019-04-18 13:30:11.486 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 57.2983ms
2019-04-18 13:30:11.490 +02:00 [Information] Executed action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 25.2488ms.
2019-04-18 13:30:11.491 +02:00 [Information] Executed action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" in 73.8234ms
2019-04-18 13:30:11.492 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:30:11.497 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 13:30:11.498 +02:00 [Information] Request finished in 161.2275ms 200 application/json; charset=utf-8
2019-04-18 13:30:11.500 +02:00 [Information] Request finished in 184.0758ms 200 application/json; charset=utf-8
2019-04-18 13:30:11.501 +02:00 [Information] Executing JsonResult, writing value of type '"SogyoLunchApp.Winkel"'.
2019-04-18 13:30:11.503 +02:00 [Information] Request finished in 207.0957ms 200 application/json; charset=utf-8
2019-04-18 13:30:11.504 +02:00 [Information] Successfully validated the token.
2019-04-18 13:30:11.507 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenbijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 36.7147ms.
2019-04-18 13:30:11.508 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 13:30:11.508 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 13:30:11.509 +02:00 [Information] Executed action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" in 68.2322ms
2019-04-18 13:30:11.510 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 13:30:11.511 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:30:11.515 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 13:30:11.516 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:30:11.517 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:30:11.518 +02:00 [Information] Request finished in 188.5528ms 200 application/json; charset=utf-8
2019-04-18 13:30:11.519 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:30:11.520 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:30:11.522 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenbijDatum (Services)" in 74.5563ms
2019-04-18 13:30:11.524 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:30:11.526 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:30:11.527 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 13:30:11.528 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:30:11.531 +02:00 [Information] Request finished in 185.5663ms 200 application/json; charset=utf-8
2019-04-18 13:30:11.532 +02:00 [Information] Successfully validated the token.
2019-04-18 13:30:11.533 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:30:11.533 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 13:30:11.534 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:30:11.535 +02:00 [Information] Successfully validated the token.
2019-04-18 13:30:11.535 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:30:11.537 +02:00 [Information] Successfully validated the token.
2019-04-18 13:30:11.542 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:30:11.543 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:30:11.544 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:30:11.545 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:30:11.548 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:30:11.549 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:30:11.555 +02:00 [Information] Route matched with "{action = \"GetDeadlinePerDatum\", controller = \"Deadline\"}". Executing action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)"
2019-04-18 13:30:11.557 +02:00 [Information] Successfully validated the token.
2019-04-18 13:30:11.558 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:30:11.562 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:30:11.563 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:30:11.564 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:30:11.565 +02:00 [Information] Authorization was successful.
2019-04-18 13:30:11.566 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:30:11.568 +02:00 [Information] Successfully validated the token.
2019-04-18 13:30:11.570 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:30:11.570 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:30:11.574 +02:00 [Information] Route matched with "{action = \"GetProductenbijDatum\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenbijDatum (Services)"
2019-04-18 13:30:11.574 +02:00 [Information] Executing action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 13:30:11.575 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:30:11.576 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:30:11.583 +02:00 [Information] Authorization was successful.
2019-04-18 13:30:11.583 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:30:11.583 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:30:11.585 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.590 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:30:11.590 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:30:11.591 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenbijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 13:30:11.595 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__bezorgdag_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [x].[Dag], [x].[BestelDeadlineDag], [x].[BestelDeadlineTijd], [x].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [x]
WHERE [x].[Dag] = @__bezorgdag_0"
2019-04-18 13:30:11.597 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 13:30:11.602 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:30:11.603 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:30:11.611 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.611 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:30:11.613 +02:00 [Information] Executed action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 28.4943ms.
2019-04-18 13:30:11.616 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.617 +02:00 [Information] Authorization was successful.
2019-04-18 13:30:11.624 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:30:11.626 +02:00 [Information] Route matched with "{action = \"GetDeadlinePerDatum\", controller = \"Deadline\"}". Executing action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)"
2019-04-18 13:30:11.629 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 13:30:11.630 +02:00 [Information] Executing JsonResult, writing value of type '"System.DateTime"'.
2019-04-18 13:30:11.631 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 13:30:11.633 +02:00 [Information] Route matched with "{action = \"GetDeadlinePerDatum\", controller = \"Deadline\"}". Executing action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)"
2019-04-18 13:30:11.637 +02:00 [Information] Route matched with "{action = \"GetProductenbijDatum\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenbijDatum (Services)"
2019-04-18 13:30:11.638 +02:00 [Information] Authorization was successful.
2019-04-18 13:30:11.641 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenbijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 30.8383ms.
2019-04-18 13:30:11.642 +02:00 [Information] Executed action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" in 76.8439ms
2019-04-18 13:30:11.646 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.3831ms.
2019-04-18 13:30:11.647 +02:00 [Information] Authorization was successful.
2019-04-18 13:30:11.649 +02:00 [Information] Authorization was successful.
2019-04-18 13:30:11.650 +02:00 [Information] Executing action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 13:30:11.652 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 13:30:11.653 +02:00 [Information] Request finished in 184.1891ms 200 application/json; charset=utf-8
2019-04-18 13:30:11.655 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 13:30:11.656 +02:00 [Information] Executing action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 13:30:11.657 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenbijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 13:30:11.660 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.660 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenbijDatum (Services)" in 77.4782ms
2019-04-18 13:30:11.663 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 13:30:11.664 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.666 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:30:11.670 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__bezorgdag_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [x].[Dag], [x].[BestelDeadlineDag], [x].[BestelDeadlineTijd], [x].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [x]
WHERE [x].[Dag] = @__bezorgdag_0"
2019-04-18 13:30:11.670 +02:00 [Information] Request finished in 162.5236ms 200 application/json; charset=utf-8
2019-04-18 13:30:11.673 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 56.0605ms
2019-04-18 13:30:11.676 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__bezorgdag_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [x].[Dag], [x].[BestelDeadlineDag], [x].[BestelDeadlineTijd], [x].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [x]
WHERE [x].[Dag] = @__bezorgdag_0"
2019-04-18 13:30:11.680 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:30:11.682 +02:00 [Information] Executed action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 22.7613ms.
2019-04-18 13:30:11.684 +02:00 [Information] Request finished in 175.5699ms 200 application/json; charset=utf-8
2019-04-18 13:30:11.687 +02:00 [Information] Executed action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 22.6ms.
2019-04-18 13:30:11.690 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 13:30:11.691 +02:00 [Information] Executing JsonResult, writing value of type '"System.DateTime"'.
2019-04-18 13:30:11.694 +02:00 [Information] Executing JsonResult, writing value of type '"System.DateTime"'.
2019-04-18 13:30:11.696 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenbijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 30.4211ms.
2019-04-18 13:30:11.697 +02:00 [Information] Executed action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" in 59.4134ms
2019-04-18 13:30:11.698 +02:00 [Information] Executed action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" in 50.9209ms
2019-04-18 13:30:11.700 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 13:30:11.701 +02:00 [Information] Request finished in 190.7047ms 200 application/json; charset=utf-8
2019-04-18 13:30:11.702 +02:00 [Information] Request finished in 169.2489ms 200 application/json; charset=utf-8
2019-04-18 13:30:11.704 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenbijDatum (Services)" in 54.9898ms
2019-04-18 13:30:11.707 +02:00 [Information] Request finished in 180.3568ms 200 application/json; charset=utf-8
2019-04-18 13:30:25.593 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 13:30:25.597 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:30:25.616 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:30:25.619 +02:00 [Information] Request finished in 26.3443ms 204 
2019-04-18 13:30:25.627 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 13:30:25.628 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:30:25.630 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:30:25.631 +02:00 [Information] Successfully validated the token.
2019-04-18 13:30:25.632 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:30:25.645 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:30:25.653 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:30:25.664 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:30:25.668 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 13:30:25.670 +02:00 [Information] Authorization was successful.
2019-04-18 13:30:25.671 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 13:30:25.677 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.009ms.
2019-04-18 13:30:25.679 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 13:30:25.682 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 13:30:25.684 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 14.3398ms
2019-04-18 13:30:25.685 +02:00 [Information] Request finished in 58.2881ms 200 application/json; charset=utf-8
2019-04-18 13:30:25.706 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/winkel/Albert Heijn Bezorgservice  
2019-04-18 13:30:25.713 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:30:25.715 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:30:25.717 +02:00 [Information] Request finished in 10.5783ms 204 
2019-04-18 13:30:25.722 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/winkel/Albert Heijn Bezorgservice  
2019-04-18 13:30:25.728 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:30:25.732 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:30:25.734 +02:00 [Information] Successfully validated the token.
2019-04-18 13:30:25.735 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:30:25.736 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:30:25.749 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:30:25.758 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:30:25.763 +02:00 [Information] Route matched with "{action = \"GetProductenPerWinkel\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenPerWinkel (Services)"
2019-04-18 13:30:25.766 +02:00 [Information] Authorization was successful.
2019-04-18 13:30:25.767 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenPerWinkel (Services)" with arguments (["Albert Heijn Bezorgservice"]) - Validation state: Valid
2019-04-18 13:30:25.769 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__name_0='?' (Size = 4000)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]
WHERE [w].[Winkelnaam] = @__name_0"
2019-04-18 13:30:25.778 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 13:30:25.781 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenPerWinkel (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 12.6042ms.
2019-04-18 13:30:25.783 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 13:30:25.784 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenPerWinkel (Services)" in 18.8363ms
2019-04-18 13:30:25.786 +02:00 [Information] Request finished in 63.4147ms 200 application/json; charset=utf-8
2019-04-18 13:31:15.818 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 13:31:15.819 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:15.822 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:15.824 +02:00 [Information] Request finished in 5.9308ms 204 
2019-04-18 13:31:15.828 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkeluitzonderingenperbezorgdag  
2019-04-18 13:31:15.830 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:15.832 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:15.833 +02:00 [Information] Request finished in 5.3781ms 204 
2019-04-18 13:31:15.851 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 13:31:15.864 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkeluitzonderingenperbezorgdag  
2019-04-18 13:31:15.865 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:15.866 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:15.867 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:15.868 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:15.869 +02:00 [Information] Successfully validated the token.
2019-04-18 13:31:15.870 +02:00 [Information] Successfully validated the token.
2019-04-18 13:31:15.872 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:31:15.873 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:31:15.875 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:31:15.876 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:31:15.882 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:31:15.882 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:31:15.892 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:31:15.893 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:31:15.897 +02:00 [Information] Route matched with "{action = \"GetAlleWinkelUitzonderingenPerBezorgdag\", controller = \"WinkelUitzonderingenPerBezorgdag\"}". Executing action "Services.APIService.WinkelUitzonderingenPerBezorgdagController.GetAlleWinkelUitzonderingenPerBezorgdag (Services)"
2019-04-18 13:31:15.899 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 13:31:15.900 +02:00 [Information] Authorization was successful.
2019-04-18 13:31:15.901 +02:00 [Information] Authorization was successful.
2019-04-18 13:31:15.903 +02:00 [Information] Executing action method "Services.APIService.WinkelUitzonderingenPerBezorgdagController.GetAlleWinkelUitzonderingenPerBezorgdag (Services)" - Validation state: Valid
2019-04-18 13:31:15.903 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 13:31:15.907 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0072ms.
2019-04-18 13:31:15.908 +02:00 [Information] Executed action method "Services.APIService.WinkelUitzonderingenPerBezorgdagController.GetAlleWinkelUitzonderingenPerBezorgdag (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 2.7956ms.
2019-04-18 13:31:15.909 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 13:31:15.912 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 13:31:15.913 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.WinkelUitzonderingenPerBezorgdag, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 13:31:15.915 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 13.6062ms
2019-04-18 13:31:15.918 +02:00 [Information] Request finished in 67.2018ms 200 application/json; charset=utf-8
2019-04-18 13:31:15.937 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[Date], [x].[BestelDeadline], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
LEFT JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]
WHERE CONVERT(date, [x].[Date]) >= GETDATE()"
2019-04-18 13:31:15.942 +02:00 [Information] Executed action "Services.APIService.WinkelUitzonderingenPerBezorgdagController.GetAlleWinkelUitzonderingenPerBezorgdag (Services)" in 42.0573ms
2019-04-18 13:31:15.944 +02:00 [Information] Request finished in 79.7636ms 200 application/json; charset=utf-8
2019-04-18 13:31:32.731 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 13:31:32.732 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:32.736 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:32.738 +02:00 [Information] Request finished in 7.1781ms 204 
2019-04-18 13:31:32.747 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 13:31:32.749 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:32.750 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:32.752 +02:00 [Information] Successfully validated the token.
2019-04-18 13:31:32.753 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:31:32.755 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:31:32.760 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:31:32.776 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:31:32.780 +02:00 [Information] Route matched with "{action = \"getBezorgdagen\", controller = \"Bezorgdag\"}". Executing action "Services.APIService.BezorgdagController.getBezorgdagen (Services)"
2019-04-18 13:31:32.781 +02:00 [Information] Authorization was successful.
2019-04-18 13:31:32.782 +02:00 [Information] Executing action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)" with arguments (["40"]) - Validation state: Valid
2019-04-18 13:31:32.795 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:32.800 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:32.803 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:32.809 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:32.813 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:32.816 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:32.819 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:32.824 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:32.828 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:32.832 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:32.835 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:32.840 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:32.845 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:32.848 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:32.851 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:32.859 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:32.863 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:32.866 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:32.869 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:32.877 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:32.881 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:32.884 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:32.887 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:32.892 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:32.895 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:32.898 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:32.901 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:32.904 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:32.910 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:32.913 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:32.917 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:32.920 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:32.926 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:32.931 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:32.935 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:32.940 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:32.946 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:32.950 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:32.952 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:32.956 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:32.959 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:32.962 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:32.964 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:32.967 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:32.970 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:32.973 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:32.976 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:32.979 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:32.981 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:32.984 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:32.987 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:32.989 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:32.992 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:32.995 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:32.998 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:33.001 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:33.003 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:33.007 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:33.010 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:33.013 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:33.016 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:33.019 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:33.022 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:33.025 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:33.028 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:33.031 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:33.033 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:33.037 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:33.040 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:33.043 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:33.046 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:33.049 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:33.051 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:33.055 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:33.058 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:33.061 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:33.064 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:33.067 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:33.070 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:33.073 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:33.075 +02:00 [Information] Executed action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 281.7785ms.
2019-04-18 13:31:33.077 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[System.DateTime, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"'.
2019-04-18 13:31:33.078 +02:00 [Information] Executed action "Services.APIService.BezorgdagController.getBezorgdagen (Services)" in 296.9089ms
2019-04-18 13:31:33.079 +02:00 [Information] Request finished in 331.8718ms 200 application/json; charset=utf-8
2019-04-18 13:31:33.102 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 13:31:33.103 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 13:31:33.113 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 13:31:33.122 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:33.123 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 13:31:33.123 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:33.126 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 13:31:33.137 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:33.143 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 13:31:33.153 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:33.155 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:33.157 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:33.158 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:33.160 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:33.161 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:33.162 +02:00 [Information] Request finished in 60.0647ms 204 
2019-04-18 13:31:33.170 +02:00 [Information] Request finished in 66.9726ms 204 
2019-04-18 13:31:33.174 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:33.175 +02:00 [Information] Request finished in 61.6766ms 204 
2019-04-18 13:31:33.176 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 13:31:33.177 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:33.179 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:33.180 +02:00 [Information] Request finished in 36.8241ms 204 
2019-04-18 13:31:33.181 +02:00 [Information] Request finished in 57.6697ms 204 
2019-04-18 13:31:33.182 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 13:31:33.187 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:33.188 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 13:31:33.192 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 13:31:33.198 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:33.199 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:33.200 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:33.201 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:33.202 +02:00 [Information] Request finished in 82.6668ms 204 
2019-04-18 13:31:33.211 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 13:31:33.212 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:33.214 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:33.215 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:33.216 +02:00 [Information] Request finished in 39.7019ms 204 
2019-04-18 13:31:33.217 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 13:31:33.218 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:33.219 +02:00 [Information] Request finished in 31.166ms 204 
2019-04-18 13:31:33.220 +02:00 [Information] Request finished in 28.8891ms 204 
2019-04-18 13:31:33.222 +02:00 [Information] Request finished in 39.6174ms 204 
2019-04-18 13:31:33.223 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 13:31:33.224 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:33.226 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:33.227 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 13:31:33.228 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 13:31:33.229 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 13:31:33.230 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:33.232 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:33.233 +02:00 [Information] Request finished in 21.7104ms 204 
2019-04-18 13:31:33.234 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:33.235 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:33.236 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:33.237 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:33.239 +02:00 [Information] Request finished in 21.4758ms 204 
2019-04-18 13:31:33.239 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 13:31:33.241 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:33.243 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:33.244 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:33.245 +02:00 [Information] Request finished in 21.8386ms 204 
2019-04-18 13:31:33.246 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 13:31:33.248 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:33.248 +02:00 [Information] Request finished in 21.5581ms 204 
2019-04-18 13:31:33.249 +02:00 [Information] Request finished in 21.6995ms 204 
2019-04-18 13:31:33.251 +02:00 [Information] Request finished in 22.1669ms 204 
2019-04-18 13:31:33.253 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 13:31:33.254 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:33.256 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:33.257 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 13:31:33.258 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 13:31:33.259 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 13:31:33.260 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:33.261 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:33.262 +02:00 [Information] Successfully validated the token.
2019-04-18 13:31:33.263 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:33.263 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:33.264 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:33.266 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:33.267 +02:00 [Information] Successfully validated the token.
2019-04-18 13:31:33.267 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:31:33.268 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:33.270 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:33.271 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:33.272 +02:00 [Information] Successfully validated the token.
2019-04-18 13:31:33.273 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:31:33.274 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:31:33.275 +02:00 [Information] Successfully validated the token.
2019-04-18 13:31:33.275 +02:00 [Information] Successfully validated the token.
2019-04-18 13:31:33.276 +02:00 [Information] Successfully validated the token.
2019-04-18 13:31:33.277 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:31:33.278 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:31:33.280 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:31:33.281 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:31:33.282 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:31:33.282 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:31:33.283 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:31:33.284 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:31:33.287 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:31:33.288 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:31:33.292 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:31:33.294 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:31:33.294 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:31:33.297 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:31:33.301 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:31:33.302 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:31:33.309 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:31:33.310 +02:00 [Information] Route matched with "{action = \"GetWinkelBijDatum\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)"
2019-04-18 13:31:33.315 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:31:33.318 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:31:33.319 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 13:31:33.320 +02:00 [Information] Authorization was successful.
2019-04-18 13:31:33.324 +02:00 [Information] Route matched with "{action = \"GetWinkelBijDatum\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)"
2019-04-18 13:31:33.329 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:31:33.331 +02:00 [Information] Authorization was successful.
2019-04-18 13:31:33.332 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:31:33.332 +02:00 [Information] Executing action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 13:31:33.336 +02:00 [Information] Route matched with "{action = \"GetWinkelBijDatum\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)"
2019-04-18 13:31:33.336 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 13:31:33.338 +02:00 [Information] Authorization was successful.
2019-04-18 13:31:33.342 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 13:31:33.345 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 13:31:33.348 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:33.348 +02:00 [Information] Authorization was successful.
2019-04-18 13:31:33.351 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.2464ms.
2019-04-18 13:31:33.351 +02:00 [Information] Executing action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 13:31:33.353 +02:00 [Information] Authorization was successful.
2019-04-18 13:31:33.356 +02:00 [Information] Authorization was successful.
2019-04-18 13:31:33.360 +02:00 [Information] Executing action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 13:31:33.362 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:33.362 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 13:31:33.365 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 13:31:33.366 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:33.366 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 13:31:33.369 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:33.372 +02:00 [Information] Executed action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 25.8907ms.
2019-04-18 13:31:33.377 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.275ms.
2019-04-18 13:31:33.378 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 13:31:33.380 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:33.381 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1678ms.
2019-04-18 13:31:33.385 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:33.386 +02:00 [Information] Executing JsonResult, writing value of type '"SogyoLunchApp.Winkel"'.
2019-04-18 13:31:33.388 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 13:31:33.391 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 60.0959ms
2019-04-18 13:31:33.395 +02:00 [Information] Executed action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 31.2435ms.
2019-04-18 13:31:33.396 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 13:31:33.400 +02:00 [Information] Executed action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 31.7344ms.
2019-04-18 13:31:33.401 +02:00 [Information] Executed action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" in 80.1827ms
2019-04-18 13:31:33.403 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 13:31:33.403 +02:00 [Information] Request finished in 150.6244ms 200 application/json; charset=utf-8
2019-04-18 13:31:33.406 +02:00 [Information] Executing JsonResult, writing value of type '"SogyoLunchApp.Winkel"'.
2019-04-18 13:31:33.407 +02:00 [Information] Executed action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" in 69.3407ms
2019-04-18 13:31:33.409 +02:00 [Information] Executing JsonResult, writing value of type '"SogyoLunchApp.Winkel"'.
2019-04-18 13:31:33.410 +02:00 [Information] Request finished in 153.3898ms 200 application/json; charset=utf-8
2019-04-18 13:31:33.414 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 60.8056ms
2019-04-18 13:31:33.415 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 13:31:33.417 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 13:31:33.418 +02:00 [Information] Request finished in 160.0659ms 200 application/json; charset=utf-8
2019-04-18 13:31:33.419 +02:00 [Information] Executed action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" in 70.8837ms
2019-04-18 13:31:33.420 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 13:31:33.424 +02:00 [Information] Request finished in 184.5505ms 200 application/json; charset=utf-8
2019-04-18 13:31:33.425 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:33.428 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 71.917ms
2019-04-18 13:31:33.429 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 13:31:33.430 +02:00 [Information] Request finished in 184.1671ms 200 application/json; charset=utf-8
2019-04-18 13:31:33.431 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:33.432 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 13:31:33.433 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:33.435 +02:00 [Information] Request finished in 176.3895ms 200 application/json; charset=utf-8
2019-04-18 13:31:33.436 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:33.437 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 13:31:33.439 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:33.440 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:33.441 +02:00 [Information] Successfully validated the token.
2019-04-18 13:31:33.441 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 13:31:33.443 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:33.444 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:33.445 +02:00 [Information] Successfully validated the token.
2019-04-18 13:31:33.446 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:33.446 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:31:33.447 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:33.448 +02:00 [Information] Successfully validated the token.
2019-04-18 13:31:33.449 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:33.450 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:31:33.451 +02:00 [Information] Successfully validated the token.
2019-04-18 13:31:33.452 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:31:33.453 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:33.454 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:31:33.455 +02:00 [Information] Successfully validated the token.
2019-04-18 13:31:33.456 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:31:33.456 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:31:33.459 +02:00 [Information] Successfully validated the token.
2019-04-18 13:31:33.460 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:31:33.461 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:31:33.461 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:31:33.462 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:31:33.465 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:31:33.466 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:31:33.466 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:31:33.467 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:31:33.470 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:31:33.476 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:31:33.477 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:31:33.479 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:31:33.483 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:31:33.486 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:31:33.490 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:31:33.491 +02:00 [Information] Route matched with "{action = \"GetProductenbijDatum\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenbijDatum (Services)"
2019-04-18 13:31:33.493 +02:00 [Information] Route matched with "{action = \"GetDeadlinePerDatum\", controller = \"Deadline\"}". Executing action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)"
2019-04-18 13:31:33.496 +02:00 [Information] Route matched with "{action = \"GetWinkelBijDatum\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)"
2019-04-18 13:31:33.502 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:31:33.503 +02:00 [Information] Authorization was successful.
2019-04-18 13:31:33.503 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:31:33.504 +02:00 [Information] Authorization was successful.
2019-04-18 13:31:33.505 +02:00 [Information] Executing action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 13:31:33.508 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 13:31:33.511 +02:00 [Information] Route matched with "{action = \"GetDeadlinePerDatum\", controller = \"Deadline\"}". Executing action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)"
2019-04-18 13:31:33.512 +02:00 [Information] Authorization was successful.
2019-04-18 13:31:33.516 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenbijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 13:31:33.517 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:31:33.518 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:33.520 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:33.521 +02:00 [Information] Authorization was successful.
2019-04-18 13:31:33.522 +02:00 [Information] Authorization was successful.
2019-04-18 13:31:33.523 +02:00 [Information] Executing action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 13:31:33.526 +02:00 [Information] Route matched with "{action = \"GetProductenbijDatum\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenbijDatum (Services)"
2019-04-18 13:31:33.529 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__bezorgdag_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [x].[Dag], [x].[BestelDeadlineDag], [x].[BestelDeadlineTijd], [x].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [x]
WHERE [x].[Dag] = @__bezorgdag_0"
2019-04-18 13:31:33.531 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:33.532 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 13:31:33.532 +02:00 [Information] Executing action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 13:31:33.534 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:33.535 +02:00 [Information] Authorization was successful.
2019-04-18 13:31:33.538 +02:00 [Information] Executed action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 20.1498ms.
2019-04-18 13:31:33.543 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 13:31:33.543 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.215ms.
2019-04-18 13:31:33.545 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:33.548 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:33.548 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenbijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 13:31:33.550 +02:00 [Information] Executing JsonResult, writing value of type '"System.DateTime"'.
2019-04-18 13:31:33.552 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenbijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 32.7183ms.
2019-04-18 13:31:33.554 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 13:31:33.557 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__bezorgdag_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [x].[Dag], [x].[BestelDeadlineDag], [x].[BestelDeadlineTijd], [x].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [x]
WHERE [x].[Dag] = @__bezorgdag_0"
2019-04-18 13:31:33.560 +02:00 [Information] Executed action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 25.7585ms.
2019-04-18 13:31:33.562 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:33.563 +02:00 [Information] Executed action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" in 60.2525ms
2019-04-18 13:31:33.565 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 13:31:33.567 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 13:31:33.569 +02:00 [Information] Executed action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 24.4335ms.
2019-04-18 13:31:33.571 +02:00 [Information] Executing JsonResult, writing value of type '"SogyoLunchApp.Winkel"'.
2019-04-18 13:31:33.574 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:33.575 +02:00 [Information] Request finished in 137.7364ms 200 application/json; charset=utf-8
2019-04-18 13:31:33.576 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenbijDatum (Services)" in 72.0009ms
2019-04-18 13:31:33.579 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 57.89ms
2019-04-18 13:31:33.581 +02:00 [Information] Executing JsonResult, writing value of type '"System.DateTime"'.
2019-04-18 13:31:33.582 +02:00 [Information] Executed action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" in 69.9196ms
2019-04-18 13:31:33.585 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 13:31:33.585 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 13:31:33.588 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenbijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 26.9024ms.
2019-04-18 13:31:33.590 +02:00 [Information] Request finished in 161.1895ms 200 application/json; charset=utf-8
2019-04-18 13:31:33.592 +02:00 [Information] Request finished in 171.716ms 200 application/json; charset=utf-8
2019-04-18 13:31:33.593 +02:00 [Information] Executed action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" in 70.8285ms
2019-04-18 13:31:33.595 +02:00 [Information] Request finished in 179.8787ms 200 application/json; charset=utf-8
2019-04-18 13:31:33.596 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:33.597 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 13:31:33.599 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 13:31:33.599 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 13:31:33.601 +02:00 [Information] Request finished in 159.1568ms 200 application/json; charset=utf-8
2019-04-18 13:31:33.602 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 13:31:33.603 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:33.605 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenbijDatum (Services)" in 69.1831ms
2019-04-18 13:31:33.605 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:33.606 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:33.608 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:31:33.609 +02:00 [Information] Successfully validated the token.
2019-04-18 13:31:33.610 +02:00 [Information] Request finished in 177.5203ms 200 application/json; charset=utf-8
2019-04-18 13:31:33.611 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:33.612 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:33.614 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:31:33.616 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:31:33.618 +02:00 [Information] Successfully validated the token.
2019-04-18 13:31:33.618 +02:00 [Information] Successfully validated the token.
2019-04-18 13:31:33.619 +02:00 [Information] Successfully validated the token.
2019-04-18 13:31:33.620 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:31:33.621 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:31:33.622 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:31:33.623 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:31:33.626 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:31:33.627 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:31:33.628 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:31:33.631 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:31:33.632 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:31:33.635 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:31:33.637 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:31:33.642 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:31:33.645 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:31:33.648 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:31:33.649 +02:00 [Information] Route matched with "{action = \"GetDeadlinePerDatum\", controller = \"Deadline\"}". Executing action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)"
2019-04-18 13:31:33.652 +02:00 [Information] Route matched with "{action = \"GetProductenbijDatum\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenbijDatum (Services)"
2019-04-18 13:31:33.657 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:31:33.657 +02:00 [Information] Route matched with "{action = \"GetDeadlinePerDatum\", controller = \"Deadline\"}". Executing action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)"
2019-04-18 13:31:33.659 +02:00 [Information] Authorization was successful.
2019-04-18 13:31:33.660 +02:00 [Information] Authorization was successful.
2019-04-18 13:31:33.663 +02:00 [Information] Route matched with "{action = \"GetProductenbijDatum\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenbijDatum (Services)"
2019-04-18 13:31:33.664 +02:00 [Information] Authorization was successful.
2019-04-18 13:31:33.665 +02:00 [Information] Executing action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 13:31:33.666 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenbijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 13:31:33.667 +02:00 [Information] Authorization was successful.
2019-04-18 13:31:33.668 +02:00 [Information] Executing action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 13:31:33.670 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:33.672 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:33.672 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenbijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 13:31:33.674 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:33.676 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__bezorgdag_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [x].[Dag], [x].[BestelDeadlineDag], [x].[BestelDeadlineTijd], [x].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [x]
WHERE [x].[Dag] = @__bezorgdag_0"
2019-04-18 13:31:33.679 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:33.681 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:31:33.684 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__bezorgdag_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [x].[Dag], [x].[BestelDeadlineDag], [x].[BestelDeadlineTijd], [x].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [x]
WHERE [x].[Dag] = @__bezorgdag_0"
2019-04-18 13:31:33.686 +02:00 [Information] Executed action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 16.2644ms.
2019-04-18 13:31:33.689 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 13:31:33.692 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:31:33.694 +02:00 [Information] Executed action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 20.2376ms.
2019-04-18 13:31:33.695 +02:00 [Information] Executing JsonResult, writing value of type '"System.DateTime"'.
2019-04-18 13:31:33.698 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenbijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 26.6483ms.
2019-04-18 13:31:33.701 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 13:31:33.702 +02:00 [Information] Executing JsonResult, writing value of type '"System.DateTime"'.
2019-04-18 13:31:33.703 +02:00 [Information] Executed action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" in 44.6169ms
2019-04-18 13:31:33.705 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 13:31:33.707 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenbijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 27.1627ms.
2019-04-18 13:31:33.708 +02:00 [Information] Executed action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" in 44.3232ms
2019-04-18 13:31:33.709 +02:00 [Information] Request finished in 110.8713ms 200 application/json; charset=utf-8
2019-04-18 13:31:33.711 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenbijDatum (Services)" in 50.5035ms
2019-04-18 13:31:33.712 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 13:31:33.713 +02:00 [Information] Request finished in 111.7364ms 200 application/json; charset=utf-8
2019-04-18 13:31:33.715 +02:00 [Information] Request finished in 115.8958ms 200 application/json; charset=utf-8
2019-04-18 13:31:33.717 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenbijDatum (Services)" in 50.4828ms
2019-04-18 13:31:33.721 +02:00 [Information] Request finished in 135.3379ms 200 application/json; charset=utf-8
2019-04-18 13:56:27.331 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 13:56:27.336 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:56:27.337 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:56:27.339 +02:00 [Information] Request finished in 14.0746ms 204 
2019-04-18 13:56:27.346 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 13:56:27.347 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:56:27.348 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:56:27.353 +02:00 [Information] Successfully validated the token.
2019-04-18 13:56:27.355 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:56:27.362 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:56:27.503 +02:00 [Information] Executed DbCommand ("13"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:56:27.515 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:56:27.522 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 13:56:27.524 +02:00 [Information] Authorization was successful.
2019-04-18 13:56:27.525 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 13:56:27.527 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.2005ms.
2019-04-18 13:56:27.529 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 13:56:27.534 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 13:56:27.538 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 14.3806ms
2019-04-18 13:56:27.539 +02:00 [Information] Request finished in 193.1588ms 200 application/json; charset=utf-8
2019-04-18 13:57:55.798 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 13:57:55.815 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:57:55.819 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:57:55.822 +02:00 [Information] Request finished in 24.513ms 204 
2019-04-18 13:57:55.831 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 13:57:55.832 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:57:55.833 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:57:55.842 +02:00 [Information] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters) in C:\agent1\_work\109\s\src\Microsoft.IdentityModel.Tokens\Validators.cs:line 274
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters) in C:\agent1\_work\109\s\src\System.IdentityModel.Tokens.Jwt\JwtSecurityTokenHandler.cs:line 1182
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters) in C:\agent1\_work\109\s\src\System.IdentityModel.Tokens.Jwt\JwtSecurityTokenHandler.cs:line 739
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken) in C:\agent1\_work\109\s\src\System.IdentityModel.Tokens.Jwt\JwtSecurityTokenHandler.cs:line 723
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2019-04-18 13:57:55.914 +02:00 [Information] "Bearer" was not authenticated. Failure message: "IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'."
2019-04-18 13:57:55.916 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 13:57:55.918 +02:00 [Information] Authorization failed.
2019-04-18 13:57:55.919 +02:00 [Information] Authorization failed for the request at filter '"Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter"'.
2019-04-18 13:57:55.920 +02:00 [Information] Executing ChallengeResult with authentication schemes ([]).
2019-04-18 13:57:55.922 +02:00 [Information] AuthenticationScheme: "Bearer" was challenged.
2019-04-18 13:57:55.922 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 4.7349ms
2019-04-18 13:57:55.923 +02:00 [Information] Request finished in 92.5674ms 401 text/plain
2019-04-18 13:57:59.454 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/Auth/ExternalLogin  
2019-04-18 13:57:59.466 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:57:59.468 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:57:59.469 +02:00 [Information] Request finished in 15.4027ms 204 
2019-04-18 13:57:59.485 +02:00 [Information] Request starting HTTP/1.1 POST http://localhost:5000/sogyolunchapi/Auth/ExternalLogin application/json;charset=UTF-8 1303
2019-04-18 13:57:59.494 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:57:59.511 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:57:59.516 +02:00 [Information] Route matched with "{action = \"ExternalLogin\", controller = \"Auth\"}". Executing action "SogyoLunchApp.APIService.AuthController.ExternalLogin (Services)"
2019-04-18 13:57:59.528 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:57:59.546 +02:00 [Information] Executing action method "SogyoLunchApp.APIService.AuthController.ExternalLogin (Services)" with arguments (["SogyoLunchApp.APIService.ExternalLoginModel"]) - Validation state: Valid
2019-04-18 13:57:59.683 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:57:59.704 +02:00 [Information] Executed DbCommand ("18"ms) [Parameters=["@__normalizedEmail_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName]
FROM [AspNetUsers] AS [u]
WHERE [u].[NormalizedEmail] = @__normalizedEmail_0"
2019-04-18 13:57:59.723 +02:00 [Information] Executed DbCommand ("13"ms) [Parameters=["@__loginProvider_0='?' (Size = 450), @__providerKey_1='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [userLogin].[LoginProvider], [userLogin].[ProviderKey], [userLogin].[ProviderDisplayName], [userLogin].[UserId]
FROM [AspNetUserLogins] AS [userLogin]
WHERE ([userLogin].[LoginProvider] = @__loginProvider_0) AND ([userLogin].[ProviderKey] = @__providerKey_1)"
2019-04-18 13:57:59.749 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__userId_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName]
FROM [AspNetUsers] AS [u]
WHERE [u].[Id] = @__userId_0"
2019-04-18 13:57:59.756 +02:00 [Warning] AddLogin for user "3a4a5049-5bff-4683-8042-7e01e6740527" failed because it was already associated with another user.
2019-04-18 13:57:59.763 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__user_Id_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [uc].[Id], [uc].[ClaimType], [uc].[ClaimValue], [uc].[UserId]
FROM [AspNetUserClaims] AS [uc]
WHERE [uc].[UserId] = @__user_Id_0"
2019-04-18 13:57:59.794 +02:00 [Information] Executed DbCommand ("26"ms) [Parameters=["@__userId_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [role].[Name]
FROM [AspNetUserRoles] AS [userRole]
INNER JOIN [AspNetRoles] AS [role] ON [userRole].[RoleId] = [role].[Id]
WHERE [userRole].[UserId] = @__userId_0"
2019-04-18 13:57:59.801 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__normalizedName_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [r].[Id], [r].[ConcurrencyStamp], [r].[Name], [r].[NormalizedName]
FROM [AspNetRoles] AS [r]
WHERE [r].[NormalizedName] = @__normalizedName_0"
2019-04-18 13:57:59.809 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__role_Id_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [rc].[ClaimType], [rc].[ClaimValue]
FROM [AspNetRoleClaims] AS [rc]
WHERE [rc].[RoleId] = @__role_Id_0"
2019-04-18 13:57:59.814 +02:00 [Information] AuthenticationScheme: "Identity.Application" signed in.
2019-04-18 13:57:59.819 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__userId_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [role].[Name]
FROM [AspNetUserRoles] AS [userRole]
INNER JOIN [AspNetRoles] AS [role] ON [userRole].[RoleId] = [role].[Id]
WHERE [userRole].[UserId] = @__userId_0"
2019-04-18 13:57:59.828 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:57:59.838 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__normalizedUserName_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName]
FROM [AspNetUsers] AS [u]
WHERE [u].[NormalizedUserName] = @__normalizedUserName_0"
2019-04-18 13:57:59.999 +02:00 [Information] Executed DbCommand ("148"ms) [Parameters=["@p0='?' (DbType = Guid), @p1='?' (Size = 450), @p2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
DELETE FROM [AspNetUserTokens]
WHERE [UserId] = @p0 AND [LoginProvider] = @p1 AND [Name] = @p2;
SELECT @@ROWCOUNT;"
2019-04-18 13:58:00.011 +02:00 [Information] Executed DbCommand ("9"ms) [Parameters=["@p14='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p15='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTimeOffset), @p6='?' (Size = 256), @p7='?' (Size = 256), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Boolean), @p11='?' (Size = 4000), @p12='?' (DbType = Boolean), @p13='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [LockoutEnabled] = @p4, [LockoutEnd] = @p5, [NormalizedEmail] = @p6, [NormalizedUserName] = @p7, [PasswordHash] = @p8, [PhoneNumber] = @p9, [PhoneNumberConfirmed] = @p10, [SecurityStamp] = @p11, [TwoFactorEnabled] = @p12, [UserName] = @p13
WHERE [Id] = @p14 AND [ConcurrencyStamp] = @p15;
SELECT @@ROWCOUNT;"
2019-04-18 13:58:00.027 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:58:00.032 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__normalizedUserName_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName]
FROM [AspNetUsers] AS [u]
WHERE [u].[NormalizedUserName] = @__normalizedUserName_0"
2019-04-18 13:58:00.038 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@p0='?' (DbType = Guid), @p1='?' (Size = 450), @p2='?' (Size = 450), @p3='?' (Size = 4000)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
INSERT INTO [AspNetUserTokens] ([UserId], [LoginProvider], [Name], [Value])
VALUES (@p0, @p1, @p2, @p3);"
2019-04-18 13:58:00.044 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@p14='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p15='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTimeOffset), @p6='?' (Size = 256), @p7='?' (Size = 256), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Boolean), @p11='?' (Size = 4000), @p12='?' (DbType = Boolean), @p13='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [LockoutEnabled] = @p4, [LockoutEnd] = @p5, [NormalizedEmail] = @p6, [NormalizedUserName] = @p7, [PasswordHash] = @p8, [PhoneNumber] = @p9, [PhoneNumberConfirmed] = @p10, [SecurityStamp] = @p11, [TwoFactorEnabled] = @p12, [UserName] = @p13
WHERE [Id] = @p14 AND [ConcurrencyStamp] = @p15;
SELECT @@ROWCOUNT;"
2019-04-18 13:58:00.049 +02:00 [Information] Executed action method "SogyoLunchApp.APIService.AuthController.ExternalLogin (Services)", returned result "Microsoft.AspNetCore.Mvc.OkObjectResult" in 501.1235ms.
2019-04-18 13:58:00.051 +02:00 [Information] Executing ObjectResult, writing value of type '"<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"'.
2019-04-18 13:58:00.053 +02:00 [Information] Executed action "SogyoLunchApp.APIService.AuthController.ExternalLogin (Services)" in 524.9228ms
2019-04-18 13:58:00.054 +02:00 [Information] Request finished in 569.0893ms 200 application/json; charset=utf-8
2019-04-18 13:58:00.172 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 13:58:00.180 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:58:00.181 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:58:00.182 +02:00 [Information] Request finished in 9.7054ms 204 
2019-04-18 13:58:00.219 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 13:58:00.252 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:58:00.268 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:58:00.293 +02:00 [Information] Successfully validated the token.
2019-04-18 13:58:00.299 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:58:00.301 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:58:00.311 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:58:00.319 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:58:00.328 +02:00 [Information] Route matched with "{action = \"getBezorgdagen\", controller = \"Bezorgdag\"}". Executing action "Services.APIService.BezorgdagController.getBezorgdagen (Services)"
2019-04-18 13:58:00.331 +02:00 [Information] Authorization was successful.
2019-04-18 13:58:00.332 +02:00 [Information] Executing action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)" with arguments (["40"]) - Validation state: Valid
2019-04-18 13:58:00.337 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.370 +02:00 [Information] Executed DbCommand ("26"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.377 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.381 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.385 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.395 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.401 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.409 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.414 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.419 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.425 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.429 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.432 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.435 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.438 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.446 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.449 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.452 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.460 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.465 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.470 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.481 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.486 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.495 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.500 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.510 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.515 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.519 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.530 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.535 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.545 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.549 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.554 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.563 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.567 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.575 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.581 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.586 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.598 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.603 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.616 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.624 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.630 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.633 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.637 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.713 +02:00 [Information] Executed DbCommand ("72"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.762 +02:00 [Information] Executed DbCommand ("10"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.766 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.771 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.779 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.784 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.789 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.795 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.801 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.807 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.811 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.817 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.822 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.826 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.830 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.834 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.838 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.843 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.847 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.851 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.855 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.859 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.863 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.868 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.872 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.876 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.881 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.885 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.889 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.892 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.895 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.897 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.900 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.903 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:00.906 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:00.908 +02:00 [Information] Executed action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 574.4745ms.
2019-04-18 13:58:00.910 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[System.DateTime, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"'.
2019-04-18 13:58:00.912 +02:00 [Information] Executed action "Services.APIService.BezorgdagController.getBezorgdagen (Services)" in 581.0798ms
2019-04-18 13:58:00.913 +02:00 [Information] Request finished in 693.7118ms 200 application/json; charset=utf-8
2019-04-18 13:58:00.923 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 13:58:00.925 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:58:00.928 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:58:00.929 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 13:58:00.929 +02:00 [Information] Request finished in 6.5627ms 204 
2019-04-18 13:58:00.929 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 13:58:00.931 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 13:58:00.932 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:58:00.933 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:58:00.935 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:58:00.939 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:58:00.940 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 13:58:00.940 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:58:00.942 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:58:00.942 +02:00 [Information] Request finished in 12.4382ms 204 
2019-04-18 13:58:00.944 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:58:00.952 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:58:00.953 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 13:58:00.954 +02:00 [Information] Request finished in 24.9286ms 204 
2019-04-18 13:58:00.956 +02:00 [Information] Request finished in 27.0433ms 204 
2019-04-18 13:58:00.959 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:58:00.964 +02:00 [Information] Successfully validated the token.
2019-04-18 13:58:00.965 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:58:00.965 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 13:58:00.965 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 13:58:00.966 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:58:00.967 +02:00 [Information] Successfully validated the token.
2019-04-18 13:58:00.968 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:58:00.968 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:58:00.970 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:58:00.970 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:58:00.971 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:58:00.973 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:58:00.978 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:58:00.979 +02:00 [Information] Successfully validated the token.
2019-04-18 13:58:00.980 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:58:00.982 +02:00 [Information] Successfully validated the token.
2019-04-18 13:58:00.983 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:58:00.987 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:58:00.988 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:58:00.994 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:58:00.999 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:58:01.004 +02:00 [Information] Route matched with "{action = \"GetWinkelBijDatum\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)"
2019-04-18 13:58:01.006 +02:00 [Information] Authorization was successful.
2019-04-18 13:58:01.007 +02:00 [Information] Executing action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 13:58:01.013 +02:00 [Information] Executed DbCommand ("10"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:58:01.014 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:01.017 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:58:01.027 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:58:01.054 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:58:01.054 +02:00 [Information] Executed DbCommand ("17"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:58:01.064 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 13:58:01.064 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:58:01.067 +02:00 [Information] Route matched with "{action = \"GetDeadlinePerDatum\", controller = \"Deadline\"}". Executing action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)"
2019-04-18 13:58:01.067 +02:00 [Information] Authorization was successful.
2019-04-18 13:58:01.071 +02:00 [Information] Route matched with "{action = \"GetProductenbijDatum\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenbijDatum (Services)"
2019-04-18 13:58:01.072 +02:00 [Information] Authorization was successful.
2019-04-18 13:58:01.072 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 13:58:01.074 +02:00 [Information] Authorization was successful.
2019-04-18 13:58:01.075 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenbijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 13:58:01.077 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.5915ms.
2019-04-18 13:58:01.078 +02:00 [Information] Executing action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 13:58:01.081 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 13:58:01.082 +02:00 [Information] Executed DbCommand ("21"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:01.085 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:01.087 +02:00 [Information] Executed action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 78.3863ms.
2019-04-18 13:58:01.092 +02:00 [Information] Executing JsonResult, writing value of type '"SogyoLunchApp.Winkel"'.
2019-04-18 13:58:01.093 +02:00 [Information] Executed action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" in 87.5852ms
2019-04-18 13:58:01.094 +02:00 [Information] Executed DbCommand ("14"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:01.094 +02:00 [Information] Request finished in 154.2095ms 200 application/json; charset=utf-8
2019-04-18 13:58:01.102 +02:00 [Information] Executed DbCommand ("18"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 13:58:01.105 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 37.9622ms
2019-04-18 13:58:01.107 +02:00 [Information] Request finished in 141.6823ms 200 application/json; charset=utf-8
2019-04-18 13:58:01.110 +02:00 [Information] Executed DbCommand ("19"ms) [Parameters=["@__bezorgdag_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [x].[Dag], [x].[BestelDeadlineDag], [x].[BestelDeadlineTijd], [x].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [x]
WHERE [x].[Dag] = @__bezorgdag_0"
2019-04-18 13:58:01.113 +02:00 [Information] Executed action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 29.8365ms.
2019-04-18 13:58:01.114 +02:00 [Information] Executing JsonResult, writing value of type '"System.DateTime"'.
2019-04-18 13:58:01.115 +02:00 [Information] Executed action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" in 43.8818ms
2019-04-18 13:58:01.117 +02:00 [Information] Request finished in 163.1378ms 200 application/json; charset=utf-8
2019-04-18 13:58:01.137 +02:00 [Information] Executed DbCommand ("40"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:01.167 +02:00 [Information] Executed DbCommand ("25"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 13:58:01.170 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenbijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 91.1499ms.
2019-04-18 13:58:01.172 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 13:58:01.174 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenbijDatum (Services)" in 100.4256ms
2019-04-18 13:58:01.176 +02:00 [Information] Request finished in 210.4991ms 200 application/json; charset=utf-8
2019-04-18 13:58:07.901 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 13:58:07.904 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:58:07.913 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:58:07.914 +02:00 [Information] Request finished in 12.6923ms 204 
2019-04-18 13:58:07.918 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 13:58:07.919 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:58:07.921 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:58:07.929 +02:00 [Information] Successfully validated the token.
2019-04-18 13:58:07.929 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:58:07.931 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:58:07.935 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:58:07.948 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:58:07.952 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 13:58:07.953 +02:00 [Information] Authorization was successful.
2019-04-18 13:58:07.954 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 13:58:07.960 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0085ms.
2019-04-18 13:58:07.962 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 13:58:07.964 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 13:58:07.967 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 13.5095ms
2019-04-18 13:58:07.968 +02:00 [Information] Request finished in 50.1669ms 200 application/json; charset=utf-8
2019-04-18 13:58:30.412 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 13:58:30.418 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:58:30.434 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkeluitzonderingenperbezorgdag  
2019-04-18 13:58:30.439 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:58:30.447 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:58:30.448 +02:00 [Information] Request finished in 36.3006ms 204 
2019-04-18 13:58:30.450 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:58:30.452 +02:00 [Information] Request finished in 17.1337ms 204 
2019-04-18 13:58:30.459 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkeluitzonderingenperbezorgdag  
2019-04-18 13:58:30.464 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 13:58:30.465 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:58:30.466 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:58:30.467 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:58:30.468 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:58:30.469 +02:00 [Information] Successfully validated the token.
2019-04-18 13:58:30.470 +02:00 [Information] Successfully validated the token.
2019-04-18 13:58:30.470 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:58:30.471 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:58:30.473 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:58:30.475 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:58:30.483 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:58:30.483 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:58:30.502 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:58:30.504 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:58:30.532 +02:00 [Information] Route matched with "{action = \"GetAlleWinkelUitzonderingenPerBezorgdag\", controller = \"WinkelUitzonderingenPerBezorgdag\"}". Executing action "Services.APIService.WinkelUitzonderingenPerBezorgdagController.GetAlleWinkelUitzonderingenPerBezorgdag (Services)"
2019-04-18 13:58:30.532 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 13:58:30.534 +02:00 [Information] Authorization was successful.
2019-04-18 13:58:30.536 +02:00 [Information] Authorization was successful.
2019-04-18 13:58:30.536 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 13:58:30.537 +02:00 [Information] Executing action method "Services.APIService.WinkelUitzonderingenPerBezorgdagController.GetAlleWinkelUitzonderingenPerBezorgdag (Services)" - Validation state: Valid
2019-04-18 13:58:30.539 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0444ms.
2019-04-18 13:58:30.542 +02:00 [Information] Executed action method "Services.APIService.WinkelUitzonderingenPerBezorgdagController.GetAlleWinkelUitzonderingenPerBezorgdag (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.2898ms.
2019-04-18 13:58:30.544 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 13:58:30.545 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.WinkelUitzonderingenPerBezorgdag, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 13:58:30.548 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 13:58:30.551 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 16.7686ms
2019-04-18 13:58:30.552 +02:00 [Information] Request finished in 87.3666ms 200 application/json; charset=utf-8
2019-04-18 13:58:30.555 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[Date], [x].[BestelDeadline], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
LEFT JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]
WHERE CONVERT(date, [x].[Date]) >= GETDATE()"
2019-04-18 13:58:30.559 +02:00 [Information] Executed action "Services.APIService.WinkelUitzonderingenPerBezorgdagController.GetAlleWinkelUitzonderingenPerBezorgdag (Services)" in 23.8633ms
2019-04-18 13:58:30.561 +02:00 [Information] Request finished in 102.8093ms 200 application/json; charset=utf-8
2019-04-18 13:58:31.782 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=50  
2019-04-18 13:58:31.782 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bezorgdag/geen?aantalDagen=50  
2019-04-18 13:58:31.783 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:58:31.785 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:58:31.787 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:58:31.788 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:58:31.790 +02:00 [Information] Request finished in 8.1501ms 204 
2019-04-18 13:58:31.792 +02:00 [Information] Request finished in 10.1844ms 204 
2019-04-18 13:58:31.804 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=50  
2019-04-18 13:58:31.835 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:58:31.835 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bezorgdag/geen?aantalDagen=50  
2019-04-18 13:58:31.836 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:58:31.838 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:58:31.839 +02:00 [Information] Successfully validated the token.
2019-04-18 13:58:31.842 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:58:31.843 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:58:31.845 +02:00 [Information] Successfully validated the token.
2019-04-18 13:58:31.846 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:58:31.846 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:58:31.851 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:58:31.853 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:58:31.865 +02:00 [Information] Executed DbCommand ("10"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:58:31.868 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:58:31.873 +02:00 [Information] Route matched with "{action = \"getBezorgdagen\", controller = \"Bezorgdag\"}". Executing action "Services.APIService.BezorgdagController.getBezorgdagen (Services)"
2019-04-18 13:58:31.876 +02:00 [Information] Authorization was successful.
2019-04-18 13:58:31.878 +02:00 [Information] Executing action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)" with arguments (["50"]) - Validation state: Valid
2019-04-18 13:58:31.887 +02:00 [Information] Executed DbCommand ("16"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:58:31.890 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:31.897 +02:00 [Information] Route matched with "{action = \"getGeenBezorgdagen\", controller = \"Bezorgdag\"}". Executing action "Services.APIService.BezorgdagController.getGeenBezorgdagen (Services)"
2019-04-18 13:58:31.898 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:31.898 +02:00 [Information] Authorization was successful.
2019-04-18 13:58:31.902 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:31.902 +02:00 [Information] Executing action method "Services.APIService.BezorgdagController.getGeenBezorgdagen (Services)" with arguments (["50"]) - Validation state: Valid
2019-04-18 13:58:31.905 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:31.910 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:31.911 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:31.913 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:31.916 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:31.919 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:31.922 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:31.925 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:31.928 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:31.930 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:31.935 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:31.937 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:31.939 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:31.945 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:31.945 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:31.950 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:31.953 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:31.958 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:31.958 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:31.963 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:31.967 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:31.970 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:31.972 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:31.978 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:31.980 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:31.986 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:31.986 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:31.993 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:31.993 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:31.999 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.002 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.016 +02:00 [Information] Executed DbCommand ("14"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.016 +02:00 [Information] Executed DbCommand ("12"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.026 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.027 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.031 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.034 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.037 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.038 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.044 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.045 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.050 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.052 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.056 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.061 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.062 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.067 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.069 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.071 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.078 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.079 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.084 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.085 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.091 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.092 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.095 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.098 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.100 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.103 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.105 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.110 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.112 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.115 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.118 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.120 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.126 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.127 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.129 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.132 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.135 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.138 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.143 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.145 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.147 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.150 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.153 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.157 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.160 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.162 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.165 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.167 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.170 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.177 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.179 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.181 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.188 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.188 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.199 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.200 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.207 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.210 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.216 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.225 +02:00 [Information] Executed DbCommand ("9"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.227 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.234 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.235 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.246 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.248 +02:00 [Information] Executed DbCommand ("9"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.254 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.258 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.259 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.261 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.265 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.267 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.269 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.273 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.274 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.277 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.280 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.285 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.285 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.289 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.291 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.295 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.296 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.300 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.302 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.306 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.307 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.310 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.313 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.316 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.319 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.321 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.323 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.327 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.328 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.332 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.334 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.338 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.339 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.342 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.344 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.347 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.349 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.352 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.354 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.357 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.360 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.363 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.366 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.368 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.371 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.373 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.376 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.378 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.381 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.384 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.386 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.389 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.392 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.394 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.398 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.400 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.402 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.405 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.410 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.411 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.413 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.417 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.420 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.423 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.429 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.433 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.434 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.439 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.442 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.446 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.448 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.453 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.458 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.459 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.463 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.467 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.468 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.472 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.475 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.477 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.479 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.482 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.483 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.488 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.489 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.493 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.494 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.498 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.500 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.503 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.504 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.509 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.512 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.515 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.516 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.520 +02:00 [Information] Executed action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 640.6576ms.
2019-04-18 13:58:32.520 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.522 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[System.DateTime, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"'.
2019-04-18 13:58:32.526 +02:00 [Information] Executed action "Services.APIService.BezorgdagController.getBezorgdagen (Services)" in 649.7ms
2019-04-18 13:58:32.527 +02:00 [Information] Request finished in 723.8482ms 200 application/json; charset=utf-8
2019-04-18 13:58:32.527 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.534 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 13:58:32.538 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 13:58:32.540 +02:00 [Information] Executed action method "Services.APIService.BezorgdagController.getGeenBezorgdagen (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 633.2355ms.
2019-04-18 13:58:32.542 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[System.DateTime, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"'.
2019-04-18 13:58:32.543 +02:00 [Information] Executed action "Services.APIService.BezorgdagController.getGeenBezorgdagen (Services)" in 645.1235ms
2019-04-18 13:58:32.545 +02:00 [Information] Request finished in 710.1241ms 200 application/json; charset=utf-8
2019-04-18 13:58:46.045 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 13:58:46.046 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:58:46.048 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:58:46.049 +02:00 [Information] Request finished in 4.4722ms 204 
2019-04-18 13:58:46.053 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 13:58:46.054 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 13:58:46.055 +02:00 [Information] CORS policy execution successful.
2019-04-18 13:58:46.056 +02:00 [Information] Successfully validated the token.
2019-04-18 13:58:46.058 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 13:58:46.060 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 13:58:46.066 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 13:58:46.078 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 13:58:46.085 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 13:58:46.087 +02:00 [Information] Authorization was successful.
2019-04-18 13:58:46.087 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 13:58:46.089 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0041ms.
2019-04-18 13:58:46.093 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 13:58:46.097 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 13:58:46.100 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 13.0923ms
2019-04-18 13:58:46.101 +02:00 [Information] Request finished in 48.2705ms 200 application/json; charset=utf-8
2019-04-18 14:04:26.096 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 14:04:26.103 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:04:26.110 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:04:26.131 +02:00 [Information] Request finished in 36.9225ms 204 
2019-04-18 14:04:26.535 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 14:04:26.538 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:04:26.540 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:04:26.548 +02:00 [Information] Successfully validated the token.
2019-04-18 14:04:26.552 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 14:04:26.561 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 14:04:27.663 +02:00 [Information] Executed DbCommand ("267"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 14:04:27.707 +02:00 [Information] Executed DbCommand ("34"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 14:04:27.718 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 14:04:27.720 +02:00 [Information] Authorization was successful.
2019-04-18 14:04:27.721 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 14:04:27.723 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0841ms.
2019-04-18 14:04:27.725 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 14:04:27.750 +02:00 [Information] Executed DbCommand ("24"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 14:04:27.755 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 35.5973ms
2019-04-18 14:04:27.757 +02:00 [Information] Request finished in 1222.0592ms 200 application/json; charset=utf-8
2019-04-18 14:04:48.409 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 14:04:48.411 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:04:48.413 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:04:48.414 +02:00 [Information] Request finished in 5.1176ms 204 
2019-04-18 14:04:48.422 +02:00 [Information] Request starting HTTP/1.1 POST http://localhost:5000/sogyolunchapi/categorie  0
2019-04-18 14:04:48.424 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:04:48.427 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:04:48.429 +02:00 [Information] Successfully validated the token.
2019-04-18 14:04:48.430 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 14:04:48.432 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 14:04:48.438 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 14:04:48.448 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 14:04:48.459 +02:00 [Information] Route matched with "{action = \"AddCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.AddCategorie (Services)"
2019-04-18 14:04:48.461 +02:00 [Information] Authorization was successful.
2019-04-18 14:04:48.486 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 415
2019-04-18 14:04:48.488 +02:00 [Information] Executed action "Services.APIService.CategorieController.AddCategorie (Services)" in 27.5892ms
2019-04-18 14:04:48.489 +02:00 [Information] Request finished in 67.8092ms 415 
2019-04-18 14:06:28.081 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 14:06:28.082 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:06:28.086 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:06:28.089 +02:00 [Information] Request finished in 8.2408ms 204 
2019-04-18 14:06:28.101 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 14:06:28.103 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:06:28.104 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:06:28.107 +02:00 [Information] Successfully validated the token.
2019-04-18 14:06:28.112 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 14:06:28.119 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 14:06:28.134 +02:00 [Information] Executed DbCommand ("9"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 14:06:28.142 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 14:06:28.145 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 14:06:28.146 +02:00 [Information] Authorization was successful.
2019-04-18 14:06:28.147 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 14:06:28.149 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.006ms.
2019-04-18 14:06:28.150 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 14:06:28.152 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 14:06:28.155 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 8.7977ms
2019-04-18 14:06:28.157 +02:00 [Information] Request finished in 55.4131ms 200 application/json; charset=utf-8
2019-04-18 14:06:32.528 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 14:06:32.545 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:06:32.547 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:06:32.548 +02:00 [Information] Request finished in 19.8241ms 204 
2019-04-18 14:06:32.828 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 14:06:32.855 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:06:32.945 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:06:33.042 +02:00 [Information] Successfully validated the token.
2019-04-18 14:06:33.050 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 14:06:33.052 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 14:06:33.061 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 14:06:33.073 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 14:06:33.082 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 14:06:33.084 +02:00 [Information] Authorization was successful.
2019-04-18 14:06:33.084 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 14:06:33.086 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0054ms.
2019-04-18 14:06:33.087 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 14:06:33.091 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 14:06:33.094 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 10.2541ms
2019-04-18 14:06:33.095 +02:00 [Information] Request finished in 267.5414ms 200 application/json; charset=utf-8
2019-04-18 14:06:46.145 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 14:06:46.149 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:06:46.151 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:06:46.152 +02:00 [Information] Request finished in 7.17ms 204 
2019-04-18 14:06:46.159 +02:00 [Information] Request starting HTTP/1.1 POST http://localhost:5000/sogyolunchapi/categorie  0
2019-04-18 14:06:46.161 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:06:46.163 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:06:46.164 +02:00 [Information] Successfully validated the token.
2019-04-18 14:06:46.165 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 14:06:46.166 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 14:06:46.172 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 14:06:46.180 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 14:06:46.183 +02:00 [Information] Route matched with "{action = \"AddCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.AddCategorie (Services)"
2019-04-18 14:06:46.185 +02:00 [Information] Authorization was successful.
2019-04-18 14:06:46.186 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 415
2019-04-18 14:06:46.187 +02:00 [Information] Executed action "Services.APIService.CategorieController.AddCategorie (Services)" in 1.9794ms
2019-04-18 14:06:46.188 +02:00 [Information] Request finished in 28.7211ms 415 
2019-04-18 14:45:15.489 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 14:45:15.498 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:45:15.499 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:45:15.504 +02:00 [Information] Request finished in 21.304ms 204 
2019-04-18 14:45:15.520 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 14:45:15.522 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:45:15.523 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:45:15.548 +02:00 [Information] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters) in C:\agent1\_work\109\s\src\Microsoft.IdentityModel.Tokens\Validators.cs:line 274
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters) in C:\agent1\_work\109\s\src\System.IdentityModel.Tokens.Jwt\JwtSecurityTokenHandler.cs:line 1182
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters) in C:\agent1\_work\109\s\src\System.IdentityModel.Tokens.Jwt\JwtSecurityTokenHandler.cs:line 739
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken) in C:\agent1\_work\109\s\src\System.IdentityModel.Tokens.Jwt\JwtSecurityTokenHandler.cs:line 723
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2019-04-18 14:45:15.575 +02:00 [Information] "Bearer" was not authenticated. Failure message: "IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'."
2019-04-18 14:45:15.581 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 14:45:15.584 +02:00 [Information] Authorization failed.
2019-04-18 14:45:15.585 +02:00 [Information] Authorization failed for the request at filter '"Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter"'.
2019-04-18 14:45:15.587 +02:00 [Information] Executing ChallengeResult with authentication schemes ([]).
2019-04-18 14:45:15.591 +02:00 [Information] AuthenticationScheme: "Bearer" was challenged.
2019-04-18 14:45:15.592 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 9.8865ms
2019-04-18 14:45:15.594 +02:00 [Information] Request finished in 73.8525ms 401 text/plain
2019-04-18 14:45:18.556 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/Auth/ExternalLogin  
2019-04-18 14:45:18.559 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:45:18.562 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:45:18.563 +02:00 [Information] Request finished in 7.1067ms 204 
2019-04-18 14:45:18.568 +02:00 [Information] Request starting HTTP/1.1 POST http://localhost:5000/sogyolunchapi/Auth/ExternalLogin application/json;charset=UTF-8 1303
2019-04-18 14:45:18.570 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:45:18.571 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:45:18.573 +02:00 [Information] Route matched with "{action = \"ExternalLogin\", controller = \"Auth\"}". Executing action "SogyoLunchApp.APIService.AuthController.ExternalLogin (Services)"
2019-04-18 14:45:18.577 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 14:45:18.594 +02:00 [Information] Executing action method "SogyoLunchApp.APIService.AuthController.ExternalLogin (Services)" with arguments (["SogyoLunchApp.APIService.ExternalLoginModel"]) - Validation state: Valid
2019-04-18 14:45:18.805 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 14:45:19.947 +02:00 [Information] Executed DbCommand ("316"ms) [Parameters=["@__normalizedEmail_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName]
FROM [AspNetUsers] AS [u]
WHERE [u].[NormalizedEmail] = @__normalizedEmail_0"
2019-04-18 14:45:19.997 +02:00 [Information] Executed DbCommand ("38"ms) [Parameters=["@__loginProvider_0='?' (Size = 450), @__providerKey_1='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [userLogin].[LoginProvider], [userLogin].[ProviderKey], [userLogin].[ProviderDisplayName], [userLogin].[UserId]
FROM [AspNetUserLogins] AS [userLogin]
WHERE ([userLogin].[LoginProvider] = @__loginProvider_0) AND ([userLogin].[ProviderKey] = @__providerKey_1)"
2019-04-18 14:45:20.012 +02:00 [Information] Executed DbCommand ("9"ms) [Parameters=["@__userId_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName]
FROM [AspNetUsers] AS [u]
WHERE [u].[Id] = @__userId_0"
2019-04-18 14:45:20.017 +02:00 [Warning] AddLogin for user "3a4a5049-5bff-4683-8042-7e01e6740527" failed because it was already associated with another user.
2019-04-18 14:45:20.028 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__user_Id_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [uc].[Id], [uc].[ClaimType], [uc].[ClaimValue], [uc].[UserId]
FROM [AspNetUserClaims] AS [uc]
WHERE [uc].[UserId] = @__user_Id_0"
2019-04-18 14:45:20.061 +02:00 [Information] Executed DbCommand ("25"ms) [Parameters=["@__userId_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [role].[Name]
FROM [AspNetUserRoles] AS [userRole]
INNER JOIN [AspNetRoles] AS [role] ON [userRole].[RoleId] = [role].[Id]
WHERE [userRole].[UserId] = @__userId_0"
2019-04-18 14:45:20.068 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__normalizedName_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [r].[Id], [r].[ConcurrencyStamp], [r].[Name], [r].[NormalizedName]
FROM [AspNetRoles] AS [r]
WHERE [r].[NormalizedName] = @__normalizedName_0"
2019-04-18 14:45:20.074 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__role_Id_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [rc].[ClaimType], [rc].[ClaimValue]
FROM [AspNetRoleClaims] AS [rc]
WHERE [rc].[RoleId] = @__role_Id_0"
2019-04-18 14:45:20.080 +02:00 [Information] AuthenticationScheme: "Identity.Application" signed in.
2019-04-18 14:45:20.084 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__userId_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [role].[Name]
FROM [AspNetUserRoles] AS [userRole]
INNER JOIN [AspNetRoles] AS [role] ON [userRole].[RoleId] = [role].[Id]
WHERE [userRole].[UserId] = @__userId_0"
2019-04-18 14:45:20.118 +02:00 [Information] Executed DbCommand ("12"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 14:45:20.125 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__normalizedUserName_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName]
FROM [AspNetUsers] AS [u]
WHERE [u].[NormalizedUserName] = @__normalizedUserName_0"
2019-04-18 14:45:20.285 +02:00 [Information] Executed DbCommand ("145"ms) [Parameters=["@p0='?' (DbType = Guid), @p1='?' (Size = 450), @p2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
DELETE FROM [AspNetUserTokens]
WHERE [UserId] = @p0 AND [LoginProvider] = @p1 AND [Name] = @p2;
SELECT @@ROWCOUNT;"
2019-04-18 14:45:20.314 +02:00 [Information] Executed DbCommand ("25"ms) [Parameters=["@p14='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p15='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTimeOffset), @p6='?' (Size = 256), @p7='?' (Size = 256), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Boolean), @p11='?' (Size = 4000), @p12='?' (DbType = Boolean), @p13='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [LockoutEnabled] = @p4, [LockoutEnd] = @p5, [NormalizedEmail] = @p6, [NormalizedUserName] = @p7, [PasswordHash] = @p8, [PhoneNumber] = @p9, [PhoneNumberConfirmed] = @p10, [SecurityStamp] = @p11, [TwoFactorEnabled] = @p12, [UserName] = @p13
WHERE [Id] = @p14 AND [ConcurrencyStamp] = @p15;
SELECT @@ROWCOUNT;"
2019-04-18 14:45:20.331 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 14:45:20.341 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__normalizedUserName_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName]
FROM [AspNetUsers] AS [u]
WHERE [u].[NormalizedUserName] = @__normalizedUserName_0"
2019-04-18 14:45:20.352 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@p0='?' (DbType = Guid), @p1='?' (Size = 450), @p2='?' (Size = 450), @p3='?' (Size = 4000)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
INSERT INTO [AspNetUserTokens] ([UserId], [LoginProvider], [Name], [Value])
VALUES (@p0, @p1, @p2, @p3);"
2019-04-18 14:45:20.359 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@p14='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p15='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTimeOffset), @p6='?' (Size = 256), @p7='?' (Size = 256), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Boolean), @p11='?' (Size = 4000), @p12='?' (DbType = Boolean), @p13='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [LockoutEnabled] = @p4, [LockoutEnd] = @p5, [NormalizedEmail] = @p6, [NormalizedUserName] = @p7, [PasswordHash] = @p8, [PhoneNumber] = @p9, [PhoneNumberConfirmed] = @p10, [SecurityStamp] = @p11, [TwoFactorEnabled] = @p12, [UserName] = @p13
WHERE [Id] = @p14 AND [ConcurrencyStamp] = @p15;
SELECT @@ROWCOUNT;"
2019-04-18 14:45:20.365 +02:00 [Information] Executed action method "SogyoLunchApp.APIService.AuthController.ExternalLogin (Services)", returned result "Microsoft.AspNetCore.Mvc.OkObjectResult" in 1771.1195ms.
2019-04-18 14:45:20.366 +02:00 [Information] Executing ObjectResult, writing value of type '"<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"'.
2019-04-18 14:45:20.369 +02:00 [Information] Executed action "SogyoLunchApp.APIService.AuthController.ExternalLogin (Services)" in 1797.5566ms
2019-04-18 14:45:20.371 +02:00 [Information] Request finished in 1806.8339ms 200 application/json; charset=utf-8
2019-04-18 14:45:20.526 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 14:45:20.539 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:45:20.555 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:45:20.557 +02:00 [Information] Request finished in 30.9018ms 204 
2019-04-18 14:45:20.564 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 14:45:20.566 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:45:20.577 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:45:20.580 +02:00 [Information] Successfully validated the token.
2019-04-18 14:45:20.581 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 14:45:20.584 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 14:45:20.604 +02:00 [Information] Executed DbCommand ("16"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 14:45:20.630 +02:00 [Information] Executed DbCommand ("15"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 14:45:20.635 +02:00 [Information] Route matched with "{action = \"getBezorgdagen\", controller = \"Bezorgdag\"}". Executing action "Services.APIService.BezorgdagController.getBezorgdagen (Services)"
2019-04-18 14:45:20.636 +02:00 [Information] Authorization was successful.
2019-04-18 14:45:20.641 +02:00 [Information] Executing action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)" with arguments (["40"]) - Validation state: Valid
2019-04-18 14:45:20.665 +02:00 [Information] Executed DbCommand ("17"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:20.693 +02:00 [Information] Executed DbCommand ("24"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:20.699 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:20.709 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:20.735 +02:00 [Information] Executed DbCommand ("21"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:20.763 +02:00 [Information] Executed DbCommand ("22"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:20.768 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:20.781 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:20.792 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:20.796 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:20.801 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:20.809 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:20.814 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:20.818 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:20.823 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:20.827 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:20.831 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:20.836 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:20.842 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:20.847 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:20.851 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:20.856 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:20.860 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:20.865 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:20.870 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:20.875 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:20.879 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:20.882 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:20.886 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:20.889 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:20.892 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:20.895 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:20.897 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:20.901 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:20.904 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:20.907 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:20.910 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:20.913 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:20.916 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:20.919 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:20.922 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:20.925 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:20.928 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:20.931 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:20.933 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:20.937 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:20.940 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:20.943 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:20.946 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:20.949 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:20.951 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:20.954 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:20.957 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:20.960 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:20.965 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:20.971 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:20.975 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:20.979 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:20.984 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:20.994 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:20.999 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:21.004 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:21.009 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:21.014 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:21.019 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:21.024 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:21.029 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:21.033 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:21.037 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:21.041 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:21.046 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:21.050 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:21.054 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:21.058 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:21.062 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:21.066 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:21.071 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:21.075 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:21.080 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:21.087 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:21.091 +02:00 [Information] Executed action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 448.8144ms.
2019-04-18 14:45:21.093 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[System.DateTime, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"'.
2019-04-18 14:45:21.095 +02:00 [Information] Executed action "Services.APIService.BezorgdagController.getBezorgdagen (Services)" in 459.3632ms
2019-04-18 14:45:21.096 +02:00 [Information] Request finished in 533.2306ms 200 application/json; charset=utf-8
2019-04-18 14:45:21.114 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 14:45:21.116 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 14:45:21.130 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 14:45:21.136 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 14:45:21.137 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:45:21.138 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:45:21.139 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:45:21.140 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:45:21.142 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:45:21.143 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:45:21.145 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:45:21.146 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:45:21.147 +02:00 [Information] Request finished in 33.2361ms 204 
2019-04-18 14:45:21.149 +02:00 [Information] Request finished in 19.7677ms 204 
2019-04-18 14:45:21.160 +02:00 [Information] Request finished in 23.9428ms 204 
2019-04-18 14:45:21.163 +02:00 [Information] Request finished in 46.551ms 204 
2019-04-18 14:45:21.173 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 14:45:21.173 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 14:45:21.177 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 14:45:21.180 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 14:45:21.181 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:45:21.182 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:45:21.183 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:45:21.184 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:45:21.185 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:45:21.186 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:45:21.189 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:45:21.190 +02:00 [Information] Successfully validated the token.
2019-04-18 14:45:21.193 +02:00 [Information] Successfully validated the token.
2019-04-18 14:45:21.193 +02:00 [Information] Successfully validated the token.
2019-04-18 14:45:21.195 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:45:21.196 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 14:45:21.196 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 14:45:21.197 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 14:45:21.198 +02:00 [Information] Successfully validated the token.
2019-04-18 14:45:21.199 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 14:45:21.200 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 14:45:21.201 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 14:45:21.201 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 14:45:21.238 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 14:45:21.241 +02:00 [Information] Executed DbCommand ("35"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 14:45:21.262 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 14:45:21.266 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 14:45:21.274 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 14:45:21.277 +02:00 [Information] Route matched with "{action = \"GetDeadlinePerDatum\", controller = \"Deadline\"}". Executing action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)"
2019-04-18 14:45:21.283 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 14:45:21.284 +02:00 [Information] Authorization was successful.
2019-04-18 14:45:21.287 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 14:45:21.291 +02:00 [Information] Executing action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 14:45:21.294 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 14:45:21.299 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 14:45:21.300 +02:00 [Information] Route matched with "{action = \"GetWinkelBijDatum\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)"
2019-04-18 14:45:21.302 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:21.303 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 14:45:21.306 +02:00 [Information] Route matched with "{action = \"GetProductenbijDatum\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenbijDatum (Services)"
2019-04-18 14:45:21.307 +02:00 [Information] Authorization was successful.
2019-04-18 14:45:21.311 +02:00 [Information] Authorization was successful.
2019-04-18 14:45:21.312 +02:00 [Information] Authorization was successful.
2019-04-18 14:45:21.312 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__bezorgdag_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [x].[Dag], [x].[BestelDeadlineDag], [x].[BestelDeadlineTijd], [x].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [x]
WHERE [x].[Dag] = @__bezorgdag_0"
2019-04-18 14:45:21.313 +02:00 [Information] Executing action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 14:45:21.314 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 14:45:21.315 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenbijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 14:45:21.317 +02:00 [Information] Executed action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 21.099ms.
2019-04-18 14:45:21.323 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 1.4279ms.
2019-04-18 14:45:21.325 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:21.325 +02:00 [Information] Executing JsonResult, writing value of type '"System.DateTime"'.
2019-04-18 14:45:21.326 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 14:45:21.327 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 14:45:21.331 +02:00 [Information] Executed action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" in 46.4931ms
2019-04-18 14:45:21.337 +02:00 [Information] Request finished in 159.9798ms 200 application/json; charset=utf-8
2019-04-18 14:45:21.342 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:21.346 +02:00 [Information] Executed DbCommand ("10"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 14:45:21.348 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 37.83ms
2019-04-18 14:45:21.350 +02:00 [Information] Request finished in 177.1273ms 200 application/json; charset=utf-8
2019-04-18 14:45:21.351 +02:00 [Information] Executed DbCommand ("21"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 14:45:21.356 +02:00 [Information] Executed action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 36.6278ms.
2019-04-18 14:45:21.357 +02:00 [Information] Executing JsonResult, writing value of type '"SogyoLunchApp.Winkel"'.
2019-04-18 14:45:21.359 +02:00 [Information] Executed action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" in 51.8586ms
2019-04-18 14:45:21.360 +02:00 [Information] Request finished in 187.0613ms 200 application/json; charset=utf-8
2019-04-18 14:45:21.372 +02:00 [Information] Executed DbCommand ("25"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 14:45:21.375 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenbijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 51.1816ms.
2019-04-18 14:45:21.377 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 14:45:21.378 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenbijDatum (Services)" in 65.9842ms
2019-04-18 14:45:21.379 +02:00 [Information] Request finished in 199.6314ms 200 application/json; charset=utf-8
2019-04-18 14:45:26.221 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 14:45:26.222 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:45:26.223 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:45:26.224 +02:00 [Information] Request finished in 3.6576ms 204 
2019-04-18 14:45:26.230 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 14:45:26.231 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:45:26.234 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:45:26.236 +02:00 [Information] Successfully validated the token.
2019-04-18 14:45:26.236 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 14:45:26.238 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 14:45:26.243 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 14:45:26.254 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 14:45:26.257 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 14:45:26.258 +02:00 [Information] Authorization was successful.
2019-04-18 14:45:26.259 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 14:45:26.260 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0071ms.
2019-04-18 14:45:26.262 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 14:45:26.268 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 14:45:26.270 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 12.4006ms
2019-04-18 14:45:26.271 +02:00 [Information] Request finished in 41.792ms 200 application/json; charset=utf-8
2019-04-18 14:45:43.161 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 14:45:43.162 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:45:43.163 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:45:43.164 +02:00 [Information] Request finished in 3.0449ms 204 
2019-04-18 14:45:43.167 +02:00 [Information] Request starting HTTP/1.1 POST http://localhost:5000/sogyolunchapi/categorie application/json;charset=UTF-8 59
2019-04-18 14:45:43.169 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:45:43.171 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:45:43.176 +02:00 [Information] Successfully validated the token.
2019-04-18 14:45:43.177 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 14:45:43.179 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 14:45:43.184 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 14:45:43.191 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 14:45:43.194 +02:00 [Information] Route matched with "{action = \"AddCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.AddCategorie (Services)"
2019-04-18 14:45:43.196 +02:00 [Information] Authorization was successful.
2019-04-18 14:45:43.243 +02:00 [Information] Executing action method "Services.APIService.CategorieController.AddCategorie (Services)" with arguments (["SogyoLunchApp.Categorie"]) - Validation state: Valid
2019-04-18 14:45:43.310 +02:00 [Information] Executed DbCommand ("11"ms) [Parameters=["@p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
INSERT INTO [Categorien] ([CategorieNaam], [VolgordeNummer], [WinkelId])
VALUES (@p0, @p1, @p2);
SELECT [CategorieId]
FROM [Categorien]
WHERE @@ROWCOUNT = 1 AND [CategorieId] = scope_identity();"
2019-04-18 14:45:43.327 +02:00 [Information] Executed action method "Services.APIService.CategorieController.AddCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 81.5871ms.
2019-04-18 14:45:43.330 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 14:45:43.331 +02:00 [Information] Executed action "Services.APIService.CategorieController.AddCategorie (Services)" in 135.1246ms
2019-04-18 14:45:43.332 +02:00 [Information] Request finished in 165.3875ms 200 
2019-04-18 14:46:24.820 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 14:46:24.821 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:46:24.823 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:46:24.824 +02:00 [Information] Request finished in 4.472ms 204 
2019-04-18 14:46:24.827 +02:00 [Information] Request starting HTTP/1.1 POST http://localhost:5000/sogyolunchapi/categorie application/json;charset=UTF-8 59
2019-04-18 14:46:24.830 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:46:24.832 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:46:24.834 +02:00 [Information] Successfully validated the token.
2019-04-18 14:46:24.835 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 14:46:24.836 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 14:46:24.848 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 14:46:24.861 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 14:46:24.869 +02:00 [Information] Route matched with "{action = \"AddCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.AddCategorie (Services)"
2019-04-18 14:46:24.871 +02:00 [Information] Authorization was successful.
2019-04-18 14:46:24.873 +02:00 [Information] Executing action method "Services.APIService.CategorieController.AddCategorie (Services)" with arguments (["SogyoLunchApp.Categorie"]) - Validation state: Valid
2019-04-18 14:46:24.880 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
INSERT INTO [Categorien] ([CategorieNaam], [VolgordeNummer], [WinkelId])
VALUES (@p0, @p1, @p2);
SELECT [CategorieId]
FROM [Categorien]
WHERE @@ROWCOUNT = 1 AND [CategorieId] = scope_identity();"
2019-04-18 14:46:24.884 +02:00 [Information] Executed action method "Services.APIService.CategorieController.AddCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 9.2881ms.
2019-04-18 14:46:24.886 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 14:46:24.887 +02:00 [Information] Executed action "Services.APIService.CategorieController.AddCategorie (Services)" in 16.0168ms
2019-04-18 14:46:24.889 +02:00 [Information] Request finished in 61.6766ms 200 
2019-04-18 14:52:56.339 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 14:52:56.349 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:52:56.354 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:52:56.357 +02:00 [Information] Request finished in 17.3ms 204 
2019-04-18 14:52:56.446 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 14:52:56.450 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:52:56.462 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:52:56.464 +02:00 [Information] Successfully validated the token.
2019-04-18 14:52:56.465 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 14:52:56.467 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 14:52:56.526 +02:00 [Information] Executed DbCommand ("16"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 14:52:56.542 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 14:52:56.546 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 14:52:56.547 +02:00 [Information] Authorization was successful.
2019-04-18 14:52:56.548 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 14:52:56.549 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0208ms.
2019-04-18 14:52:56.551 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 14:52:56.554 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 14:52:56.558 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 11.0342ms
2019-04-18 14:52:56.559 +02:00 [Information] Request finished in 113.7587ms 200 application/json; charset=utf-8
2019-04-18 14:53:21.475 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 14:53:21.478 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:53:21.480 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:53:21.481 +02:00 [Information] Request finished in 6.7993ms 204 
2019-04-18 14:53:21.492 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 14:53:21.494 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:53:21.495 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:53:21.498 +02:00 [Information] Successfully validated the token.
2019-04-18 14:53:21.498 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 14:53:21.500 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 14:53:21.506 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 14:53:21.514 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 14:53:21.518 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 14:53:21.519 +02:00 [Information] Authorization was successful.
2019-04-18 14:53:21.520 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 14:53:21.521 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0078ms.
2019-04-18 14:53:21.523 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 14:53:21.525 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 14:53:21.528 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 8.7849ms
2019-04-18 14:53:21.529 +02:00 [Information] Request finished in 37.1519ms 200 application/json; charset=utf-8
2019-04-18 14:53:31.576 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 14:53:31.588 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:53:31.606 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:53:31.609 +02:00 [Information] Request finished in 33.37ms 204 
2019-04-18 14:53:31.656 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 14:53:31.678 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:53:31.679 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:53:31.680 +02:00 [Information] Successfully validated the token.
2019-04-18 14:53:31.681 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 14:53:31.683 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 14:53:31.691 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 14:53:31.703 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 14:53:31.714 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 14:53:31.716 +02:00 [Information] Authorization was successful.
2019-04-18 14:53:31.717 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 14:53:31.719 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0223ms.
2019-04-18 14:53:31.721 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 14:53:31.731 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 14:53:31.733 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 17.4032ms
2019-04-18 14:53:31.741 +02:00 [Information] Request finished in 85.4142ms 200 application/json; charset=utf-8
2019-04-18 14:56:00.225 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 14:56:00.225 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 14:56:00.238 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:56:00.239 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:56:00.241 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:56:00.243 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:56:00.245 +02:00 [Information] Request finished in 19.7976ms 204 
2019-04-18 14:56:00.246 +02:00 [Information] Request finished in 20.5778ms 204 
2019-04-18 14:56:00.263 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 14:56:00.263 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 14:56:00.264 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:56:00.265 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:56:00.267 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:56:00.268 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:56:00.269 +02:00 [Information] Successfully validated the token.
2019-04-18 14:56:00.270 +02:00 [Information] Successfully validated the token.
2019-04-18 14:56:00.271 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 14:56:00.271 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 14:56:00.274 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 14:56:00.274 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 14:56:00.289 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 14:56:00.304 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 14:56:00.305 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 14:56:00.319 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 14:56:00.323 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 14:56:00.323 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 14:56:00.325 +02:00 [Information] Authorization was successful.
2019-04-18 14:56:00.327 +02:00 [Information] Authorization was successful.
2019-04-18 14:56:00.328 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 14:56:00.328 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 14:56:00.331 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.82ms.
2019-04-18 14:56:00.331 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0052ms.
2019-04-18 14:56:00.333 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 14:56:00.335 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 14:56:00.339 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 14:56:00.341 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 14.7077ms
2019-04-18 14:56:00.343 +02:00 [Information] Request finished in 79.7614ms 200 application/json; charset=utf-8
2019-04-18 14:56:00.389 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [c].[CategorieId], [c].[CategorieNaam], [c].[VolgordeNummer], [c].[WinkelId]
FROM [Categorien] AS [c]"
2019-04-18 14:56:00.396 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 70.7452ms
2019-04-18 14:56:00.397 +02:00 [Information] Request finished in 134.2817ms 200 application/json; charset=utf-8
2019-04-18 14:57:50.811 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 14:57:50.819 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 14:57:50.820 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:57:50.824 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:57:50.825 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:57:50.827 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:57:50.828 +02:00 [Information] Request finished in 16.9934ms 204 
2019-04-18 14:57:50.829 +02:00 [Information] Request finished in 10.2494ms 204 
2019-04-18 14:57:51.052 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 14:57:51.058 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 14:57:51.058 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:57:51.060 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 14:57:51.061 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:57:51.063 +02:00 [Information] CORS policy execution successful.
2019-04-18 14:57:51.064 +02:00 [Information] Successfully validated the token.
2019-04-18 14:57:51.065 +02:00 [Information] Successfully validated the token.
2019-04-18 14:57:51.065 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 14:57:51.067 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 14:57:51.069 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 14:57:51.070 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 14:57:51.102 +02:00 [Information] Executed DbCommand ("27"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 14:57:51.150 +02:00 [Information] Executed DbCommand ("63"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 14:57:51.163 +02:00 [Information] Executed DbCommand ("17"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 14:57:51.169 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 14:57:51.170 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 14:57:51.185 +02:00 [Information] Authorization was successful.
2019-04-18 14:57:51.187 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 14:57:51.187 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 14:57:51.198 +02:00 [Information] Authorization was successful.
2019-04-18 14:57:51.199 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0082ms.
2019-04-18 14:57:51.200 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 14:57:51.202 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 14:57:51.203 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0069ms.
2019-04-18 14:57:51.211 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 14:57:51.214 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [c].[CategorieId], [c].[CategorieNaam], [c].[VolgordeNummer], [c].[WinkelId]
FROM [Categorien] AS [c]"
2019-04-18 14:57:51.217 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 14:57:51.218 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 32.3379ms
2019-04-18 14:57:51.220 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 21.4247ms
2019-04-18 14:57:51.221 +02:00 [Information] Request finished in 169.0477ms 200 application/json; charset=utf-8
2019-04-18 14:57:51.221 +02:00 [Information] Request finished in 164.285ms 200 application/json; charset=utf-8
2019-04-18 15:00:26.815 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:00:27.388 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:00:27.718 +02:00 [Information] Executed DbCommand ("18"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [key].[Xml]
FROM [DataProtectionKeys] AS [key]"
2019-04-18 15:00:27.794 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:00:27.801 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:00:27.846 +02:00 [Information] Executed DbCommand ("28"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT OBJECT_ID(N'[__EFMigrationsHistory]');"
2019-04-18 15:00:27.854 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT OBJECT_ID(N'[__EFMigrationsHistory]');"
2019-04-18 15:00:27.869 +02:00 [Information] Executed DbCommand ("9"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];"
2019-04-18 15:00:27.926 +02:00 [Information] No migrations were applied. The database is already up to date.
2019-04-18 15:00:27.994 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__normalizedName_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [r].[Id], [r].[ConcurrencyStamp], [r].[Name], [r].[NormalizedName]
FROM [AspNetRoles] AS [r]
WHERE [r].[NormalizedName] = @__normalizedName_0"
2019-04-18 15:00:28.043 +02:00 [Warning] Role null validation failed: "DuplicateRoleName".
2019-04-18 15:00:31.170 +02:00 [Information] Request starting HTTP/1.1 GET https://localhost:5001/api/values  
2019-04-18 15:00:31.440 +02:00 [Information] Sending file. Request path: '"/index.html"'. Physical path: '"C:\Users\rsmits\Documents\lanthir-lunch\SogyoLunchApp\Services\wwwroot\index.html"'
2019-04-18 15:00:31.513 +02:00 [Information] Request finished in 341.95ms 200 text/html
2019-04-18 15:00:31.554 +02:00 [Information] Request starting HTTP/1.1 GET https://localhost:5001/api/Sogyologo.jpg  
2019-04-18 15:00:31.560 +02:00 [Information] Request finished in 6.3448ms 404 
2019-04-18 15:00:45.626 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 15:00:45.626 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:00:45.634 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:00:45.648 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:00:45.650 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:00:45.651 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:00:45.654 +02:00 [Information] Request finished in 28.0593ms 204 
2019-04-18 15:00:45.654 +02:00 [Information] Request finished in 27.8009ms 204 
2019-04-18 15:00:45.925 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:00:45.927 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 15:00:46.170 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:00:46.179 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:00:46.181 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:00:46.186 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:00:46.367 +02:00 [Information] Successfully validated the token.
2019-04-18 15:00:46.368 +02:00 [Information] Successfully validated the token.
2019-04-18 15:00:46.371 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:00:46.371 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:00:46.379 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:00:46.379 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:00:46.415 +02:00 [Information] Executed DbCommand ("11"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:00:46.426 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:00:46.482 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:00:46.484 +02:00 [Information] Executed DbCommand ("11"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:00:46.575 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 15:00:46.575 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 15:00:46.588 +02:00 [Information] Authorization was successful.
2019-04-18 15:00:46.588 +02:00 [Information] Authorization was successful.
2019-04-18 15:00:46.602 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 15:00:46.602 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 15:00:46.608 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 1.792ms.
2019-04-18 15:00:46.608 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.4625ms.
2019-04-18 15:00:46.618 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:00:46.622 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:00:46.678 +02:00 [Information] Executed DbCommand ("45"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 15:00:46.752 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 172.3238ms
2019-04-18 15:00:46.756 +02:00 [Information] Request finished in 828.9669ms 200 application/json; charset=utf-8
2019-04-18 15:00:46.788 +02:00 [Information] Executed DbCommand ("128"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 15:00:46.811 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 234.0682ms
2019-04-18 15:00:46.812 +02:00 [Information] Request finished in 887.8042ms 200 application/json; charset=utf-8
2019-04-18 15:01:08.065 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:01:08.066 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:01:08.067 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:01:08.069 +02:00 [Information] Request finished in 4.0771ms 204 
2019-04-18 15:01:08.079 +02:00 [Information] Request starting HTTP/1.1 POST http://localhost:5000/sogyolunchapi/categorie application/json;charset=UTF-8 61
2019-04-18 15:01:08.081 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:01:08.083 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:01:08.085 +02:00 [Information] Successfully validated the token.
2019-04-18 15:01:08.086 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:01:08.087 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:01:08.095 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:01:08.102 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:01:08.119 +02:00 [Information] Route matched with "{action = \"AddCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.AddCategorie (Services)"
2019-04-18 15:01:08.121 +02:00 [Information] Authorization was successful.
2019-04-18 15:01:08.165 +02:00 [Information] Executing action method "Services.APIService.CategorieController.AddCategorie (Services)" with arguments (["SogyoLunchApp.Categorie"]) - Validation state: Valid
2019-04-18 15:01:08.248 +02:00 [Information] Executed DbCommand ("9"ms) [Parameters=["@p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
INSERT INTO [Categorien] ([CategorieNaam], [VolgordeNummer], [WinkelId])
VALUES (@p0, @p1, @p2);
SELECT [CategorieId]
FROM [Categorien]
WHERE @@ROWCOUNT = 1 AND [CategorieId] = scope_identity();"
2019-04-18 15:01:08.261 +02:00 [Information] Executed action method "Services.APIService.CategorieController.AddCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 89.1966ms.
2019-04-18 15:01:08.265 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 15:01:08.266 +02:00 [Information] Executed action "Services.APIService.CategorieController.AddCategorie (Services)" in 144.9977ms
2019-04-18 15:01:08.268 +02:00 [Information] Request finished in 188.6591ms 200 
2019-04-18 15:01:18.005 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 15:01:18.005 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:01:18.009 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:01:18.010 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:01:18.013 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:01:18.015 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:01:18.016 +02:00 [Information] Request finished in 11.0494ms 204 
2019-04-18 15:01:18.017 +02:00 [Information] Request finished in 11.8809ms 204 
2019-04-18 15:01:18.356 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:01:18.363 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 15:01:18.363 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:01:18.364 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:01:18.365 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:01:18.367 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:01:18.368 +02:00 [Information] Successfully validated the token.
2019-04-18 15:01:18.368 +02:00 [Information] Successfully validated the token.
2019-04-18 15:01:18.369 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:01:18.370 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:01:18.371 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:01:18.372 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:01:18.478 +02:00 [Information] Executed DbCommand ("99"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:01:18.505 +02:00 [Information] Executed DbCommand ("26"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:01:18.551 +02:00 [Information] Executed DbCommand ("11"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:01:18.551 +02:00 [Information] Executed DbCommand ("15"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:01:18.561 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 15:01:18.562 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 15:01:18.563 +02:00 [Information] Authorization was successful.
2019-04-18 15:01:18.565 +02:00 [Information] Authorization was successful.
2019-04-18 15:01:18.566 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 15:01:18.566 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 15:01:18.568 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0935ms.
2019-04-18 15:01:18.569 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0069ms.
2019-04-18 15:01:18.572 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:01:18.574 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:01:18.581 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 15:01:18.584 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 19.4176ms
2019-04-18 15:01:18.585 +02:00 [Information] Request finished in 222.889ms 200 application/json; charset=utf-8
2019-04-18 15:01:18.586 +02:00 [Information] Executed DbCommand ("10"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 15:01:18.589 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 25.9829ms
2019-04-18 15:01:18.591 +02:00 [Information] Request finished in 234.4865ms 200 application/json; charset=utf-8
2019-04-18 15:05:21.384 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 15:05:21.396 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:21.398 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:21.399 +02:00 [Information] Request finished in 14.5198ms 204 
2019-04-18 15:05:21.418 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 15:05:21.420 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:21.421 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:21.426 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:21.427 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:21.429 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:21.441 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:21.449 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:21.455 +02:00 [Information] Route matched with "{action = \"getBezorgdagen\", controller = \"Bezorgdag\"}". Executing action "Services.APIService.BezorgdagController.getBezorgdagen (Services)"
2019-04-18 15:05:21.457 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:21.462 +02:00 [Information] Executing action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)" with arguments (["40"]) - Validation state: Valid
2019-04-18 15:05:21.502 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.520 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.540 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.545 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.549 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.553 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.556 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.561 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.564 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.568 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.571 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.575 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.579 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.582 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.586 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.589 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.593 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.597 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.600 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.604 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.609 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.612 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.616 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.619 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.623 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.628 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.632 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.635 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.638 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.645 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.648 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.651 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.654 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.659 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.663 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.666 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.669 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.672 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.676 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.679 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.682 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.685 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.687 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.691 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.695 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.698 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.700 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.703 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.707 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.710 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.713 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.716 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.719 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.722 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.726 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.729 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.732 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.735 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.738 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.742 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.745 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.748 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.751 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.754 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.758 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.761 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.765 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.768 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.770 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.774 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.778 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.781 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.784 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.787 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.790 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.793 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.796 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.799 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.802 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:21.805 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:21.808 +02:00 [Information] Executed action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 344.3194ms.
2019-04-18 15:05:21.810 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[System.DateTime, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"'.
2019-04-18 15:05:21.813 +02:00 [Information] Executed action "Services.APIService.BezorgdagController.getBezorgdagen (Services)" in 356.4673ms
2019-04-18 15:05:21.815 +02:00 [Information] Request finished in 396.4196ms 200 application/json; charset=utf-8
2019-04-18 15:05:21.843 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 15:05:21.844 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 15:05:21.848 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 15:05:21.848 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 15:05:21.874 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:21.877 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:21.878 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:21.879 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:21.881 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:21.882 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:21.883 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:21.884 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:21.886 +02:00 [Information] Request finished in 44.054ms 204 
2019-04-18 15:05:21.887 +02:00 [Information] Request finished in 38.8472ms 204 
2019-04-18 15:05:21.888 +02:00 [Information] Request finished in 44.1236ms 204 
2019-04-18 15:05:21.893 +02:00 [Information] Request finished in 45.0847ms 204 
2019-04-18 15:05:21.898 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 15:05:21.899 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 15:05:21.899 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 15:05:21.904 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:21.905 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:21.907 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 15:05:21.909 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:21.910 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:21.912 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:21.913 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:21.914 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:21.915 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:21.916 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:21.924 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:21.926 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:21.927 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:21.941 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:21.958 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:21.960 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:21.961 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:21.962 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:21.963 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:21.964 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:21.972 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:21.978 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:21.978 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:21.998 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:22.008 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:22.008 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:22.047 +02:00 [Information] Route matched with "{action = \"GetDeadlinePerDatum\", controller = \"Deadline\"}". Executing action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)"
2019-04-18 15:05:22.052 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:22.057 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:22.062 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:22.063 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 15:05:22.065 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:22.065 +02:00 [Information] Route matched with "{action = \"GetProductenbijDatum\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenbijDatum (Services)"
2019-04-18 15:05:22.070 +02:00 [Information] Route matched with "{action = \"GetWinkelBijDatum\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)"
2019-04-18 15:05:22.071 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:22.074 +02:00 [Information] Executing action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:05:22.074 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:22.076 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:22.078 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 15:05:22.081 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenbijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:05:22.082 +02:00 [Information] Executing action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:05:22.082 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:22.087 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:22.088 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:22.092 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 3.7803ms.
2019-04-18 15:05:22.101 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:05:22.102 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__bezorgdag_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [x].[Dag], [x].[BestelDeadlineDag], [x].[BestelDeadlineTijd], [x].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [x]
WHERE [x].[Dag] = @__bezorgdag_0"
2019-04-18 15:05:22.106 +02:00 [Information] Executed action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 27.1944ms.
2019-04-18 15:05:22.113 +02:00 [Information] Executing JsonResult, writing value of type '"System.DateTime"'.
2019-04-18 15:05:22.115 +02:00 [Information] Executed action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" in 49.432ms
2019-04-18 15:05:22.116 +02:00 [Information] Request finished in 217.2031ms 200 application/json; charset=utf-8
2019-04-18 15:05:22.122 +02:00 [Information] Executed DbCommand ("10"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:22.127 +02:00 [Information] Executed DbCommand ("15"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:22.142 +02:00 [Information] Executed action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 58.2933ms.
2019-04-18 15:05:22.144 +02:00 [Information] Executing JsonResult, writing value of type '"SogyoLunchApp.Winkel"'.
2019-04-18 15:05:22.145 +02:00 [Information] Executed action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" in 69.1983ms
2019-04-18 15:05:22.147 +02:00 [Information] Request finished in 239.813ms 200 application/json; charset=utf-8
2019-04-18 15:05:22.164 +02:00 [Information] Executed DbCommand ("14"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 15:05:22.172 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenbijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 86.2337ms.
2019-04-18 15:05:22.175 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:05:22.181 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenbijDatum (Services)" in 106.1783ms
2019-04-18 15:05:22.182 +02:00 [Information] Request finished in 283.4447ms 200 application/json; charset=utf-8
2019-04-18 15:05:22.185 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 15:05:22.194 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 123.1729ms
2019-04-18 15:05:22.196 +02:00 [Information] Request finished in 298.1121ms 200 application/json; charset=utf-8
2019-04-18 15:05:26.070 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 15:05:26.074 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:26.075 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:26.077 +02:00 [Information] Request finished in 6.8812ms 204 
2019-04-18 15:05:26.082 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 15:05:26.083 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:26.084 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:26.085 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:26.086 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:26.087 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:26.094 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:26.101 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:26.104 +02:00 [Information] Route matched with "{action = \"getBezorgdagen\", controller = \"Bezorgdag\"}". Executing action "Services.APIService.BezorgdagController.getBezorgdagen (Services)"
2019-04-18 15:05:26.106 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:26.110 +02:00 [Information] Executing action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)" with arguments (["40"]) - Validation state: Valid
2019-04-18 15:05:26.113 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.117 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.121 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.127 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.131 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.134 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.137 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.146 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.151 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.155 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.161 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.165 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.168 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.171 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.175 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.178 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.181 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.184 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.187 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.191 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.194 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.197 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.200 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.203 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.206 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.210 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.213 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.216 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.219 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.221 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.225 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.228 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.231 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.234 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.237 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.240 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.244 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.247 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.250 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.253 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.257 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.261 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.264 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.267 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.270 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.274 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.277 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.281 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.283 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.286 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.291 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.294 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.297 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.300 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.303 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.307 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.311 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.314 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.317 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.327 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.330 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.333 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.336 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.339 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.344 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.347 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.350 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.353 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.357 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.362 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.366 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.369 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.372 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.376 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.379 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.382 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.385 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.388 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.392 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.395 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.397 +02:00 [Information] Executed action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 285.0698ms.
2019-04-18 15:05:26.399 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[System.DateTime, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"'.
2019-04-18 15:05:26.400 +02:00 [Information] Executed action "Services.APIService.BezorgdagController.getBezorgdagen (Services)" in 294.8069ms
2019-04-18 15:05:26.402 +02:00 [Information] Request finished in 320.0663ms 200 application/json; charset=utf-8
2019-04-18 15:05:26.419 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 15:05:26.424 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:26.424 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 15:05:26.424 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 15:05:26.424 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 15:05:26.425 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:26.426 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:26.427 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:26.431 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:26.431 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 15:05:26.432 +02:00 [Information] Request finished in 13.6402ms 204 
2019-04-18 15:05:26.434 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:26.435 +02:00 [Information] Request finished in 11.5613ms 204 
2019-04-18 15:05:26.438 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:26.441 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 15:05:26.441 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 15:05:26.442 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 15:05:26.443 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:26.444 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:26.445 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:26.447 +02:00 [Information] Request finished in 22.492ms 204 
2019-04-18 15:05:26.457 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:26.458 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:26.461 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:26.463 +02:00 [Information] Request finished in 21.4544ms 204 
2019-04-18 15:05:26.462 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 15:05:26.465 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:26.466 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:26.467 +02:00 [Information] Request finished in 26.4564ms 204 
2019-04-18 15:05:26.470 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:26.471 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 15:05:26.472 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:26.473 +02:00 [Information] Request finished in 49.2631ms 204 
2019-04-18 15:05:26.476 +02:00 [Information] Request finished in 33.1836ms 204 
2019-04-18 15:05:26.478 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 15:05:26.479 +02:00 [Information] Request finished in 47.5948ms 204 
2019-04-18 15:05:26.482 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:26.484 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:26.485 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 15:05:26.486 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 15:05:26.487 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:26.488 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 15:05:26.489 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:26.492 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:26.494 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:26.496 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:26.497 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:26.498 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:26.499 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:26.500 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:26.501 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:26.503 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:26.503 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:26.504 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:26.505 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:26.508 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:26.509 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:26.510 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:26.511 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:26.512 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:26.513 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:26.516 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:26.518 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:26.518 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:26.518 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:26.520 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:26.521 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:26.528 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:26.531 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:26.531 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:26.538 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:26.555 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:26.569 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:26.580 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:26.581 +02:00 [Information] Route matched with "{action = \"GetDeadlinePerDatum\", controller = \"Deadline\"}". Executing action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)"
2019-04-18 15:05:26.593 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:26.599 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 15:05:26.604 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:26.605 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:26.605 +02:00 [Information] Executing action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:05:26.607 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:26.612 +02:00 [Information] Route matched with "{action = \"GetProductenbijDatum\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenbijDatum (Services)"
2019-04-18 15:05:26.613 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:26.619 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:26.619 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 15:05:26.621 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.621 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 15:05:26.623 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:26.629 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:26.631 +02:00 [Information] Route matched with "{action = \"GetWinkelBijDatum\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)"
2019-04-18 15:05:26.632 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:26.635 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__bezorgdag_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [x].[Dag], [x].[BestelDeadlineDag], [x].[BestelDeadlineTijd], [x].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [x]
WHERE [x].[Dag] = @__bezorgdag_0"
2019-04-18 15:05:26.636 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1358ms.
2019-04-18 15:05:26.637 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenbijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:05:26.644 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:26.645 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 15:05:26.647 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:26.648 +02:00 [Information] Executed action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 28.0155ms.
2019-04-18 15:05:26.650 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1403ms.
2019-04-18 15:05:26.652 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:05:26.653 +02:00 [Information] Executing action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:05:26.655 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.662 +02:00 [Information] Route matched with "{action = \"GetWinkelBijDatum\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)"
2019-04-18 15:05:26.662 +02:00 [Information] Executing JsonResult, writing value of type '"System.DateTime"'.
2019-04-18 15:05:26.664 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:05:26.666 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 15:05:26.668 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.671 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.672 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:26.674 +02:00 [Information] Executed action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" in 69.7797ms
2019-04-18 15:05:26.677 +02:00 [Information] Request finished in 191.8589ms 200 application/json; charset=utf-8
2019-04-18 15:05:26.680 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 73.4067ms
2019-04-18 15:05:26.685 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.688 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 15:05:26.688 +02:00 [Information] Executing action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:05:26.691 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 15:05:26.692 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 15:05:26.695 +02:00 [Information] Request finished in 224.5798ms 200 application/json; charset=utf-8
2019-04-18 15:05:26.700 +02:00 [Information] Executed action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 32.958ms.
2019-04-18 15:05:26.703 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenbijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 48.3176ms.
2019-04-18 15:05:26.705 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.705 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:26.710 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 78.4062ms
2019-04-18 15:05:26.711 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 15:05:26.713 +02:00 [Information] Executing JsonResult, writing value of type '"SogyoLunchApp.Winkel"'.
2019-04-18 15:05:26.715 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:05:26.719 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.719 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:26.720 +02:00 [Information] Request finished in 234.3844ms 200 application/json; charset=utf-8
2019-04-18 15:05:26.721 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:26.723 +02:00 [Information] Executed action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" in 79.0864ms
2019-04-18 15:05:26.728 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenbijDatum (Services)" in 104.815ms
2019-04-18 15:05:26.731 +02:00 [Information] Executed action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 26.6863ms.
2019-04-18 15:05:26.732 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:26.735 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:26.737 +02:00 [Information] Request finished in 276.8533ms 200 application/json; charset=utf-8
2019-04-18 15:05:26.738 +02:00 [Information] Request finished in 260.1862ms 200 application/json; charset=utf-8
2019-04-18 15:05:26.742 +02:00 [Information] Executing JsonResult, writing value of type '"SogyoLunchApp.Winkel"'.
2019-04-18 15:05:26.744 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:26.746 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:26.748 +02:00 [Information] Executed action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" in 76.5103ms
2019-04-18 15:05:26.749 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:26.750 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:26.751 +02:00 [Information] Request finished in 263.4589ms 200 application/json; charset=utf-8
2019-04-18 15:05:26.755 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:26.757 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:26.765 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:26.770 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:26.776 +02:00 [Information] Route matched with "{action = \"GetDeadlinePerDatum\", controller = \"Deadline\"}". Executing action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)"
2019-04-18 15:05:26.777 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:26.778 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:26.781 +02:00 [Information] Route matched with "{action = \"GetProductenbijDatum\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenbijDatum (Services)"
2019-04-18 15:05:26.783 +02:00 [Information] Executing action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:05:26.784 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:26.788 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenbijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:05:26.789 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.791 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:26.796 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__bezorgdag_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [x].[Dag], [x].[BestelDeadlineDag], [x].[BestelDeadlineTijd], [x].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [x]
WHERE [x].[Dag] = @__bezorgdag_0"
2019-04-18 15:05:26.797 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:26.801 +02:00 [Information] Executed action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 14.4322ms.
2019-04-18 15:05:26.805 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 15:05:26.806 +02:00 [Information] Executing JsonResult, writing value of type '"System.DateTime"'.
2019-04-18 15:05:26.810 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenbijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 20.7145ms.
2019-04-18 15:05:26.811 +02:00 [Information] Executed action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" in 32.9908ms
2019-04-18 15:05:26.813 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:05:26.814 +02:00 [Information] Request finished in 123.0352ms 200 application/json; charset=utf-8
2019-04-18 15:05:26.815 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenbijDatum (Services)" in 30.9874ms
2019-04-18 15:05:26.817 +02:00 [Information] Request finished in 106.4187ms 200 application/json; charset=utf-8
2019-04-18 15:05:33.570 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel/2019-04-22  
2019-04-18 15:05:33.571 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-22/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 15:05:33.571 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-22/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 15:05:33.571 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel/2019-04-22  
2019-04-18 15:05:33.579 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:33.581 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:33.583 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:33.584 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:33.585 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:33.587 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:33.590 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:33.594 +02:00 [Information] Request finished in 22.2101ms 204 
2019-04-18 15:05:33.595 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/2019-04-22  
2019-04-18 15:05:33.596 +02:00 [Information] Request finished in 24.0703ms 204 
2019-04-18 15:05:33.598 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:33.600 +02:00 [Information] Request finished in 28.2239ms 204 
2019-04-18 15:05:33.601 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/deadline/2019-04-22  
2019-04-18 15:05:33.605 +02:00 [Information] Request finished in 34.4766ms 204 
2019-04-18 15:05:33.609 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:33.610 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:33.612 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/2019-04-22  
2019-04-18 15:05:33.613 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:33.614 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:33.615 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/deadline/2019-04-22  
2019-04-18 15:05:33.616 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:33.617 +02:00 [Information] Request finished in 16.5445ms 204 
2019-04-18 15:05:33.618 +02:00 [Information] Request finished in 23.564ms 204 
2019-04-18 15:05:33.620 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:33.621 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:33.622 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-22/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 15:05:33.624 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel/2019-04-22  
2019-04-18 15:05:33.625 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:33.627 +02:00 [Information] Request finished in 15.0535ms 204 
2019-04-18 15:05:33.628 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:33.629 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:33.631 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:33.633 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-22/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 15:05:33.638 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:33.639 +02:00 [Information] Request finished in 23.1344ms 204 
2019-04-18 15:05:33.640 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:33.641 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:33.642 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:33.643 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel/2019-04-22  
2019-04-18 15:05:33.644 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:33.646 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:33.648 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:33.648 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:33.650 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:33.650 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:33.651 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:33.652 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:33.659 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:33.664 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/2019-04-22  
2019-04-18 15:05:33.667 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/deadline/2019-04-22  
2019-04-18 15:05:33.667 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:33.668 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:33.672 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:33.673 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:33.675 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:33.676 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:33.677 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:33.679 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:33.682 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:33.684 +02:00 [Information] Executed DbCommand ("24"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:33.684 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:33.689 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:33.693 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:33.694 +02:00 [Information] Executed DbCommand ("29"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:33.699 +02:00 [Information] Executed DbCommand ("17"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:33.705 +02:00 [Information] Executed DbCommand ("14"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:33.718 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:33.722 +02:00 [Information] Executed DbCommand ("26"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:33.727 +02:00 [Information] Route matched with "{action = \"GetWinkelBijDatum\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)"
2019-04-18 15:05:33.733 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:33.738 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:33.739 +02:00 [Information] Executing action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" with arguments (["4/22/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:05:33.758 +02:00 [Information] Executed DbCommand ("35"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:33.758 +02:00 [Information] Executed DbCommand ("32"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:33.758 +02:00 [Information] Executed DbCommand ("28"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:33.759 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:33.769 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 15:05:33.771 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 15:05:33.781 +02:00 [Information] Executed DbCommand ("48"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:33.782 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:33.783 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:33.784 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:33.788 +02:00 [Information] Route matched with "{action = \"GetProductenbijDatum\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenbijDatum (Services)"
2019-04-18 15:05:33.792 +02:00 [Information] Executed action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 48.8953ms.
2019-04-18 15:05:33.793 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/22/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 15:05:33.793 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/22/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 15:05:33.795 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:33.796 +02:00 [Information] Executing JsonResult, writing value of type '"SogyoLunchApp.Winkel"'.
2019-04-18 15:05:33.799 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.2037ms.
2019-04-18 15:05:33.801 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1433ms.
2019-04-18 15:05:33.802 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenbijDatum (Services)" with arguments (["4/22/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:05:33.803 +02:00 [Information] Executed action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" in 65.0304ms
2019-04-18 15:05:33.804 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:05:33.808 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:05:33.810 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:33.810 +02:00 [Information] Request finished in 185.8095ms 200 application/json; charset=utf-8
2019-04-18 15:05:33.814 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 15:05:33.814 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 15:05:33.817 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:33.818 +02:00 [Information] Executed DbCommand ("40"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:33.820 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 36.7777ms
2019-04-18 15:05:33.826 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 41.9975ms
2019-04-18 15:05:33.828 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 15:05:33.830 +02:00 [Information] Route matched with "{action = \"GetWinkelBijDatum\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)"
2019-04-18 15:05:33.831 +02:00 [Information] Request finished in 209.2508ms 200 application/json; charset=utf-8
2019-04-18 15:05:33.833 +02:00 [Information] Request finished in 199.7277ms 200 application/json; charset=utf-8
2019-04-18 15:05:33.836 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenbijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 26.9708ms.
2019-04-18 15:05:33.837 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:33.838 +02:00 [Information] Executed DbCommand ("21"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:33.841 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:05:33.842 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/deadline/2019-04-22  
2019-04-18 15:05:33.842 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/2019-04-22  
2019-04-18 15:05:33.842 +02:00 [Information] Executing action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" with arguments (["4/22/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:05:33.847 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenbijDatum (Services)" in 52.5072ms
2019-04-18 15:05:33.850 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:33.851 +02:00 [Information] Request finished in 186.5896ms 200 application/json; charset=utf-8
2019-04-18 15:05:33.853 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:33.853 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:33.857 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:33.861 +02:00 [Information] Route matched with "{action = \"GetDeadlinePerDatum\", controller = \"Deadline\"}". Executing action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)"
2019-04-18 15:05:33.861 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:33.862 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:33.866 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:33.867 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:33.868 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:33.869 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:33.873 +02:00 [Information] Executed action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 17.3438ms.
2019-04-18 15:05:33.873 +02:00 [Information] Executing action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" with arguments (["4/22/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:05:33.874 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:33.875 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:33.877 +02:00 [Information] Executing JsonResult, writing value of type '"SogyoLunchApp.Winkel"'.
2019-04-18 15:05:33.879 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:33.880 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:33.880 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:33.881 +02:00 [Information] Executed action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" in 44.3111ms
2019-04-18 15:05:33.885 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__bezorgdag_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [x].[Dag], [x].[BestelDeadlineDag], [x].[BestelDeadlineTijd], [x].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [x]
WHERE [x].[Dag] = @__bezorgdag_0"
2019-04-18 15:05:33.888 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:33.890 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:33.891 +02:00 [Information] Executed action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 12.5516ms.
2019-04-18 15:05:33.896 +02:00 [Information] Request finished in 253.0163ms 200 application/json; charset=utf-8
2019-04-18 15:05:33.901 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:33.901 +02:00 [Information] Executing JsonResult, writing value of type '"System.DateTime"'.
2019-04-18 15:05:33.905 +02:00 [Information] Executed action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" in 38.3325ms
2019-04-18 15:05:33.908 +02:00 [Information] Request finished in 241.311ms 200 application/json; charset=utf-8
2019-04-18 15:05:33.909 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:33.911 +02:00 [Information] Route matched with "{action = \"GetProductenbijDatum\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenbijDatum (Services)"
2019-04-18 15:05:33.915 +02:00 [Information] Route matched with "{action = \"GetDeadlinePerDatum\", controller = \"Deadline\"}". Executing action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)"
2019-04-18 15:05:33.916 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:33.917 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:33.919 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenbijDatum (Services)" with arguments (["4/22/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:05:33.919 +02:00 [Information] Executing action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" with arguments (["4/22/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:05:33.923 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:33.925 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:33.928 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:33.931 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__bezorgdag_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [x].[Dag], [x].[BestelDeadlineDag], [x].[BestelDeadlineTijd], [x].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [x]
WHERE [x].[Dag] = @__bezorgdag_0"
2019-04-18 15:05:33.935 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 15:05:33.937 +02:00 [Information] Executed action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 13.8406ms.
2019-04-18 15:05:33.943 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenbijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 21.4105ms.
2019-04-18 15:05:33.945 +02:00 [Information] Executing JsonResult, writing value of type '"System.DateTime"'.
2019-04-18 15:05:33.947 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:05:33.948 +02:00 [Information] Executed action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" in 30.867ms
2019-04-18 15:05:33.950 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenbijDatum (Services)" in 34.4333ms
2019-04-18 15:05:33.951 +02:00 [Information] Request finished in 109.8198ms 200 application/json; charset=utf-8
2019-04-18 15:05:33.954 +02:00 [Information] Request finished in 111.8715ms 200 application/json; charset=utf-8
2019-04-18 15:05:38.883 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/maand/2019-05/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 15:05:38.885 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:38.887 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:38.888 +02:00 [Information] Request finished in 5.2935ms 204 
2019-04-18 15:05:38.897 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/maand/2019-05/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 15:05:38.899 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:38.901 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:38.902 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:38.904 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:38.905 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:38.914 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:38.922 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:38.930 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerMaandEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerMaandEnGebruiker (Services)"
2019-04-18 15:05:38.932 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:38.933 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerMaandEnGebruiker (Services)" with arguments (["5/1/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 15:05:38.937 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerMaandEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 1.7426ms.
2019-04-18 15:05:38.938 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:05:38.960 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__maand_Month_0='?' (DbType = Int32), @__maand_Year_1='?' (DbType = Int32), @__gebruikerId_2='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE ((DATEPART(month, [x].[Bezorgdatum]) = @__maand_Month_0) AND (DATEPART(year, [x].[Bezorgdatum]) = @__maand_Year_1)) AND ([x].[GebruikerId] = @__gebruikerId_2)
ORDER BY [x].[BestellingId]"
2019-04-18 15:05:38.964 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerMaandEnGebruiker (Services)" in 31.466ms
2019-04-18 15:05:38.966 +02:00 [Information] Request finished in 69.0211ms 200 application/json; charset=utf-8
2019-04-18 15:05:41.431 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/maand/2019-04/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 15:05:41.433 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:41.434 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:41.437 +02:00 [Information] Request finished in 5.5168ms 204 
2019-04-18 15:05:41.444 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/maand/2019-04/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 15:05:41.446 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:41.448 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:41.449 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:41.450 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:41.452 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:41.456 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:41.464 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:41.469 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerMaandEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerMaandEnGebruiker (Services)"
2019-04-18 15:05:41.470 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:41.471 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerMaandEnGebruiker (Services)" with arguments (["4/1/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 15:05:41.476 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerMaandEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 1.2679ms.
2019-04-18 15:05:41.479 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:05:41.482 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__maand_Month_0='?' (DbType = Int32), @__maand_Year_1='?' (DbType = Int32), @__gebruikerId_2='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE ((DATEPART(month, [x].[Bezorgdatum]) = @__maand_Month_0) AND (DATEPART(year, [x].[Bezorgdatum]) = @__maand_Year_1)) AND ([x].[GebruikerId] = @__gebruikerId_2)
ORDER BY [x].[BestellingId]"
2019-04-18 15:05:41.493 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerMaandEnGebruiker (Services)" in 22.7792ms
2019-04-18 15:05:41.496 +02:00 [Information] Request finished in 52.1443ms 200 application/json; charset=utf-8
2019-04-18 15:05:45.316 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 15:05:45.317 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:45.319 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:45.320 +02:00 [Information] Request finished in 3.4061ms 204 
2019-04-18 15:05:45.332 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 15:05:45.333 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:45.355 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:45.361 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:45.365 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:45.367 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:45.372 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:45.444 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:45.451 +02:00 [Information] Route matched with "{action = \"getBezorgdagen\", controller = \"Bezorgdag\"}". Executing action "Services.APIService.BezorgdagController.getBezorgdagen (Services)"
2019-04-18 15:05:45.452 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:45.453 +02:00 [Information] Executing action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)" with arguments (["40"]) - Validation state: Valid
2019-04-18 15:05:45.455 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.459 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.462 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.465 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.468 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.471 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.475 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.478 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.481 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.484 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.487 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.491 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.494 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.497 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.500 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.503 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.506 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.510 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.513 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.516 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.519 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.521 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.525 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.528 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.531 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.534 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.537 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.540 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.544 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.547 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.550 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.553 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.555 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.559 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.562 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.565 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.568 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.571 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.574 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.577 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.580 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.583 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.586 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.589 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.592 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.595 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.598 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.601 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.604 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.608 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.612 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.616 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.619 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.622 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.627 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.630 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.633 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.637 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.641 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.644 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.647 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.650 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.653 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.656 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.659 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.662 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.665 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.668 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.671 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.675 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.678 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.681 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.684 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.687 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.690 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.693 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.696 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.699 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.702 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.705 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.708 +02:00 [Information] Executed action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 253.2797ms.
2019-04-18 15:05:45.710 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[System.DateTime, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"'.
2019-04-18 15:05:45.711 +02:00 [Information] Executed action "Services.APIService.BezorgdagController.getBezorgdagen (Services)" in 258.9337ms
2019-04-18 15:05:45.712 +02:00 [Information] Request finished in 380.2042ms 200 application/json; charset=utf-8
2019-04-18 15:05:45.726 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 15:05:45.729 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 15:05:45.730 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 15:05:45.730 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 15:05:45.730 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 15:05:45.731 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 15:05:45.732 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:45.733 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:45.735 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:45.736 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:45.738 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:45.739 +02:00 [Information] Request finished in 9.6567ms 204 
2019-04-18 15:05:45.741 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:45.742 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:45.748 +02:00 [Information] Request finished in 18.8079ms 204 
2019-04-18 15:05:45.758 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:45.759 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 15:05:45.760 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 15:05:45.761 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:45.763 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:45.764 +02:00 [Information] Request finished in 37.7375ms 204 
2019-04-18 15:05:45.766 +02:00 [Information] Request finished in 35.7207ms 204 
2019-04-18 15:05:45.767 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:45.770 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:45.771 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:45.775 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:45.776 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 15:05:45.777 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 15:05:45.778 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:45.779 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:45.780 +02:00 [Information] Request finished in 50.3155ms 204 
2019-04-18 15:05:45.781 +02:00 [Information] Request finished in 50.1995ms 204 
2019-04-18 15:05:45.783 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:45.785 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:45.786 +02:00 [Information] Request finished in 26.638ms 204 
2019-04-18 15:05:45.787 +02:00 [Information] Request finished in 26.7896ms 204 
2019-04-18 15:05:45.788 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 15:05:45.790 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 15:05:45.794 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:45.795 +02:00 [Information] Request finished in 18.9994ms 204 
2019-04-18 15:05:45.796 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 15:05:45.797 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 15:05:45.798 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:45.800 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:45.801 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:45.802 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 15:05:45.803 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:45.804 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:45.805 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:45.806 +02:00 [Information] Request finished in 17.9487ms 204 
2019-04-18 15:05:45.808 +02:00 [Information] Request finished in 17.7079ms 204 
2019-04-18 15:05:45.809 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:45.810 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:45.813 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:45.814 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:45.815 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 15:05:45.816 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 15:05:45.817 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:45.818 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:45.819 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:45.820 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:45.821 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:45.822 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:45.824 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:45.825 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:45.826 +02:00 [Information] Request finished in 49.3345ms 204 
2019-04-18 15:05:45.828 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:45.830 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:45.832 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:45.833 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:45.834 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:45.835 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 15:05:45.838 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:45.839 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:45.840 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:45.845 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:45.845 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:45.849 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:45.850 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:45.852 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:45.852 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:45.852 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:45.854 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:45.858 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:45.861 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:45.862 +02:00 [Information] Route matched with "{action = \"GetWinkelBijDatum\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)"
2019-04-18 15:05:45.863 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:45.867 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:45.868 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:45.870 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:45.878 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:45.879 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:45.880 +02:00 [Information] Executing action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:05:45.883 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 15:05:45.888 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:45.894 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:45.894 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:45.897 +02:00 [Information] Route matched with "{action = \"GetWinkelBijDatum\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)"
2019-04-18 15:05:45.899 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 15:05:45.902 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.903 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:45.912 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:45.916 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:45.917 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:45.918 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:45.922 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 15:05:45.928 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:45.931 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.933 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1065ms.
2019-04-18 15:05:45.933 +02:00 [Information] Executing action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:05:45.936 +02:00 [Information] Route matched with "{action = \"GetWinkelBijDatum\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)"
2019-04-18 15:05:45.937 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 15:05:45.943 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 15:05:45.946 +02:00 [Information] Executed action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 44.9577ms.
2019-04-18 15:05:45.948 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:05:45.950 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.951 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:45.953 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1062ms.
2019-04-18 15:05:45.954 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:45.957 +02:00 [Information] Executing JsonResult, writing value of type '"SogyoLunchApp.Winkel"'.
2019-04-18 15:05:45.959 +02:00 [Information] Executed action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" in 80.7488ms
2019-04-18 15:05:45.963 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.963 +02:00 [Information] Executing action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:05:45.965 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:05:45.966 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 15:05:45.967 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 15:05:45.968 +02:00 [Information] Request finished in 171.3523ms 200 application/json; charset=utf-8
2019-04-18 15:05:45.971 +02:00 [Information] Executed action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 22.0607ms.
2019-04-18 15:05:45.975 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:45.977 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 15:05:45.978 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1282ms.
2019-04-18 15:05:45.981 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 65.024ms
2019-04-18 15:05:45.982 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 15:05:45.983 +02:00 [Information] Executing JsonResult, writing value of type '"SogyoLunchApp.Winkel"'.
2019-04-18 15:05:45.987 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:45.989 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 86.7558ms
2019-04-18 15:05:45.992 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:05:45.994 +02:00 [Information] Request finished in 177.7595ms 200 application/json; charset=utf-8
2019-04-18 15:05:45.995 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:45.996 +02:00 [Information] Executed action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" in 78.2907ms
2019-04-18 15:05:46.000 +02:00 [Information] Executed action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 26.6522ms.
2019-04-18 15:05:46.001 +02:00 [Information] Request finished in 205.9611ms 200 application/json; charset=utf-8
2019-04-18 15:05:46.004 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 15:05:46.004 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 15:05:46.005 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:46.007 +02:00 [Information] Request finished in 192.1901ms 200 application/json; charset=utf-8
2019-04-18 15:05:46.009 +02:00 [Information] Executing JsonResult, writing value of type '"SogyoLunchApp.Winkel"'.
2019-04-18 15:05:46.010 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 15:05:46.013 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 58.7022ms
2019-04-18 15:05:46.014 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:46.015 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:46.016 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 15:05:46.017 +02:00 [Information] Executed action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" in 66.2255ms
2019-04-18 15:05:46.018 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:46.020 +02:00 [Information] Request finished in 184.8782ms 200 application/json; charset=utf-8
2019-04-18 15:05:46.021 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:46.022 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:46.023 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:46.025 +02:00 [Information] Request finished in 222.2896ms 200 application/json; charset=utf-8
2019-04-18 15:05:46.026 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:46.027 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 15:05:46.028 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:46.029 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:46.030 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:46.031 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 15:05:46.032 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:46.033 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:46.033 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:46.037 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:46.040 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:46.042 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:46.043 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:46.044 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:46.044 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:46.045 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:46.047 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:46.048 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:46.055 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:46.055 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:46.056 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:46.057 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:46.059 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:46.056 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:46.064 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:46.065 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:46.077 +02:00 [Information] Executed DbCommand ("16"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:46.079 +02:00 [Information] Route matched with "{action = \"GetDeadlinePerDatum\", controller = \"Deadline\"}". Executing action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)"
2019-04-18 15:05:46.080 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:46.085 +02:00 [Information] Executed DbCommand ("17"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:46.088 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:46.098 +02:00 [Information] Executed DbCommand ("22"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:46.101 +02:00 [Information] Executing action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:05:46.102 +02:00 [Information] Executed DbCommand ("19"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:46.111 +02:00 [Information] Executed DbCommand ("23"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:46.112 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:46.117 +02:00 [Information] Executed DbCommand ("18"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:46.118 +02:00 [Information] Route matched with "{action = \"GetProductenbijDatum\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenbijDatum (Services)"
2019-04-18 15:05:46.121 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__bezorgdag_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [x].[Dag], [x].[BestelDeadlineDag], [x].[BestelDeadlineTijd], [x].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [x]
WHERE [x].[Dag] = @__bezorgdag_0"
2019-04-18 15:05:46.126 +02:00 [Information] Route matched with "{action = \"GetProductenbijDatum\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenbijDatum (Services)"
2019-04-18 15:05:46.131 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:46.132 +02:00 [Information] Executed DbCommand ("26"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:46.134 +02:00 [Information] Executed action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 23.6323ms.
2019-04-18 15:05:46.135 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:46.136 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenbijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:05:46.141 +02:00 [Information] Route matched with "{action = \"GetDeadlinePerDatum\", controller = \"Deadline\"}". Executing action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)"
2019-04-18 15:05:46.144 +02:00 [Information] Executing JsonResult, writing value of type '"System.DateTime"'.
2019-04-18 15:05:46.146 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenbijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:05:46.149 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:46.150 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:46.151 +02:00 [Information] Executed action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" in 63.252ms
2019-04-18 15:05:46.153 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:46.157 +02:00 [Information] Executing action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:05:46.160 +02:00 [Information] Request finished in 177.8089ms 200 application/json; charset=utf-8
2019-04-18 15:05:46.161 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:46.164 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:46.165 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:46.166 +02:00 [Information] Executed DbCommand ("50"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:46.170 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 15:05:46.182 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 15:05:46.182 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__bezorgdag_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [x].[Dag], [x].[BestelDeadlineDag], [x].[BestelDeadlineTijd], [x].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [x]
WHERE [x].[Dag] = @__bezorgdag_0"
2019-04-18 15:05:46.184 +02:00 [Information] Route matched with "{action = \"GetProductenbijDatum\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenbijDatum (Services)"
2019-04-18 15:05:46.187 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenbijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 38.3465ms.
2019-04-18 15:05:46.190 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenbijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 37.4768ms.
2019-04-18 15:05:46.194 +02:00 [Information] Executed action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 29.0017ms.
2019-04-18 15:05:46.195 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:46.197 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:05:46.199 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:05:46.201 +02:00 [Information] Executing JsonResult, writing value of type '"System.DateTime"'.
2019-04-18 15:05:46.202 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenbijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:05:46.203 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenbijDatum (Services)" in 72.286ms
2019-04-18 15:05:46.204 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenbijDatum (Services)" in 68.8301ms
2019-04-18 15:05:46.205 +02:00 [Information] Executed action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" in 55.5257ms
2019-04-18 15:05:46.212 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:46.213 +02:00 [Information] Request finished in 208.3295ms 200 application/json; charset=utf-8
2019-04-18 15:05:46.214 +02:00 [Information] Request finished in 197.9551ms 200 application/json; charset=utf-8
2019-04-18 15:05:46.215 +02:00 [Information] Executed DbCommand ("84"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:46.219 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:05:46.221 +02:00 [Information] Request finished in 194.0284ms 200 application/json; charset=utf-8
2019-04-18 15:05:46.230 +02:00 [Information] Route matched with "{action = \"GetDeadlinePerDatum\", controller = \"Deadline\"}". Executing action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)"
2019-04-18 15:05:46.234 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 15:05:46.237 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenbijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 28.4772ms.
2019-04-18 15:05:46.238 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:46.241 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:05:46.243 +02:00 [Information] Executing action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:05:46.244 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenbijDatum (Services)" in 48.5609ms
2019-04-18 15:05:46.247 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:46.247 +02:00 [Information] Request finished in 237.3342ms 200 application/json; charset=utf-8
2019-04-18 15:05:46.250 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__bezorgdag_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [x].[Dag], [x].[BestelDeadlineDag], [x].[BestelDeadlineTijd], [x].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [x]
WHERE [x].[Dag] = @__bezorgdag_0"
2019-04-18 15:05:46.254 +02:00 [Information] Executed action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 7.6793ms.
2019-04-18 15:05:46.255 +02:00 [Information] Executing JsonResult, writing value of type '"System.DateTime"'.
2019-04-18 15:05:46.256 +02:00 [Information] Executed action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" in 17.9645ms
2019-04-18 15:05:46.258 +02:00 [Information] Request finished in 226.6781ms 200 application/json; charset=utf-8
2019-04-18 15:05:47.913 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling  
2019-04-18 15:05:47.914 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:47.915 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:47.917 +02:00 [Information] Request finished in 3.9415ms 204 
2019-04-18 15:05:47.921 +02:00 [Information] Request starting HTTP/1.1 POST http://localhost:5000/sogyolunchapi/bestelling application/json;charset=UTF-8 150
2019-04-18 15:05:47.925 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:47.928 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:47.929 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:47.930 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:47.932 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:47.936 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:47.944 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:47.948 +02:00 [Information] Route matched with "{action = \"PostBestelling\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.PostBestelling (Services)"
2019-04-18 15:05:47.950 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:47.966 +02:00 [Information] Executing action method "Services.APIService.BestellingController.PostBestelling (Services)" with arguments (["SogyoLunchApp.Bestelling"]) - Validation state: Valid
2019-04-18 15:05:47.974 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__bestelling_GebruikerId_0='?' (DbType = Guid), @__bestelling_Bezorgdatum_Date_1='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Bestellingen] AS [x]
        WHERE ([x].[GebruikerId] = @__bestelling_GebruikerId_0) AND (CONVERT(date, [x].[Bezorgdatum]) = @__bestelling_Bezorgdatum_Date_1))
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:05:48.009 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@p0='?' (DbType = DateTime2), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
INSERT INTO [Bestellingen] ([Besteldatum], [Bezorgdatum], [GebruikerId])
VALUES (@p0, @p1, @p2);
SELECT [BestellingId]
FROM [Bestellingen]
WHERE @@ROWCOUNT = 1 AND [BestellingId] = scope_identity();"
2019-04-18 15:05:48.023 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (Size = 4000), @p7='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
INSERT INTO [ProductenPerBestellingen] ([BestellingId], [ProductId], [Aantal], [Notitie], [Prijs])
VALUES (@p3, @p4, @p5, @p6, @p7);"
2019-04-18 15:05:48.032 +02:00 [Information] Executed action method "Services.APIService.BestellingController.PostBestelling (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 64.6686ms.
2019-04-18 15:05:48.034 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 15:05:48.035 +02:00 [Information] Executed action "Services.APIService.BestellingController.PostBestelling (Services)" in 85.4905ms
2019-04-18 15:05:48.037 +02:00 [Information] Request finished in 115.381ms 200 
2019-04-18 15:05:48.051 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 15:05:48.051 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 15:05:48.053 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 15:05:48.054 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:48.058 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:48.059 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:48.060 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:48.062 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:48.064 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:48.065 +02:00 [Information] Request finished in 14.4021ms 204 
2019-04-18 15:05:48.067 +02:00 [Information] Request finished in 15.5465ms 204 
2019-04-18 15:05:48.069 +02:00 [Information] Request finished in 15.9721ms 204 
2019-04-18 15:05:48.077 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 15:05:48.077 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 15:05:48.077 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 15:05:48.078 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:48.079 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:48.081 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:05:48.082 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:48.083 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:48.085 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:05:48.086 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:48.086 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:48.087 +02:00 [Information] Successfully validated the token.
2019-04-18 15:05:48.088 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:48.089 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:48.090 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:05:48.092 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:48.092 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:48.093 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:05:48.097 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:48.099 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:48.101 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:05:48.105 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:48.110 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:48.113 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:05:48.114 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 15:05:48.116 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 15:05:48.119 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 15:05:48.120 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:48.121 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:48.123 +02:00 [Information] Authorization was successful.
2019-04-18 15:05:48.124 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 15:05:48.125 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 15:05:48.126 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 15:05:48.128 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.2701ms.
2019-04-18 15:05:48.130 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.091ms.
2019-04-18 15:05:48.132 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0754ms.
2019-04-18 15:05:48.133 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:05:48.135 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:05:48.137 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:05:48.145 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 15:05:48.145 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 15:05:48.167 +02:00 [Information] Executed DbCommand ("28"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 15:05:48.170 +02:00 [Information] Executed DbCommand ("18"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x.ProductenPerBestellingen].[BestellingId], [x.ProductenPerBestellingen].[ProductId], [x.ProductenPerBestellingen].[Aantal], [x.ProductenPerBestellingen].[Notitie], [x.ProductenPerBestellingen].[Prijs], [p.Product].[ProductId], [p.Product].[CategorieId], [p.Product].[Naam], [p.Product].[Prijs], [p.Product].[WinkelId]
FROM [ProductenPerBestellingen] AS [x.ProductenPerBestellingen]
INNER JOIN [Producten] AS [p.Product] ON [x.ProductenPerBestellingen].[ProductId] = [p.Product].[ProductId]
INNER JOIN (
    SELECT [x0].[BestellingId]
    FROM [Bestellingen] AS [x0]
    WHERE (CONVERT(date, [x0].[Bezorgdatum]) = @__date_Date_0) AND ([x0].[GebruikerId] = @__gebruikerId_1)
) AS [t] ON [x.ProductenPerBestellingen].[BestellingId] = [t].[BestellingId]
ORDER BY [t].[BestellingId]"
2019-04-18 15:05:48.171 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x.ProductenPerBestellingen].[BestellingId], [x.ProductenPerBestellingen].[ProductId], [x.ProductenPerBestellingen].[Aantal], [x.ProductenPerBestellingen].[Notitie], [x.ProductenPerBestellingen].[Prijs], [p.Product].[ProductId], [p.Product].[CategorieId], [p.Product].[Naam], [p.Product].[Prijs], [p.Product].[WinkelId]
FROM [ProductenPerBestellingen] AS [x.ProductenPerBestellingen]
INNER JOIN [Producten] AS [p.Product] ON [x.ProductenPerBestellingen].[ProductId] = [p.Product].[ProductId]
INNER JOIN (
    SELECT [x0].[BestellingId]
    FROM [Bestellingen] AS [x0]
    WHERE (CONVERT(date, [x0].[Bezorgdatum]) = @__date_Date_0) AND ([x0].[GebruikerId] = @__gebruikerId_1)
) AS [t] ON [x.ProductenPerBestellingen].[BestellingId] = [t].[BestellingId]
ORDER BY [t].[BestellingId]"
2019-04-18 15:05:48.176 +02:00 [Information] Executed DbCommand ("25"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x.ProductenPerBestellingen].[BestellingId], [x.ProductenPerBestellingen].[ProductId], [x.ProductenPerBestellingen].[Aantal], [x.ProductenPerBestellingen].[Notitie], [x.ProductenPerBestellingen].[Prijs], [p.Product].[ProductId], [p.Product].[CategorieId], [p.Product].[Naam], [p.Product].[Prijs], [p.Product].[WinkelId]
FROM [ProductenPerBestellingen] AS [x.ProductenPerBestellingen]
INNER JOIN [Producten] AS [p.Product] ON [x.ProductenPerBestellingen].[ProductId] = [p.Product].[ProductId]
INNER JOIN (
    SELECT [x0].[BestellingId]
    FROM [Bestellingen] AS [x0]
    WHERE (CONVERT(date, [x0].[Bezorgdatum]) = @__date_Date_0) AND ([x0].[GebruikerId] = @__gebruikerId_1)
) AS [t] ON [x.ProductenPerBestellingen].[BestellingId] = [t].[BestellingId]
ORDER BY [t].[BestellingId]"
2019-04-18 15:05:48.187 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 65.6431ms
2019-04-18 15:05:48.187 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 66.9345ms
2019-04-18 15:05:48.187 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 64.0811ms
2019-04-18 15:05:48.189 +02:00 [Information] Request finished in 112.0851ms 200 application/json; charset=utf-8
2019-04-18 15:05:48.191 +02:00 [Information] Request finished in 114.9867ms 200 application/json; charset=utf-8
2019-04-18 15:05:48.193 +02:00 [Information] Request finished in 116.296ms 200 application/json; charset=utf-8
2019-04-18 15:07:22.266 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 15:07:22.268 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:07:22.282 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:07:22.283 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:07:22.284 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:07:22.286 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:07:22.287 +02:00 [Information] Request finished in 20.9484ms 204 
2019-04-18 15:07:22.294 +02:00 [Information] Request finished in 26.0671ms 204 
2019-04-18 15:07:22.320 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 15:07:22.320 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:07:22.321 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:07:22.322 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:07:22.325 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:07:22.326 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:07:22.327 +02:00 [Information] Successfully validated the token.
2019-04-18 15:07:22.328 +02:00 [Information] Successfully validated the token.
2019-04-18 15:07:22.329 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:07:22.330 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:07:22.331 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:07:22.332 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:07:22.338 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:07:22.338 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:07:22.352 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:07:22.388 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:07:22.397 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 15:07:22.399 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 15:07:22.400 +02:00 [Information] Authorization was successful.
2019-04-18 15:07:22.401 +02:00 [Information] Authorization was successful.
2019-04-18 15:07:22.402 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 15:07:22.403 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 15:07:22.405 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.4894ms.
2019-04-18 15:07:22.407 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0234ms.
2019-04-18 15:07:22.409 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:07:22.410 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:07:22.414 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 15:07:22.415 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 15:07:22.416 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 15.1008ms
2019-04-18 15:07:22.419 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 19.0114ms
2019-04-18 15:07:22.420 +02:00 [Information] Request finished in 99.7805ms 200 application/json; charset=utf-8
2019-04-18 15:07:22.421 +02:00 [Information] Request finished in 101.018ms 200 application/json; charset=utf-8
2019-04-18 15:07:58.030 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:07:58.030 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 15:07:58.034 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:07:58.044 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:07:58.045 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:07:58.047 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:07:58.048 +02:00 [Information] Request finished in 17.9663ms 204 
2019-04-18 15:07:58.048 +02:00 [Information] Request finished in 18.4221ms 204 
2019-04-18 15:07:58.067 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 15:07:58.067 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:07:58.069 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:07:58.070 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:07:58.071 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:07:58.072 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:07:58.073 +02:00 [Information] Successfully validated the token.
2019-04-18 15:07:58.074 +02:00 [Information] Successfully validated the token.
2019-04-18 15:07:58.075 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:07:58.077 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:07:58.079 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:07:58.080 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:07:58.086 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:07:58.088 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:07:58.099 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:07:58.101 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:07:58.105 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 15:07:58.108 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 15:07:58.109 +02:00 [Information] Authorization was successful.
2019-04-18 15:07:58.111 +02:00 [Information] Authorization was successful.
2019-04-18 15:07:58.111 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 15:07:58.112 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 15:07:58.114 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0054ms.
2019-04-18 15:07:58.116 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1973ms.
2019-04-18 15:07:58.118 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:07:58.119 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:07:58.123 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 15:07:58.125 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 16.4351ms
2019-04-18 15:07:58.126 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 15:07:58.127 +02:00 [Information] Request finished in 59.9812ms 200 application/json; charset=utf-8
2019-04-18 15:07:58.130 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 19.3096ms
2019-04-18 15:07:58.132 +02:00 [Information] Request finished in 64.7128ms 200 application/json; charset=utf-8
2019-04-18 15:10:29.181 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 15:10:29.181 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:10:29.183 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:10:29.184 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:10:29.186 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:10:29.188 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:10:29.189 +02:00 [Information] Request finished in 7.9263ms 204 
2019-04-18 15:10:29.191 +02:00 [Information] Request finished in 10.6241ms 204 
2019-04-18 15:10:29.213 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 15:10:29.213 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:10:29.215 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:10:29.216 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:10:29.217 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:10:29.221 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:10:29.222 +02:00 [Information] Successfully validated the token.
2019-04-18 15:10:29.223 +02:00 [Information] Successfully validated the token.
2019-04-18 15:10:29.224 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:10:29.225 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:10:29.226 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:10:29.227 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:10:29.238 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:10:29.251 +02:00 [Information] Executed DbCommand ("12"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:10:29.258 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:10:29.261 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:10:29.263 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 15:10:29.266 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 15:10:29.268 +02:00 [Information] Authorization was successful.
2019-04-18 15:10:29.269 +02:00 [Information] Authorization was successful.
2019-04-18 15:10:29.270 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 15:10:29.271 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 15:10:29.274 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0105ms.
2019-04-18 15:10:29.277 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.2567ms.
2019-04-18 15:10:29.279 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:10:29.281 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:10:29.285 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 15:10:29.288 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 20.1519ms
2019-04-18 15:10:29.289 +02:00 [Information] Request finished in 75.6574ms 200 application/json; charset=utf-8
2019-04-18 15:10:29.294 +02:00 [Information] Executed DbCommand ("10"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 15:10:29.298 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 29.1299ms
2019-04-18 15:10:29.300 +02:00 [Information] Request finished in 86.1159ms 200 application/json; charset=utf-8
2019-04-18 15:10:31.961 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:10:31.966 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:10:31.968 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:10:31.970 +02:00 [Information] Request finished in 8.9046ms 204 
2019-04-18 15:10:31.976 +02:00 [Information] Request starting HTTP/1.1 PUT http://localhost:5000/sogyolunchapi/categorie application/json;charset=UTF-8 33
2019-04-18 15:10:31.978 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:10:31.979 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:10:31.981 +02:00 [Information] Successfully validated the token.
2019-04-18 15:10:31.982 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:10:31.985 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:10:31.991 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:10:31.998 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:10:32.003 +02:00 [Information] Route matched with "{action = \"UpdateCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.UpdateCategorie (Services)"
2019-04-18 15:10:32.004 +02:00 [Information] Authorization was successful.
2019-04-18 15:10:32.006 +02:00 [Information] Executing action method "Services.APIService.CategorieController.UpdateCategorie (Services)" with arguments (["SogyoLunchApp.Categorie"]) - Validation state: Valid
2019-04-18 15:10:32.021 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [Categorien] SET [CategorieNaam] = @p0, [VolgordeNummer] = @p1, [WinkelId] = @p2
WHERE [CategorieId] = @p3;
SELECT @@ROWCOUNT;"
2019-04-18 15:10:42.479 +02:00 [Information] Executed action "Services.APIService.CategorieController.UpdateCategorie (Services)" in 10475.2107ms
2019-04-18 15:10:42.553 +02:00 [Error] An unhandled exception has occurred while executing the request.
Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException: Database operation expected to affect 1 row(s) but actually affected 0 row(s). Data may have been modified or deleted since entities were loaded. See http://go.microsoft.com/fwlink/?LinkId=527962 for information on understanding and handling optimistic concurrency exceptions.
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ThrowAggregateUpdateConcurrencyException(Int32 commandIndex, Int32 expectedRowsAffected, Int32 rowsAffected)
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetWithoutPropagation(Int32 commandIndex, RelationalDataReader reader)
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.Consume(RelationalDataReader reader)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.Execute(IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(DbContext _, ValueTuple`2 parameters)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteImplementation[TState,TResult](Func`3 operation, Func`3 verifySucceeded, TState state)
   at Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(IEnumerable`1 commandBatches, IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(IReadOnlyList`1 entries)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(IReadOnlyList`1 entriesToSave)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges(Boolean acceptAllChangesOnSuccess)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChanges()
   at Repository.DBoperations.UpdateCategorie(Categorie categorie) in C:\Users\rsmits\Documents\lanthir-lunch\SogyoLunchApp\Repository\DBoperations.cs:line 426
   at Services.APIService.CategorieController.UpdateCategorie(Categorie categorie) in C:\Users\rsmits\Documents\lanthir-lunch\SogyoLunchApp\Services\APIService\CategorieController.cs:line 46
   at lambda_method(Closure , Object , Object[] )
   at Microsoft.Extensions.Internal.ObjectMethodExecutor.Execute(Object target, Object[] parameters)
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.SyncActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at Services.Startup.<>c.<<AppAddUses>b__10_0>d.MoveNext() in C:\Users\rsmits\Documents\lanthir-lunch\SogyoLunchApp\Services\Startup.cs:line 112
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-04-18 15:10:42.694 +02:00 [Information] Request finished in 10718.315ms 500 text/html; charset=utf-8
2019-04-18 15:12:12.331 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:12:12.338 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 15:12:12.345 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:12:12.347 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:12:12.348 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:12:12.349 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:12:12.350 +02:00 [Information] Request finished in 19.685ms 204 
2019-04-18 15:12:12.351 +02:00 [Information] Request finished in 13.6599ms 204 
2019-04-18 15:12:12.364 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:12:12.367 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 15:12:12.368 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:12:12.368 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:12:12.370 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:12:12.371 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:12:12.372 +02:00 [Information] Successfully validated the token.
2019-04-18 15:12:12.374 +02:00 [Information] Successfully validated the token.
2019-04-18 15:12:12.375 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:12:12.376 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:12:12.377 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:12:12.378 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:12:12.389 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:12:12.394 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:12:12.402 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:12:12.414 +02:00 [Information] Executed DbCommand ("10"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:12:12.416 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 15:12:12.419 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 15:12:12.420 +02:00 [Information] Authorization was successful.
2019-04-18 15:12:12.422 +02:00 [Information] Authorization was successful.
2019-04-18 15:12:12.423 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 15:12:12.424 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 15:12:12.426 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0079ms.
2019-04-18 15:12:12.427 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0999ms.
2019-04-18 15:12:12.429 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:12:12.431 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:12:12.434 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 15:12:12.436 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 16.8199ms
2019-04-18 15:12:12.437 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 15:12:12.438 +02:00 [Information] Request finished in 70.911ms 200 application/json; charset=utf-8
2019-04-18 15:12:12.442 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 20.1321ms
2019-04-18 15:12:12.443 +02:00 [Information] Request finished in 80.352ms 200 application/json; charset=utf-8
2019-04-18 15:12:15.475 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:12:15.479 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:12:15.494 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:12:15.498 +02:00 [Information] Request finished in 23.1543ms 204 
2019-04-18 15:12:15.504 +02:00 [Information] Request starting HTTP/1.1 PUT http://localhost:5000/sogyolunchapi/categorie application/json;charset=UTF-8 73
2019-04-18 15:12:15.509 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:12:15.511 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:12:15.512 +02:00 [Information] Successfully validated the token.
2019-04-18 15:12:15.513 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:12:15.515 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:12:15.521 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:12:15.533 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:12:15.537 +02:00 [Information] Route matched with "{action = \"UpdateCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.UpdateCategorie (Services)"
2019-04-18 15:12:15.541 +02:00 [Information] Authorization was successful.
2019-04-18 15:12:15.543 +02:00 [Information] Executing action method "Services.APIService.CategorieController.UpdateCategorie (Services)" with arguments (["SogyoLunchApp.Categorie"]) - Validation state: Valid
2019-04-18 15:12:15.559 +02:00 [Information] Executed DbCommand ("12"ms) [Parameters=["@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [Categorien] SET [CategorieNaam] = @p0, [VolgordeNummer] = @p1, [WinkelId] = @p2
WHERE [CategorieId] = @p3;
SELECT @@ROWCOUNT;"
2019-04-18 15:12:15.563 +02:00 [Information] Executed action method "Services.APIService.CategorieController.UpdateCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 17.3101ms.
2019-04-18 15:12:15.565 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 15:12:15.566 +02:00 [Information] Executed action "Services.APIService.CategorieController.UpdateCategorie (Services)" in 25.0816ms
2019-04-18 15:12:15.567 +02:00 [Information] Request finished in 63.7505ms 200 
2019-04-18 15:12:24.530 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:12:24.532 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:12:24.534 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:12:24.535 +02:00 [Information] Request finished in 5.0398ms 204 
2019-04-18 15:12:24.540 +02:00 [Information] Request starting HTTP/1.1 PUT http://localhost:5000/sogyolunchapi/categorie application/json;charset=UTF-8 75
2019-04-18 15:12:24.542 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:12:24.544 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:12:24.545 +02:00 [Information] Successfully validated the token.
2019-04-18 15:12:24.546 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:12:24.547 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:12:24.552 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:12:24.559 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:12:24.563 +02:00 [Information] Route matched with "{action = \"UpdateCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.UpdateCategorie (Services)"
2019-04-18 15:12:24.565 +02:00 [Information] Authorization was successful.
2019-04-18 15:12:24.566 +02:00 [Information] Executing action method "Services.APIService.CategorieController.UpdateCategorie (Services)" with arguments (["SogyoLunchApp.Categorie"]) - Validation state: Valid
2019-04-18 15:12:24.572 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [Categorien] SET [CategorieNaam] = @p0, [VolgordeNummer] = @p1, [WinkelId] = @p2
WHERE [CategorieId] = @p3;
SELECT @@ROWCOUNT;"
2019-04-18 15:12:24.575 +02:00 [Information] Executed action method "Services.APIService.CategorieController.UpdateCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 7.0942ms.
2019-04-18 15:12:24.577 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 15:12:24.578 +02:00 [Information] Executed action "Services.APIService.CategorieController.UpdateCategorie (Services)" in 13.0606ms
2019-04-18 15:12:24.579 +02:00 [Information] Request finished in 38.8706ms 200 
2019-04-18 15:12:31.631 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:12:31.633 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:12:31.636 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:12:31.637 +02:00 [Information] Request finished in 6.0067ms 204 
2019-04-18 15:12:31.643 +02:00 [Information] Request starting HTTP/1.1 PUT http://localhost:5000/sogyolunchapi/categorie application/json;charset=UTF-8 73
2019-04-18 15:12:31.644 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:12:31.646 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:12:31.647 +02:00 [Information] Successfully validated the token.
2019-04-18 15:12:31.648 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:12:31.649 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:12:31.770 +02:00 [Information] Executed DbCommand ("117"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:12:31.881 +02:00 [Information] Executed DbCommand ("102"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:12:31.885 +02:00 [Information] Route matched with "{action = \"UpdateCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.UpdateCategorie (Services)"
2019-04-18 15:12:31.887 +02:00 [Information] Authorization was successful.
2019-04-18 15:12:31.889 +02:00 [Information] Executing action method "Services.APIService.CategorieController.UpdateCategorie (Services)" with arguments (["SogyoLunchApp.Categorie"]) - Validation state: Valid
2019-04-18 15:12:31.928 +02:00 [Information] Executed DbCommand ("36"ms) [Parameters=["@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [Categorien] SET [CategorieNaam] = @p0, [VolgordeNummer] = @p1, [WinkelId] = @p2
WHERE [CategorieId] = @p3;
SELECT @@ROWCOUNT;"
2019-04-18 15:12:31.932 +02:00 [Information] Executed action method "Services.APIService.CategorieController.UpdateCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 40.6639ms.
2019-04-18 15:12:31.933 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 15:12:31.934 +02:00 [Information] Executed action "Services.APIService.CategorieController.UpdateCategorie (Services)" in 46.8735ms
2019-04-18 15:12:31.935 +02:00 [Information] Request finished in 292.669ms 200 
2019-04-18 15:12:46.907 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 15:12:46.908 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:12:46.909 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:12:46.910 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:12:46.911 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:12:46.913 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:12:46.914 +02:00 [Information] Request finished in 6.1482ms 204 
2019-04-18 15:12:46.916 +02:00 [Information] Request finished in 8.6543ms 204 
2019-04-18 15:12:46.930 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 15:12:46.930 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:12:46.932 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:12:46.932 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:12:46.933 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:12:46.935 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:12:46.936 +02:00 [Information] Successfully validated the token.
2019-04-18 15:12:46.936 +02:00 [Information] Successfully validated the token.
2019-04-18 15:12:46.937 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:12:46.938 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:12:46.939 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:12:46.941 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:12:46.945 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:12:46.946 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:12:46.976 +02:00 [Information] Executed DbCommand ("26"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:12:46.980 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 15:12:46.981 +02:00 [Information] Authorization was successful.
2019-04-18 15:12:46.982 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 15:12:46.983 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0047ms.
2019-04-18 15:12:46.985 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:12:46.987 +02:00 [Information] Executed DbCommand ("33"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:12:46.990 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 15:12:46.991 +02:00 [Information] Authorization was successful.
2019-04-18 15:12:46.992 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 15:12:46.993 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0625ms.
2019-04-18 15:12:46.995 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:12:47.008 +02:00 [Information] Executed DbCommand ("22"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 15:12:47.011 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 29.9952ms
2019-04-18 15:12:47.012 +02:00 [Information] Request finished in 82.4732ms 200 application/json; charset=utf-8
2019-04-18 15:12:47.019 +02:00 [Information] Executed DbCommand ("22"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 15:12:47.023 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 32.1097ms
2019-04-18 15:12:47.024 +02:00 [Information] Request finished in 94.6595ms 200 application/json; charset=utf-8
2019-04-18 15:12:50.916 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:12:50.926 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:12:50.931 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:12:50.934 +02:00 [Information] Request finished in 17.7317ms 204 
2019-04-18 15:12:50.944 +02:00 [Information] Request starting HTTP/1.1 PUT http://localhost:5000/sogyolunchapi/categorie application/json;charset=UTF-8 75
2019-04-18 15:12:50.946 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:12:50.948 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:12:50.949 +02:00 [Information] Successfully validated the token.
2019-04-18 15:12:50.950 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:12:50.952 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:12:51.192 +02:00 [Information] Executed DbCommand ("235"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:12:51.232 +02:00 [Information] Executed DbCommand ("35"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:12:51.237 +02:00 [Information] Route matched with "{action = \"UpdateCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.UpdateCategorie (Services)"
2019-04-18 15:12:51.238 +02:00 [Information] Authorization was successful.
2019-04-18 15:12:51.239 +02:00 [Information] Executing action method "Services.APIService.CategorieController.UpdateCategorie (Services)" with arguments (["SogyoLunchApp.Categorie"]) - Validation state: Valid
2019-04-18 15:12:51.389 +02:00 [Information] Executed DbCommand ("146"ms) [Parameters=["@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [Categorien] SET [CategorieNaam] = @p0, [VolgordeNummer] = @p1, [WinkelId] = @p2
WHERE [CategorieId] = @p3;
SELECT @@ROWCOUNT;"
2019-04-18 15:12:51.412 +02:00 [Information] Executed action method "Services.APIService.CategorieController.UpdateCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 170.4632ms.
2019-04-18 15:12:51.413 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 15:12:51.414 +02:00 [Information] Executed action "Services.APIService.CategorieController.UpdateCategorie (Services)" in 176.4557ms
2019-04-18 15:12:51.415 +02:00 [Information] Request finished in 471.7405ms 200 
2019-04-18 15:12:51.420 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:12:51.425 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:12:51.428 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:12:51.429 +02:00 [Information] Request finished in 8.7106ms 204 
2019-04-18 15:12:51.433 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:12:51.433 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:12:51.435 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:12:51.437 +02:00 [Information] Successfully validated the token.
2019-04-18 15:12:51.438 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:12:51.439 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:12:51.445 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:12:51.452 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:12:51.456 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 15:12:51.458 +02:00 [Information] Authorization was successful.
2019-04-18 15:12:51.459 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 15:12:51.461 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.3068ms.
2019-04-18 15:12:51.463 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:12:51.478 +02:00 [Information] Executed DbCommand ("13"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 15:12:51.481 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 23.2871ms
2019-04-18 15:12:51.482 +02:00 [Information] Request finished in 49.4989ms 200 application/json; charset=utf-8
2019-04-18 15:12:52.311 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:12:52.312 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:12:52.314 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:12:52.315 +02:00 [Information] Request finished in 3.8337ms 204 
2019-04-18 15:12:52.318 +02:00 [Information] Request starting HTTP/1.1 PUT http://localhost:5000/sogyolunchapi/categorie application/json;charset=UTF-8 73
2019-04-18 15:12:52.319 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:12:52.320 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:12:52.321 +02:00 [Information] Successfully validated the token.
2019-04-18 15:12:52.322 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:12:52.324 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:12:52.328 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:12:52.334 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:12:52.338 +02:00 [Information] Route matched with "{action = \"UpdateCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.UpdateCategorie (Services)"
2019-04-18 15:12:52.342 +02:00 [Information] Authorization was successful.
2019-04-18 15:12:52.344 +02:00 [Information] Executing action method "Services.APIService.CategorieController.UpdateCategorie (Services)" with arguments (["SogyoLunchApp.Categorie"]) - Validation state: Valid
2019-04-18 15:12:52.350 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [Categorien] SET [CategorieNaam] = @p0, [VolgordeNummer] = @p1, [WinkelId] = @p2
WHERE [CategorieId] = @p3;
SELECT @@ROWCOUNT;"
2019-04-18 15:12:52.353 +02:00 [Information] Executed action method "Services.APIService.CategorieController.UpdateCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 6.5624ms.
2019-04-18 15:12:52.355 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 15:12:52.356 +02:00 [Information] Executed action "Services.APIService.CategorieController.UpdateCategorie (Services)" in 14.0107ms
2019-04-18 15:12:52.357 +02:00 [Information] Request finished in 39.2949ms 200 
2019-04-18 15:12:52.361 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:12:52.362 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:12:52.364 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:12:52.365 +02:00 [Information] Request finished in 4.5489ms 204 
2019-04-18 15:12:52.369 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:12:52.371 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:12:52.374 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:12:52.376 +02:00 [Information] Successfully validated the token.
2019-04-18 15:12:52.377 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:12:52.379 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:12:52.384 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:12:52.396 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:12:52.404 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 15:12:52.406 +02:00 [Information] Authorization was successful.
2019-04-18 15:12:52.406 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 15:12:52.408 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0913ms.
2019-04-18 15:12:52.410 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:12:52.414 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 15:12:52.416 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 10.7242ms
2019-04-18 15:12:52.422 +02:00 [Information] Request finished in 52.1551ms 200 application/json; charset=utf-8
2019-04-18 15:17:54.144 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 15:17:54.160 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:17:54.161 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:17:54.162 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:17:54.163 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:17:54.165 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:17:54.166 +02:00 [Information] Request finished in 21.6995ms 204 
2019-04-18 15:17:54.171 +02:00 [Information] Request finished in 11.4674ms 204 
2019-04-18 15:17:54.178 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:17:54.178 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 15:17:54.179 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:17:54.180 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:17:54.181 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:17:54.182 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:17:54.187 +02:00 [Information] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters) in C:\agent1\_work\109\s\src\Microsoft.IdentityModel.Tokens\Validators.cs:line 274
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters) in C:\agent1\_work\109\s\src\System.IdentityModel.Tokens.Jwt\JwtSecurityTokenHandler.cs:line 1182
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters) in C:\agent1\_work\109\s\src\System.IdentityModel.Tokens.Jwt\JwtSecurityTokenHandler.cs:line 739
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken) in C:\agent1\_work\109\s\src\System.IdentityModel.Tokens.Jwt\JwtSecurityTokenHandler.cs:line 723
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2019-04-18 15:17:54.187 +02:00 [Information] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters) in C:\agent1\_work\109\s\src\Microsoft.IdentityModel.Tokens\Validators.cs:line 274
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters) in C:\agent1\_work\109\s\src\System.IdentityModel.Tokens.Jwt\JwtSecurityTokenHandler.cs:line 1182
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters) in C:\agent1\_work\109\s\src\System.IdentityModel.Tokens.Jwt\JwtSecurityTokenHandler.cs:line 739
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken) in C:\agent1\_work\109\s\src\System.IdentityModel.Tokens.Jwt\JwtSecurityTokenHandler.cs:line 723
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2019-04-18 15:17:54.200 +02:00 [Information] "Bearer" was not authenticated. Failure message: "IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'."
2019-04-18 15:17:54.206 +02:00 [Information] "Bearer" was not authenticated. Failure message: "IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'."
2019-04-18 15:17:54.207 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 15:17:54.209 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 15:17:54.211 +02:00 [Information] Authorization failed.
2019-04-18 15:17:54.212 +02:00 [Information] Authorization failed.
2019-04-18 15:17:54.216 +02:00 [Information] Authorization failed for the request at filter '"Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter"'.
2019-04-18 15:17:54.216 +02:00 [Information] Authorization failed for the request at filter '"Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter"'.
2019-04-18 15:17:54.220 +02:00 [Information] Executing ChallengeResult with authentication schemes ([]).
2019-04-18 15:17:54.220 +02:00 [Information] Executing ChallengeResult with authentication schemes ([]).
2019-04-18 15:17:54.227 +02:00 [Information] AuthenticationScheme: "Bearer" was challenged.
2019-04-18 15:17:54.227 +02:00 [Information] AuthenticationScheme: "Bearer" was challenged.
2019-04-18 15:17:54.228 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 15.9472ms
2019-04-18 15:17:54.229 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 18.3428ms
2019-04-18 15:17:54.230 +02:00 [Information] Request finished in 52.2757ms 401 text/plain
2019-04-18 15:17:54.232 +02:00 [Information] Request finished in 54.1613ms 401 text/plain
2019-04-18 15:17:57.965 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/Auth/ExternalLogin  
2019-04-18 15:17:57.966 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:17:57.968 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:17:57.970 +02:00 [Information] Request finished in 5.3929ms 204 
2019-04-18 15:17:57.975 +02:00 [Information] Request starting HTTP/1.1 POST http://localhost:5000/sogyolunchapi/Auth/ExternalLogin application/json;charset=UTF-8 1303
2019-04-18 15:17:57.977 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:17:57.978 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:17:57.990 +02:00 [Information] Route matched with "{action = \"ExternalLogin\", controller = \"Auth\"}". Executing action "SogyoLunchApp.APIService.AuthController.ExternalLogin (Services)"
2019-04-18 15:17:57.993 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:17:58.000 +02:00 [Information] Executing action method "SogyoLunchApp.APIService.AuthController.ExternalLogin (Services)" with arguments (["SogyoLunchApp.APIService.ExternalLoginModel"]) - Validation state: Valid
2019-04-18 15:17:58.555 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:17:58.614 +02:00 [Information] Executed DbCommand ("31"ms) [Parameters=["@__normalizedEmail_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName]
FROM [AspNetUsers] AS [u]
WHERE [u].[NormalizedEmail] = @__normalizedEmail_0"
2019-04-18 15:17:58.643 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__loginProvider_0='?' (Size = 450), @__providerKey_1='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [userLogin].[LoginProvider], [userLogin].[ProviderKey], [userLogin].[ProviderDisplayName], [userLogin].[UserId]
FROM [AspNetUserLogins] AS [userLogin]
WHERE ([userLogin].[LoginProvider] = @__loginProvider_0) AND ([userLogin].[ProviderKey] = @__providerKey_1)"
2019-04-18 15:17:58.669 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__userId_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName]
FROM [AspNetUsers] AS [u]
WHERE [u].[Id] = @__userId_0"
2019-04-18 15:17:58.677 +02:00 [Warning] AddLogin for user "3a4a5049-5bff-4683-8042-7e01e6740527" failed because it was already associated with another user.
2019-04-18 15:17:58.711 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__user_Id_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [uc].[Id], [uc].[ClaimType], [uc].[ClaimValue], [uc].[UserId]
FROM [AspNetUserClaims] AS [uc]
WHERE [uc].[UserId] = @__user_Id_0"
2019-04-18 15:17:58.753 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__userId_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [role].[Name]
FROM [AspNetUserRoles] AS [userRole]
INNER JOIN [AspNetRoles] AS [role] ON [userRole].[RoleId] = [role].[Id]
WHERE [userRole].[UserId] = @__userId_0"
2019-04-18 15:17:58.765 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__normalizedName_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [r].[Id], [r].[ConcurrencyStamp], [r].[Name], [r].[NormalizedName]
FROM [AspNetRoles] AS [r]
WHERE [r].[NormalizedName] = @__normalizedName_0"
2019-04-18 15:17:58.786 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__role_Id_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [rc].[ClaimType], [rc].[ClaimValue]
FROM [AspNetRoleClaims] AS [rc]
WHERE [rc].[RoleId] = @__role_Id_0"
2019-04-18 15:17:58.810 +02:00 [Information] AuthenticationScheme: "Identity.Application" signed in.
2019-04-18 15:17:58.817 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__userId_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [role].[Name]
FROM [AspNetUserRoles] AS [userRole]
INNER JOIN [AspNetRoles] AS [role] ON [userRole].[RoleId] = [role].[Id]
WHERE [userRole].[UserId] = @__userId_0"
2019-04-18 15:17:58.843 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:17:58.874 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__normalizedUserName_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName]
FROM [AspNetUsers] AS [u]
WHERE [u].[NormalizedUserName] = @__normalizedUserName_0"
2019-04-18 15:17:58.931 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@p0='?' (DbType = Guid), @p1='?' (Size = 450), @p2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
DELETE FROM [AspNetUserTokens]
WHERE [UserId] = @p0 AND [LoginProvider] = @p1 AND [Name] = @p2;
SELECT @@ROWCOUNT;"
2019-04-18 15:17:58.948 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=["@p14='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p15='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTimeOffset), @p6='?' (Size = 256), @p7='?' (Size = 256), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Boolean), @p11='?' (Size = 4000), @p12='?' (DbType = Boolean), @p13='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [LockoutEnabled] = @p4, [LockoutEnd] = @p5, [NormalizedEmail] = @p6, [NormalizedUserName] = @p7, [PasswordHash] = @p8, [PhoneNumber] = @p9, [PhoneNumberConfirmed] = @p10, [SecurityStamp] = @p11, [TwoFactorEnabled] = @p12, [UserName] = @p13
WHERE [Id] = @p14 AND [ConcurrencyStamp] = @p15;
SELECT @@ROWCOUNT;"
2019-04-18 15:17:58.971 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:17:58.980 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__normalizedUserName_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName]
FROM [AspNetUsers] AS [u]
WHERE [u].[NormalizedUserName] = @__normalizedUserName_0"
2019-04-18 15:17:58.986 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@p0='?' (DbType = Guid), @p1='?' (Size = 450), @p2='?' (Size = 450), @p3='?' (Size = 4000)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
INSERT INTO [AspNetUserTokens] ([UserId], [LoginProvider], [Name], [Value])
VALUES (@p0, @p1, @p2, @p3);"
2019-04-18 15:17:58.990 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@p14='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p15='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTimeOffset), @p6='?' (Size = 256), @p7='?' (Size = 256), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Boolean), @p11='?' (Size = 4000), @p12='?' (DbType = Boolean), @p13='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [LockoutEnabled] = @p4, [LockoutEnd] = @p5, [NormalizedEmail] = @p6, [NormalizedUserName] = @p7, [PasswordHash] = @p8, [PhoneNumber] = @p9, [PhoneNumberConfirmed] = @p10, [SecurityStamp] = @p11, [TwoFactorEnabled] = @p12, [UserName] = @p13
WHERE [Id] = @p14 AND [ConcurrencyStamp] = @p15;
SELECT @@ROWCOUNT;"
2019-04-18 15:17:58.997 +02:00 [Information] Executed action method "SogyoLunchApp.APIService.AuthController.ExternalLogin (Services)", returned result "Microsoft.AspNetCore.Mvc.OkObjectResult" in 995.6136ms.
2019-04-18 15:17:59.009 +02:00 [Information] Executing ObjectResult, writing value of type '"<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"'.
2019-04-18 15:17:59.019 +02:00 [Information] Executed action "SogyoLunchApp.APIService.AuthController.ExternalLogin (Services)" in 1027.2207ms
2019-04-18 15:17:59.023 +02:00 [Information] Request finished in 1047.5562ms 200 application/json; charset=utf-8
2019-04-18 15:17:59.134 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 15:17:59.137 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:17:59.150 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:17:59.160 +02:00 [Information] Request finished in 26.5326ms 204 
2019-04-18 15:17:59.175 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 15:17:59.176 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:17:59.178 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:17:59.182 +02:00 [Information] Successfully validated the token.
2019-04-18 15:17:59.184 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:17:59.191 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:17:59.196 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:17:59.209 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:17:59.214 +02:00 [Information] Route matched with "{action = \"getBezorgdagen\", controller = \"Bezorgdag\"}". Executing action "Services.APIService.BezorgdagController.getBezorgdagen (Services)"
2019-04-18 15:17:59.217 +02:00 [Information] Authorization was successful.
2019-04-18 15:17:59.218 +02:00 [Information] Executing action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)" with arguments (["40"]) - Validation state: Valid
2019-04-18 15:17:59.228 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.233 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.242 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.247 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.251 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.260 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.264 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.268 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.275 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.279 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.283 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.291 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.294 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.298 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.301 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.308 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.313 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.317 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.324 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.328 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.333 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.341 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.345 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.349 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.359 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.363 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.367 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.380 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.384 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.391 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.394 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.398 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.401 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.409 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.412 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.416 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.422 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.425 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.428 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.431 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.434 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.438 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.441 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.444 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.447 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.450 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.456 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.460 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.462 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.465 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.468 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.472 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.475 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.478 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.481 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.484 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.488 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.491 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.494 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.498 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.500 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.504 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.507 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.510 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.514 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.517 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.521 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.524 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.527 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.530 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.533 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.537 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.540 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.543 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.545 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.548 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.551 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.554 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.558 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:17:59.562 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:17:59.564 +02:00 [Information] Executed action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 339.1627ms.
2019-04-18 15:17:59.566 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[System.DateTime, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"'.
2019-04-18 15:17:59.568 +02:00 [Information] Executed action "Services.APIService.BezorgdagController.getBezorgdagen (Services)" in 351.1311ms
2019-04-18 15:17:59.570 +02:00 [Information] Request finished in 395.3618ms 200 application/json; charset=utf-8
2019-04-18 15:17:59.587 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 15:17:59.588 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:17:59.592 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:17:59.592 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 15:17:59.599 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 15:17:59.610 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 15:17:59.610 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 15:17:59.610 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 15:17:59.664 +02:00 [Information] Request finished in 76.8927ms 204 
2019-04-18 15:17:59.667 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:17:59.671 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:17:59.674 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:17:59.675 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:17:59.676 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:17:59.700 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:17:59.701 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:17:59.702 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:17:59.705 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:17:59.706 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:17:59.707 +02:00 [Information] Request finished in 97.0488ms 204 
2019-04-18 15:17:59.708 +02:00 [Information] Request finished in 108.8009ms 204 
2019-04-18 15:17:59.709 +02:00 [Information] Request finished in 98.7054ms 204 
2019-04-18 15:17:59.711 +02:00 [Information] Request finished in 119.1032ms 204 
2019-04-18 15:17:59.757 +02:00 [Information] Request finished in 147.3854ms 204 
2019-04-18 15:17:59.766 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 15:17:59.773 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 15:17:59.773 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 15:17:59.791 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 15:17:59.792 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:17:59.793 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 15:17:59.794 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 15:17:59.795 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:17:59.796 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:17:59.797 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:17:59.798 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:17:59.799 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:17:59.800 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:17:59.802 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:17:59.804 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:17:59.806 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:17:59.807 +02:00 [Information] Request finished in 40.9094ms 204 
2019-04-18 15:17:59.811 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:17:59.815 +02:00 [Information] Request finished in 23.5388ms 204 
2019-04-18 15:17:59.816 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 15:17:59.818 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:17:59.821 +02:00 [Information] Request finished in 48.4156ms 204 
2019-04-18 15:17:59.822 +02:00 [Information] Request finished in 49.3042ms 204 
2019-04-18 15:17:59.824 +02:00 [Information] Request finished in 30.5642ms 204 
2019-04-18 15:17:59.825 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 15:17:59.827 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:17:59.828 +02:00 [Information] Request finished in 34.3686ms 204 
2019-04-18 15:17:59.830 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 15:17:59.831 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 15:17:59.832 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 15:17:59.833 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:17:59.834 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:17:59.836 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 15:17:59.837 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:17:59.838 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:17:59.839 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:17:59.840 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:17:59.842 +02:00 [Information] Request finished in 25.7192ms 204 
2019-04-18 15:17:59.842 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:17:59.844 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:17:59.846 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:17:59.847 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:17:59.848 +02:00 [Information] Request finished in 22.771ms 204 
2019-04-18 15:17:59.849 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 15:17:59.851 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:17:59.852 +02:00 [Information] Request finished in 22.7292ms 204 
2019-04-18 15:17:59.854 +02:00 [Information] Request finished in 23.582ms 204 
2019-04-18 15:17:59.856 +02:00 [Information] Successfully validated the token.
2019-04-18 15:17:59.857 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 15:17:59.858 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:17:59.859 +02:00 [Information] Successfully validated the token.
2019-04-18 15:17:59.860 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 15:17:59.861 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 15:17:59.862 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:17:59.863 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:17:59.865 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:17:59.866 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:17:59.867 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:17:59.869 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:17:59.871 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:17:59.872 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:17:59.873 +02:00 [Information] Successfully validated the token.
2019-04-18 15:17:59.874 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:17:59.875 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:17:59.876 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:17:59.879 +02:00 [Information] Successfully validated the token.
2019-04-18 15:17:59.880 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:17:59.881 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:17:59.882 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:17:59.883 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:17:59.887 +02:00 [Information] Successfully validated the token.
2019-04-18 15:17:59.889 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:17:59.908 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:17:59.910 +02:00 [Information] Successfully validated the token.
2019-04-18 15:17:59.912 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:17:59.912 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:17:59.913 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:17:59.916 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:17:59.928 +02:00 [Information] Route matched with "{action = \"GetWinkelBijDatum\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)"
2019-04-18 15:17:59.929 +02:00 [Information] Authorization was successful.
2019-04-18 15:17:59.930 +02:00 [Information] Executing action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:17:59.934 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:17:59.934 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:17:59.947 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:17:59.961 +02:00 [Information] Executed DbCommand ("10"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:18:00.031 +02:00 [Information] Executed DbCommand ("14"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:18:00.034 +02:00 [Information] Executed DbCommand ("42"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:18:00.046 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:18:00.052 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:18:00.054 +02:00 [Information] Executed DbCommand ("39"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:18:00.055 +02:00 [Information] Route matched with "{action = \"GetWinkelBijDatum\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)"
2019-04-18 15:18:00.060 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:18:00.061 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 15:18:00.068 +02:00 [Information] Executed action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 136.3531ms.
2019-04-18 15:18:00.069 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:18:00.070 +02:00 [Information] Executed DbCommand ("93"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:18:00.071 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 15:18:00.072 +02:00 [Information] Authorization was successful.
2019-04-18 15:18:00.074 +02:00 [Information] Authorization was successful.
2019-04-18 15:18:00.075 +02:00 [Information] Executing JsonResult, writing value of type '"SogyoLunchApp.Winkel"'.
2019-04-18 15:18:00.079 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 15:18:00.081 +02:00 [Information] Route matched with "{action = \"GetWinkelBijDatum\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)"
2019-04-18 15:18:00.082 +02:00 [Information] Authorization was successful.
2019-04-18 15:18:00.083 +02:00 [Information] Executing action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:18:00.084 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 15:18:00.085 +02:00 [Information] Executed action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" in 155.926ms
2019-04-18 15:18:00.087 +02:00 [Information] Authorization was successful.
2019-04-18 15:18:00.089 +02:00 [Information] Authorization was successful.
2019-04-18 15:18:00.090 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 15:18:00.094 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.5015ms.
2019-04-18 15:18:00.095 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:18:00.095 +02:00 [Information] Request finished in 263.2266ms 200 application/json; charset=utf-8
2019-04-18 15:18:00.096 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 15:18:00.096 +02:00 [Information] Executing action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:18:00.098 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1211ms.
2019-04-18 15:18:00.100 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:18:00.106 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.143ms.
2019-04-18 15:18:00.107 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:18:00.109 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:18:00.110 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:18:00.113 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:18:00.116 +02:00 [Information] Executed action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 24.4941ms.
2019-04-18 15:18:00.118 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 15:18:00.124 +02:00 [Information] Executing JsonResult, writing value of type '"SogyoLunchApp.Winkel"'.
2019-04-18 15:18:00.124 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 15:18:00.125 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:18:00.128 +02:00 [Information] Executed action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" in 55.1304ms
2019-04-18 15:18:00.133 +02:00 [Information] Executed action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 25.4253ms.
2019-04-18 15:18:00.134 +02:00 [Information] Request finished in 298.6369ms 200 application/json; charset=utf-8
2019-04-18 15:18:00.136 +02:00 [Information] Executing JsonResult, writing value of type '"SogyoLunchApp.Winkel"'.
2019-04-18 15:18:00.137 +02:00 [Information] Executed DbCommand ("26"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 15:18:00.138 +02:00 [Information] Executed action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" in 49.5513ms
2019-04-18 15:18:00.138 +02:00 [Information] Executed DbCommand ("9"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x.ProductenPerBestellingen].[BestellingId], [x.ProductenPerBestellingen].[ProductId], [x.ProductenPerBestellingen].[Aantal], [x.ProductenPerBestellingen].[Notitie], [x.ProductenPerBestellingen].[Prijs], [p.Product].[ProductId], [p.Product].[CategorieId], [p.Product].[Naam], [p.Product].[Prijs], [p.Product].[WinkelId]
FROM [ProductenPerBestellingen] AS [x.ProductenPerBestellingen]
INNER JOIN [Producten] AS [p.Product] ON [x.ProductenPerBestellingen].[ProductId] = [p.Product].[ProductId]
INNER JOIN (
    SELECT [x0].[BestellingId]
    FROM [Bestellingen] AS [x0]
    WHERE (CONVERT(date, [x0].[Bezorgdatum]) = @__date_Date_0) AND ([x0].[GebruikerId] = @__gebruikerId_1)
) AS [t] ON [x.ProductenPerBestellingen].[BestellingId] = [t].[BestellingId]
ORDER BY [t].[BestellingId]"
2019-04-18 15:18:00.141 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x.ProductenPerBestellingen].[BestellingId], [x.ProductenPerBestellingen].[ProductId], [x.ProductenPerBestellingen].[Aantal], [x.ProductenPerBestellingen].[Notitie], [x.ProductenPerBestellingen].[Prijs], [p.Product].[ProductId], [p.Product].[CategorieId], [p.Product].[Naam], [p.Product].[Prijs], [p.Product].[WinkelId]
FROM [ProductenPerBestellingen] AS [x.ProductenPerBestellingen]
INNER JOIN [Producten] AS [p.Product] ON [x.ProductenPerBestellingen].[ProductId] = [p.Product].[ProductId]
INNER JOIN (
    SELECT [x0].[BestellingId]
    FROM [Bestellingen] AS [x0]
    WHERE (CONVERT(date, [x0].[Bezorgdatum]) = @__date_Date_0) AND ([x0].[GebruikerId] = @__gebruikerId_1)
) AS [t] ON [x.ProductenPerBestellingen].[BestellingId] = [t].[BestellingId]
ORDER BY [t].[BestellingId]"
2019-04-18 15:18:00.142 +02:00 [Information] Request finished in 292.6101ms 200 application/json; charset=utf-8
2019-04-18 15:18:00.147 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 59.2386ms
2019-04-18 15:18:00.150 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 75.8354ms
2019-04-18 15:18:00.152 +02:00 [Information] Request finished in 290.8924ms 200 application/json; charset=utf-8
2019-04-18 15:18:00.153 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 15:18:00.154 +02:00 [Information] Executed DbCommand ("27"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x.ProductenPerBestellingen].[BestellingId], [x.ProductenPerBestellingen].[ProductId], [x.ProductenPerBestellingen].[Aantal], [x.ProductenPerBestellingen].[Notitie], [x.ProductenPerBestellingen].[Prijs], [p.Product].[ProductId], [p.Product].[CategorieId], [p.Product].[Naam], [p.Product].[Prijs], [p.Product].[WinkelId]
FROM [ProductenPerBestellingen] AS [x.ProductenPerBestellingen]
INNER JOIN [Producten] AS [p.Product] ON [x.ProductenPerBestellingen].[ProductId] = [p.Product].[ProductId]
INNER JOIN (
    SELECT [x0].[BestellingId]
    FROM [Bestellingen] AS [x0]
    WHERE (CONVERT(date, [x0].[Bezorgdatum]) = @__date_Date_0) AND ([x0].[GebruikerId] = @__gebruikerId_1)
) AS [t] ON [x.ProductenPerBestellingen].[BestellingId] = [t].[BestellingId]
ORDER BY [t].[BestellingId]"
2019-04-18 15:18:00.154 +02:00 [Information] Request finished in 297.474ms 200 application/json; charset=utf-8
2019-04-18 15:18:00.157 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:18:00.162 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 15:18:00.162 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 79.2999ms
2019-04-18 15:18:00.162 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 15:18:00.164 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:18:00.165 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:18:00.166 +02:00 [Information] Request finished in 306.3723ms 200 application/json; charset=utf-8
2019-04-18 15:18:00.167 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:18:00.168 +02:00 [Information] Successfully validated the token.
2019-04-18 15:18:00.169 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:18:00.170 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 15:18:00.171 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:18:00.172 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:18:00.173 +02:00 [Information] Successfully validated the token.
2019-04-18 15:18:00.173 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:18:00.174 +02:00 [Information] Successfully validated the token.
2019-04-18 15:18:00.175 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:18:00.176 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:18:00.177 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:18:00.178 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:18:00.181 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:18:00.182 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 15:18:00.182 +02:00 [Information] Successfully validated the token.
2019-04-18 15:18:00.186 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:18:00.187 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:18:00.187 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:18:00.190 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 15:18:00.191 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:18:00.193 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:18:00.194 +02:00 [Information] Successfully validated the token.
2019-04-18 15:18:00.194 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:18:00.197 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:18:00.199 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:18:00.200 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:18:00.201 +02:00 [Information] Successfully validated the token.
2019-04-18 15:18:00.204 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:18:00.206 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:18:00.362 +02:00 [Information] Executed DbCommand ("177"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:18:00.362 +02:00 [Information] Executed DbCommand ("172"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:18:00.363 +02:00 [Information] Executed DbCommand ("165"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:18:00.364 +02:00 [Information] Executed DbCommand ("160"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:18:00.377 +02:00 [Information] Executed DbCommand ("167"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:18:00.387 +02:00 [Information] Executed DbCommand ("206"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:18:00.405 +02:00 [Information] Executed DbCommand ("13"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:18:00.405 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:18:00.405 +02:00 [Information] Executed DbCommand ("17"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:18:00.406 +02:00 [Information] Executed DbCommand ("9"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:18:00.409 +02:00 [Information] Route matched with "{action = \"GetDeadlinePerDatum\", controller = \"Deadline\"}". Executing action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)"
2019-04-18 15:18:00.411 +02:00 [Information] Route matched with "{action = \"GetDeadlinePerDatum\", controller = \"Deadline\"}". Executing action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)"
2019-04-18 15:18:00.414 +02:00 [Information] Route matched with "{action = \"GetWinkelBijDatum\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)"
2019-04-18 15:18:00.416 +02:00 [Information] Route matched with "{action = \"GetProductenbijDatum\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenbijDatum (Services)"
2019-04-18 15:18:00.417 +02:00 [Information] Authorization was successful.
2019-04-18 15:18:00.419 +02:00 [Information] Authorization was successful.
2019-04-18 15:18:00.420 +02:00 [Information] Authorization was successful.
2019-04-18 15:18:00.422 +02:00 [Information] Authorization was successful.
2019-04-18 15:18:00.422 +02:00 [Information] Executing action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:18:00.423 +02:00 [Information] Executing action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:18:00.424 +02:00 [Information] Executing action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:18:00.425 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenbijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:18:00.431 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:18:00.432 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:18:00.433 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:18:00.433 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:18:00.447 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:18:00.450 +02:00 [Information] Executed action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 19.9921ms.
2019-04-18 15:18:00.451 +02:00 [Information] Executed DbCommand ("11"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:18:00.452 +02:00 [Information] Executed DbCommand ("14"ms) [Parameters=["@__bezorgdag_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [x].[Dag], [x].[BestelDeadlineDag], [x].[BestelDeadlineTijd], [x].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [x]
WHERE [x].[Dag] = @__bezorgdag_0"
2019-04-18 15:18:00.452 +02:00 [Information] Executing JsonResult, writing value of type '"SogyoLunchApp.Winkel"'.
2019-04-18 15:18:00.458 +02:00 [Information] Executed action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 29.4665ms.
2019-04-18 15:18:00.459 +02:00 [Information] Executed action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" in 38.9498ms
2019-04-18 15:18:00.461 +02:00 [Information] Executing JsonResult, writing value of type '"System.DateTime"'.
2019-04-18 15:18:00.461 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 15:18:00.462 +02:00 [Information] Request finished in 292.1035ms 200 application/json; charset=utf-8
2019-04-18 15:18:00.463 +02:00 [Information] Executed action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" in 44.4497ms
2019-04-18 15:18:00.466 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenbijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 33.8449ms.
2019-04-18 15:18:00.466 +02:00 [Information] Executed DbCommand ("85"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:18:00.467 +02:00 [Information] Executed DbCommand ("93"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:18:00.468 +02:00 [Information] Request finished in 285.3106ms 200 application/json; charset=utf-8
2019-04-18 15:18:00.471 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:18:00.474 +02:00 [Information] Route matched with "{action = \"GetProductenbijDatum\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenbijDatum (Services)"
2019-04-18 15:18:00.478 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 15:18:00.478 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 15:18:00.479 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 15:18:00.479 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenbijDatum (Services)" in 57.968ms
2019-04-18 15:18:00.481 +02:00 [Information] Authorization was successful.
2019-04-18 15:18:00.482 +02:00 [Information] Authorization was successful.
2019-04-18 15:18:00.483 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:18:00.484 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:18:00.486 +02:00 [Information] Request finished in 332.4713ms 200 application/json; charset=utf-8
2019-04-18 15:18:00.487 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenbijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:18:00.489 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:18:00.490 +02:00 [Information] Successfully validated the token.
2019-04-18 15:18:00.493 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 15:18:00.495 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:18:00.496 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:18:00.499 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1982ms.
2019-04-18 15:18:00.499 +02:00 [Information] Executed DbCommand ("64"ms) [Parameters=["@__bezorgdag_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [x].[Dag], [x].[BestelDeadlineDag], [x].[BestelDeadlineTijd], [x].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [x]
WHERE [x].[Dag] = @__bezorgdag_0"
2019-04-18 15:18:00.500 +02:00 [Information] Successfully validated the token.
2019-04-18 15:18:00.501 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:18:00.505 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:18:00.505 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 15:18:00.508 +02:00 [Information] Executed action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 81.618ms.
2019-04-18 15:18:00.509 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:18:00.514 +02:00 [Information] Executed DbCommand ("25"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:18:00.517 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:18:00.517 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:18:00.519 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:18:00.521 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 15:18:00.523 +02:00 [Information] Executing JsonResult, writing value of type '"System.DateTime"'.
2019-04-18 15:18:00.524 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:18:00.527 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:18:00.529 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:18:00.531 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:18:00.536 +02:00 [Information] Route matched with "{action = \"GetProductenbijDatum\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenbijDatum (Services)"
2019-04-18 15:18:00.537 +02:00 [Information] Successfully validated the token.
2019-04-18 15:18:00.539 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x.ProductenPerBestellingen].[BestellingId], [x.ProductenPerBestellingen].[ProductId], [x.ProductenPerBestellingen].[Aantal], [x.ProductenPerBestellingen].[Notitie], [x.ProductenPerBestellingen].[Prijs], [p.Product].[ProductId], [p.Product].[CategorieId], [p.Product].[Naam], [p.Product].[Prijs], [p.Product].[WinkelId]
FROM [ProductenPerBestellingen] AS [x.ProductenPerBestellingen]
INNER JOIN [Producten] AS [p.Product] ON [x.ProductenPerBestellingen].[ProductId] = [p.Product].[ProductId]
INNER JOIN (
    SELECT [x0].[BestellingId]
    FROM [Bestellingen] AS [x0]
    WHERE (CONVERT(date, [x0].[Bezorgdatum]) = @__date_Date_0) AND ([x0].[GebruikerId] = @__gebruikerId_1)
) AS [t] ON [x.ProductenPerBestellingen].[BestellingId] = [t].[BestellingId]
ORDER BY [t].[BestellingId]"
2019-04-18 15:18:00.541 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 15:18:00.544 +02:00 [Information] Executed action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" in 126.4258ms
2019-04-18 15:18:00.546 +02:00 [Information] Authorization was successful.
2019-04-18 15:18:00.546 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:18:00.551 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 68.3527ms
2019-04-18 15:18:00.551 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:18:00.554 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenbijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 66.2923ms.
2019-04-18 15:18:00.556 +02:00 [Information] Request finished in 365.8805ms 200 application/json; charset=utf-8
2019-04-18 15:18:00.557 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenbijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:18:00.560 +02:00 [Information] Route matched with "{action = \"GetDeadlinePerDatum\", controller = \"Deadline\"}". Executing action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)"
2019-04-18 15:18:00.561 +02:00 [Information] Request finished in 399.0687ms 200 application/json; charset=utf-8
2019-04-18 15:18:00.562 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:18:00.563 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:18:00.564 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 15:18:00.567 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:18:00.568 +02:00 [Information] Authorization was successful.
2019-04-18 15:18:00.573 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenbijDatum (Services)" in 92.073ms
2019-04-18 15:18:00.574 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:18:00.579 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:18:00.581 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:18:00.581 +02:00 [Information] Request finished in 419.1665ms 200 application/json; charset=utf-8
2019-04-18 15:18:00.582 +02:00 [Information] Executing action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:18:00.588 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:18:00.590 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:18:00.593 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 15:18:00.596 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:18:00.596 +02:00 [Information] Successfully validated the token.
2019-04-18 15:18:00.599 +02:00 [Information] Route matched with "{action = \"GetDeadlinePerDatum\", controller = \"Deadline\"}". Executing action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)"
2019-04-18 15:18:00.602 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenbijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 35.4318ms.
2019-04-18 15:18:00.605 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:18:00.607 +02:00 [Information] Authorization was successful.
2019-04-18 15:18:00.609 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:18:00.610 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:18:00.611 +02:00 [Information] Executing action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:18:00.612 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenbijDatum (Services)" in 65.9664ms
2019-04-18 15:18:00.626 +02:00 [Information] Request finished in 147.1865ms 200 application/json; charset=utf-8
2019-04-18 15:18:00.636 +02:00 [Information] Executed DbCommand ("21"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:18:00.636 +02:00 [Information] Executed DbCommand ("31"ms) [Parameters=["@__bezorgdag_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [x].[Dag], [x].[BestelDeadlineDag], [x].[BestelDeadlineTijd], [x].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [x]
WHERE [x].[Dag] = @__bezorgdag_0"
2019-04-18 15:18:00.643 +02:00 [Information] Executed action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 47.8364ms.
2019-04-18 15:18:00.645 +02:00 [Information] Executing JsonResult, writing value of type '"System.DateTime"'.
2019-04-18 15:18:00.647 +02:00 [Information] Executed action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" in 78.9901ms
2019-04-18 15:18:00.648 +02:00 [Information] Request finished in 169.3815ms 200 application/json; charset=utf-8
2019-04-18 15:18:00.654 +02:00 [Information] Executed DbCommand ("9"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:18:00.667 +02:00 [Information] Route matched with "{action = \"GetProductenbijDatum\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenbijDatum (Services)"
2019-04-18 15:18:00.675 +02:00 [Information] Executed DbCommand ("50"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:18:00.676 +02:00 [Information] Authorization was successful.
2019-04-18 15:18:00.680 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenbijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:18:00.682 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__bezorgdag_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [x].[Dag], [x].[BestelDeadlineDag], [x].[BestelDeadlineTijd], [x].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [x]
WHERE [x].[Dag] = @__bezorgdag_0"
2019-04-18 15:18:00.685 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:18:00.685 +02:00 [Information] Executed action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 60.5757ms.
2019-04-18 15:18:00.691 +02:00 [Information] Executing JsonResult, writing value of type '"System.DateTime"'.
2019-04-18 15:18:00.692 +02:00 [Information] Executed action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" in 84.9397ms
2019-04-18 15:18:00.693 +02:00 [Information] Request finished in 187.5468ms 200 application/json; charset=utf-8
2019-04-18 15:18:00.733 +02:00 [Information] Executed DbCommand ("44"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:18:00.742 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 15:18:00.744 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenbijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 62.7586ms.
2019-04-18 15:18:00.746 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:18:00.747 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenbijDatum (Services)" in 70.8373ms
2019-04-18 15:18:00.748 +02:00 [Information] Request finished in 184.0843ms 200 application/json; charset=utf-8
2019-04-18 15:18:02.923 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 15:18:02.923 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:18:02.924 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:18:02.925 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:18:02.926 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:18:02.927 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:18:02.928 +02:00 [Information] Request finished in 5.734ms 204 
2019-04-18 15:18:02.929 +02:00 [Information] Request finished in 6.6767ms 204 
2019-04-18 15:18:02.934 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 15:18:02.934 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:18:02.935 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:18:02.939 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:18:02.941 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:18:02.943 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:18:02.944 +02:00 [Information] Successfully validated the token.
2019-04-18 15:18:02.945 +02:00 [Information] Successfully validated the token.
2019-04-18 15:18:02.945 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:18:02.946 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:18:02.947 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:18:02.948 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:18:02.956 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:18:02.959 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:18:02.966 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:18:02.971 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:18:02.975 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 15:18:02.977 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 15:18:02.978 +02:00 [Information] Authorization was successful.
2019-04-18 15:18:02.980 +02:00 [Information] Authorization was successful.
2019-04-18 15:18:02.981 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 15:18:02.981 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 15:18:02.983 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0052ms.
2019-04-18 15:18:02.984 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.165ms.
2019-04-18 15:18:02.987 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:18:02.992 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:18:02.998 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 15:18:03.002 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 23.3432ms
2019-04-18 15:18:03.004 +02:00 [Information] Request finished in 69.8128ms 200 application/json; charset=utf-8
2019-04-18 15:18:03.005 +02:00 [Information] Executed DbCommand ("10"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 15:18:03.008 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 28.1476ms
2019-04-18 15:18:03.010 +02:00 [Information] Request finished in 75.9225ms 200 application/json; charset=utf-8
2019-04-18 15:18:05.517 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie?winkelId=1  
2019-04-18 15:18:05.518 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:18:05.524 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:18:05.525 +02:00 [Information] Request finished in 8.0183ms 204 
2019-04-18 15:18:05.529 +02:00 [Information] Request starting HTTP/1.1 DELETE http://localhost:5000/sogyolunchapi/categorie?winkelId=1  
2019-04-18 15:18:05.529 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:18:05.531 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:18:05.532 +02:00 [Information] Successfully validated the token.
2019-04-18 15:18:05.533 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:18:05.534 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:18:05.544 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:18:05.551 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:18:05.560 +02:00 [Information] Route matched with "{action = \"DeleteCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.DeleteCategorie (Services)"
2019-04-18 15:18:05.562 +02:00 [Information] Authorization was successful.
2019-04-18 15:18:05.563 +02:00 [Information] Executing action method "Services.APIService.CategorieController.DeleteCategorie (Services)" with arguments (["0"]) - Validation state: Valid
2019-04-18 15:18:05.577 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[CategorieId], [e].[CategorieNaam], [e].[VolgordeNummer], [e].[WinkelId]
FROM [Categorien] AS [e]
WHERE [e].[CategorieId] = @__get_Item_0"
2019-04-18 15:18:29.432 +02:00 [Information] Executed action "Services.APIService.CategorieController.DeleteCategorie (Services)" in 23869.7628ms
2019-04-18 15:18:29.491 +02:00 [Error] An unhandled exception has occurred while executing the request.
System.ArgumentNullException: Value cannot be null.
Parameter name: entity
   at Microsoft.EntityFrameworkCore.Utilities.Check.NotNull[T](T value, String parameterName)
   at Microsoft.EntityFrameworkCore.DbContext.Entry[TEntity](TEntity entity)
   at Repository.DBoperations.DeleteCategorie(Int32 categorieId) in C:\Users\rsmits\Documents\lanthir-lunch\SogyoLunchApp\Repository\DBoperations.cs:line 432
   at Services.APIService.CategorieController.DeleteCategorie(Int32 categorieId) in C:\Users\rsmits\Documents\lanthir-lunch\SogyoLunchApp\Services\APIService\CategorieController.cs:line 53
   at lambda_method(Closure , Object , Object[] )
   at Microsoft.Extensions.Internal.ObjectMethodExecutor.Execute(Object target, Object[] parameters)
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.SyncActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.InvokeCore(HttpContext context)
   at Services.Startup.<>c.<<AppAddUses>b__10_0>d.MoveNext() in C:\Users\rsmits\Documents\lanthir-lunch\SogyoLunchApp\Services\Startup.cs:line 112
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
2019-04-18 15:18:29.522 +02:00 [Information] Request finished in 23993.1628ms 500 text/html; charset=utf-8
2019-04-18 15:18:55.329 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 15:18:55.334 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:18:55.334 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:18:55.335 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:18:55.336 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:18:55.338 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:18:55.339 +02:00 [Information] Request finished in 10.4562ms 204 
2019-04-18 15:18:55.340 +02:00 [Information] Request finished in 6.4085ms 204 
2019-04-18 15:18:55.353 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 15:18:55.354 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:18:55.358 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:18:55.361 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:18:55.362 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:18:55.363 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:18:55.365 +02:00 [Information] Successfully validated the token.
2019-04-18 15:18:55.365 +02:00 [Information] Successfully validated the token.
2019-04-18 15:18:55.366 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:18:55.367 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:18:55.368 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:18:55.369 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:18:55.388 +02:00 [Information] Executed DbCommand ("12"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:18:55.397 +02:00 [Information] Executed DbCommand ("9"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:18:55.405 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:18:55.413 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:18:55.416 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 15:18:55.418 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 15:18:55.421 +02:00 [Information] Authorization was successful.
2019-04-18 15:18:55.422 +02:00 [Information] Authorization was successful.
2019-04-18 15:18:55.423 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 15:18:55.424 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 15:18:55.425 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0042ms.
2019-04-18 15:18:55.427 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.09ms.
2019-04-18 15:18:55.428 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:18:55.430 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:18:55.433 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 15:18:55.435 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 15:18:55.435 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 14.8106ms
2019-04-18 15:18:55.438 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 15.7722ms
2019-04-18 15:18:55.439 +02:00 [Information] Request finished in 86.191ms 200 application/json; charset=utf-8
2019-04-18 15:18:55.441 +02:00 [Information] Request finished in 86.342ms 200 application/json; charset=utf-8
2019-04-18 15:18:56.494 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie?CategorieId=3  
2019-04-18 15:18:56.495 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:18:56.496 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:18:56.498 +02:00 [Information] Request finished in 3.6671ms 204 
2019-04-18 15:18:56.501 +02:00 [Information] Request starting HTTP/1.1 DELETE http://localhost:5000/sogyolunchapi/categorie?CategorieId=3  
2019-04-18 15:18:56.502 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:18:56.506 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:18:56.507 +02:00 [Information] Successfully validated the token.
2019-04-18 15:18:56.508 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:18:56.509 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:18:56.512 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:18:56.520 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:18:56.525 +02:00 [Information] Route matched with "{action = \"DeleteCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.DeleteCategorie (Services)"
2019-04-18 15:18:56.526 +02:00 [Information] Authorization was successful.
2019-04-18 15:18:56.527 +02:00 [Information] Executing action method "Services.APIService.CategorieController.DeleteCategorie (Services)" with arguments (["3"]) - Validation state: Valid
2019-04-18 15:18:56.530 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[CategorieId], [e].[CategorieNaam], [e].[VolgordeNummer], [e].[WinkelId]
FROM [Categorien] AS [e]
WHERE [e].[CategorieId] = @__get_Item_0"
2019-04-18 15:18:56.541 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@p0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
DELETE FROM [Categorien]
WHERE [CategorieId] = @p0;
SELECT @@ROWCOUNT;"
2019-04-18 15:18:56.545 +02:00 [Information] Executed action method "Services.APIService.CategorieController.DeleteCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 16.2559ms.
2019-04-18 15:18:56.546 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 15:18:56.547 +02:00 [Information] Executed action "Services.APIService.CategorieController.DeleteCategorie (Services)" in 21.255ms
2019-04-18 15:18:56.548 +02:00 [Information] Request finished in 46.882ms 200 
2019-04-18 15:18:56.552 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:18:56.553 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:18:56.555 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:18:56.556 +02:00 [Information] Request finished in 4.4336ms 204 
2019-04-18 15:18:56.560 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:18:56.561 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:18:56.562 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:18:56.563 +02:00 [Information] Successfully validated the token.
2019-04-18 15:18:56.564 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:18:56.565 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:18:56.569 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:18:56.576 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:18:56.579 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 15:18:56.580 +02:00 [Information] Authorization was successful.
2019-04-18 15:18:56.581 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 15:18:56.583 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0691ms.
2019-04-18 15:18:56.584 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:18:56.588 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 15:18:56.590 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 10.1033ms
2019-04-18 15:18:56.592 +02:00 [Information] Request finished in 31.9261ms 200 application/json; charset=utf-8
2019-04-18 15:19:01.677 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie?CategorieId=2  
2019-04-18 15:19:01.684 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:19:01.690 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:19:01.691 +02:00 [Information] Request finished in 29.2138ms 204 
2019-04-18 15:19:01.696 +02:00 [Information] Request starting HTTP/1.1 DELETE http://localhost:5000/sogyolunchapi/categorie?CategorieId=2  
2019-04-18 15:19:01.697 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:19:01.698 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:19:01.699 +02:00 [Information] Successfully validated the token.
2019-04-18 15:19:01.700 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:19:01.701 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:19:01.710 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:19:01.716 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:19:01.721 +02:00 [Information] Route matched with "{action = \"DeleteCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.DeleteCategorie (Services)"
2019-04-18 15:19:01.723 +02:00 [Information] Authorization was successful.
2019-04-18 15:19:01.723 +02:00 [Information] Executing action method "Services.APIService.CategorieController.DeleteCategorie (Services)" with arguments (["2"]) - Validation state: Valid
2019-04-18 15:19:01.727 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[CategorieId], [e].[CategorieNaam], [e].[VolgordeNummer], [e].[WinkelId]
FROM [Categorien] AS [e]
WHERE [e].[CategorieId] = @__get_Item_0"
2019-04-18 15:19:01.830 +02:00 [Information] Executed DbCommand ("100"ms) [Parameters=["@p0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
DELETE FROM [Categorien]
WHERE [CategorieId] = @p0;
SELECT @@ROWCOUNT;"
2019-04-18 15:19:01.848 +02:00 [Information] Executed action method "Services.APIService.CategorieController.DeleteCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 123.0833ms.
2019-04-18 15:19:01.858 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 15:19:01.863 +02:00 [Information] Executed action "Services.APIService.CategorieController.DeleteCategorie (Services)" in 141.0471ms
2019-04-18 15:19:01.867 +02:00 [Information] Request finished in 170.9801ms 200 
2019-04-18 15:19:01.875 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:19:01.878 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:19:01.881 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:19:01.884 +02:00 [Information] Request finished in 9.0139ms 204 
2019-04-18 15:19:01.892 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:19:01.894 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:19:01.896 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:19:01.897 +02:00 [Information] Successfully validated the token.
2019-04-18 15:19:01.898 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:19:01.900 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:19:01.905 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:19:01.915 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:19:01.919 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 15:19:01.922 +02:00 [Information] Authorization was successful.
2019-04-18 15:19:01.923 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 15:19:01.925 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1119ms.
2019-04-18 15:19:01.927 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:19:01.930 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 15:19:01.933 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 10.704ms
2019-04-18 15:19:01.934 +02:00 [Information] Request finished in 42.1734ms 200 application/json; charset=utf-8
2019-04-18 15:19:19.168 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:19:19.171 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:19:19.173 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:19:19.175 +02:00 [Information] Request finished in 6.5621ms 204 
2019-04-18 15:19:19.178 +02:00 [Information] Request starting HTTP/1.1 POST http://localhost:5000/sogyolunchapi/categorie application/json;charset=UTF-8 59
2019-04-18 15:19:19.179 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:19:19.180 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:19:19.181 +02:00 [Information] Successfully validated the token.
2019-04-18 15:19:19.182 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:19:19.184 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:19:19.192 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:19:19.200 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:19:19.206 +02:00 [Information] Route matched with "{action = \"AddCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.AddCategorie (Services)"
2019-04-18 15:19:19.208 +02:00 [Information] Authorization was successful.
2019-04-18 15:19:19.210 +02:00 [Information] Executing action method "Services.APIService.CategorieController.AddCategorie (Services)" with arguments (["SogyoLunchApp.Categorie"]) - Validation state: Valid
2019-04-18 15:19:19.215 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
INSERT INTO [Categorien] ([CategorieNaam], [VolgordeNummer], [WinkelId])
VALUES (@p0, @p1, @p2);
SELECT [CategorieId]
FROM [Categorien]
WHERE @@ROWCOUNT = 1 AND [CategorieId] = scope_identity();"
2019-04-18 15:19:19.222 +02:00 [Information] Executed action method "Services.APIService.CategorieController.AddCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 9.3647ms.
2019-04-18 15:19:19.225 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 15:19:19.226 +02:00 [Information] Executed action "Services.APIService.CategorieController.AddCategorie (Services)" in 17.3631ms
2019-04-18 15:19:19.228 +02:00 [Information] Request finished in 49.8745ms 200 
2019-04-18 15:19:29.728 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:19:29.729 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:19:29.730 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:19:29.731 +02:00 [Information] Request finished in 3.4724ms 204 
2019-04-18 15:19:29.741 +02:00 [Information] Request starting HTTP/1.1 POST http://localhost:5000/sogyolunchapi/categorie application/json;charset=UTF-8 59
2019-04-18 15:19:29.742 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:19:29.744 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:19:29.745 +02:00 [Information] Successfully validated the token.
2019-04-18 15:19:29.746 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:19:29.747 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:19:29.751 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:19:29.760 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:19:29.764 +02:00 [Information] Route matched with "{action = \"AddCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.AddCategorie (Services)"
2019-04-18 15:19:29.766 +02:00 [Information] Authorization was successful.
2019-04-18 15:19:29.767 +02:00 [Information] Executing action method "Services.APIService.CategorieController.AddCategorie (Services)" with arguments (["SogyoLunchApp.Categorie"]) - Validation state: Valid
2019-04-18 15:19:29.775 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
INSERT INTO [Categorien] ([CategorieNaam], [VolgordeNummer], [WinkelId])
VALUES (@p0, @p1, @p2);
SELECT [CategorieId]
FROM [Categorien]
WHERE @@ROWCOUNT = 1 AND [CategorieId] = scope_identity();"
2019-04-18 15:19:29.778 +02:00 [Information] Executed action method "Services.APIService.CategorieController.AddCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 9.0494ms.
2019-04-18 15:19:29.780 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 15:19:29.781 +02:00 [Information] Executed action "Services.APIService.CategorieController.AddCategorie (Services)" in 14.5756ms
2019-04-18 15:19:29.782 +02:00 [Information] Request finished in 40.9356ms 200 
2019-04-18 15:19:33.431 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:19:33.432 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:19:33.433 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:19:33.434 +02:00 [Information] Request finished in 3.4577ms 204 
2019-04-18 15:19:33.438 +02:00 [Information] Request starting HTTP/1.1 POST http://localhost:5000/sogyolunchapi/categorie application/json;charset=UTF-8 59
2019-04-18 15:19:33.440 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:19:33.442 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:19:33.444 +02:00 [Information] Successfully validated the token.
2019-04-18 15:19:33.445 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:19:33.446 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:19:33.450 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:19:33.458 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:19:33.462 +02:00 [Information] Route matched with "{action = \"AddCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.AddCategorie (Services)"
2019-04-18 15:19:33.463 +02:00 [Information] Authorization was successful.
2019-04-18 15:19:33.464 +02:00 [Information] Executing action method "Services.APIService.CategorieController.AddCategorie (Services)" with arguments (["SogyoLunchApp.Categorie"]) - Validation state: Valid
2019-04-18 15:19:33.469 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
INSERT INTO [Categorien] ([CategorieNaam], [VolgordeNummer], [WinkelId])
VALUES (@p0, @p1, @p2);
SELECT [CategorieId]
FROM [Categorien]
WHERE @@ROWCOUNT = 1 AND [CategorieId] = scope_identity();"
2019-04-18 15:19:33.473 +02:00 [Information] Executed action method "Services.APIService.CategorieController.AddCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 6.9616ms.
2019-04-18 15:19:33.475 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 15:19:33.476 +02:00 [Information] Executed action "Services.APIService.CategorieController.AddCategorie (Services)" in 12.8908ms
2019-04-18 15:19:33.477 +02:00 [Information] Request finished in 39.3616ms 200 
2019-04-18 15:19:37.563 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 15:19:37.568 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:19:37.571 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:19:37.572 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:19:37.574 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:19:37.576 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:19:37.578 +02:00 [Information] Request finished in 10.1903ms 204 
2019-04-18 15:19:37.579 +02:00 [Information] Request finished in 15.9171ms 204 
2019-04-18 15:19:37.889 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:19:37.889 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 15:19:37.896 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:19:37.911 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:19:37.931 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:19:37.933 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:19:37.935 +02:00 [Information] Successfully validated the token.
2019-04-18 15:19:37.966 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:19:37.968 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:19:37.968 +02:00 [Information] Successfully validated the token.
2019-04-18 15:19:37.971 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:19:38.108 +02:00 [Information] Executed DbCommand ("137"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:19:38.135 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:19:38.152 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:19:38.153 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:19:38.164 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 15:19:38.168 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:19:38.174 +02:00 [Information] Authorization was successful.
2019-04-18 15:19:38.176 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 15:19:38.177 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 15:19:38.178 +02:00 [Information] Authorization was successful.
2019-04-18 15:19:38.180 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0982ms.
2019-04-18 15:19:38.181 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 15:19:38.182 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:19:38.185 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0054ms.
2019-04-18 15:19:38.188 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:19:38.189 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 15:19:38.190 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 15:19:38.192 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 18.7837ms
2019-04-18 15:19:38.195 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 16.2983ms
2019-04-18 15:19:38.196 +02:00 [Information] Request finished in 306.8627ms 200 application/json; charset=utf-8
2019-04-18 15:19:38.197 +02:00 [Information] Request finished in 308.1895ms 200 application/json; charset=utf-8
2019-04-18 15:19:40.121 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie?CategorieId=4  
2019-04-18 15:19:40.123 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:19:40.125 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:19:40.127 +02:00 [Information] Request finished in 5.8281ms 204 
2019-04-18 15:19:40.131 +02:00 [Information] Request starting HTTP/1.1 DELETE http://localhost:5000/sogyolunchapi/categorie?CategorieId=4  
2019-04-18 15:19:40.132 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:19:40.134 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:19:40.136 +02:00 [Information] Successfully validated the token.
2019-04-18 15:19:40.139 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:19:40.141 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:19:40.146 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:19:40.156 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:19:40.160 +02:00 [Information] Route matched with "{action = \"DeleteCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.DeleteCategorie (Services)"
2019-04-18 15:19:40.162 +02:00 [Information] Authorization was successful.
2019-04-18 15:19:40.163 +02:00 [Information] Executing action method "Services.APIService.CategorieController.DeleteCategorie (Services)" with arguments (["4"]) - Validation state: Valid
2019-04-18 15:19:40.167 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[CategorieId], [e].[CategorieNaam], [e].[VolgordeNummer], [e].[WinkelId]
FROM [Categorien] AS [e]
WHERE [e].[CategorieId] = @__get_Item_0"
2019-04-18 15:19:40.173 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@p0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
DELETE FROM [Categorien]
WHERE [CategorieId] = @p0;
SELECT @@ROWCOUNT;"
2019-04-18 15:19:40.176 +02:00 [Information] Executed action method "Services.APIService.CategorieController.DeleteCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 11.5516ms.
2019-04-18 15:19:40.178 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 15:19:40.179 +02:00 [Information] Executed action "Services.APIService.CategorieController.DeleteCategorie (Services)" in 16.9917ms
2019-04-18 15:19:40.180 +02:00 [Information] Request finished in 49.4823ms 200 
2019-04-18 15:19:40.184 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:19:40.188 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:19:40.189 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:19:40.191 +02:00 [Information] Request finished in 6.4279ms 204 
2019-04-18 15:19:40.194 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:19:40.195 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:19:40.197 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:19:40.198 +02:00 [Information] Successfully validated the token.
2019-04-18 15:19:40.199 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:19:40.201 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:19:40.208 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:19:40.215 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:19:40.224 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 15:19:40.227 +02:00 [Information] Authorization was successful.
2019-04-18 15:19:40.228 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 15:19:40.230 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.2672ms.
2019-04-18 15:19:40.232 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:19:40.236 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 15:19:40.239 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 11.9564ms
2019-04-18 15:19:40.240 +02:00 [Information] Request finished in 46.0741ms 200 application/json; charset=utf-8
2019-04-18 15:19:41.542 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie?CategorieId=5  
2019-04-18 15:19:41.542 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:19:41.544 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:19:41.545 +02:00 [Information] Request finished in 3.5269ms 204 
2019-04-18 15:19:41.548 +02:00 [Information] Request starting HTTP/1.1 DELETE http://localhost:5000/sogyolunchapi/categorie?CategorieId=5  
2019-04-18 15:19:41.549 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:19:41.551 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:19:41.552 +02:00 [Information] Successfully validated the token.
2019-04-18 15:19:41.553 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:19:41.555 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:19:41.560 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:19:41.567 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:19:41.571 +02:00 [Information] Route matched with "{action = \"DeleteCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.DeleteCategorie (Services)"
2019-04-18 15:19:41.573 +02:00 [Information] Authorization was successful.
2019-04-18 15:19:41.574 +02:00 [Information] Executing action method "Services.APIService.CategorieController.DeleteCategorie (Services)" with arguments (["5"]) - Validation state: Valid
2019-04-18 15:19:41.578 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[CategorieId], [e].[CategorieNaam], [e].[VolgordeNummer], [e].[WinkelId]
FROM [Categorien] AS [e]
WHERE [e].[CategorieId] = @__get_Item_0"
2019-04-18 15:19:41.583 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@p0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
DELETE FROM [Categorien]
WHERE [CategorieId] = @p0;
SELECT @@ROWCOUNT;"
2019-04-18 15:19:41.587 +02:00 [Information] Executed action method "Services.APIService.CategorieController.DeleteCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 11.1007ms.
2019-04-18 15:19:41.589 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 15:19:41.590 +02:00 [Information] Executed action "Services.APIService.CategorieController.DeleteCategorie (Services)" in 16.9342ms
2019-04-18 15:19:41.591 +02:00 [Information] Request finished in 42.749ms 200 
2019-04-18 15:19:41.596 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:19:41.597 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:19:41.600 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:19:41.601 +02:00 [Information] Request finished in 4.6343ms 204 
2019-04-18 15:19:41.606 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:19:41.607 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:19:41.609 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:19:41.610 +02:00 [Information] Successfully validated the token.
2019-04-18 15:19:41.611 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:19:41.612 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:19:41.616 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:19:41.622 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:19:41.626 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 15:19:41.627 +02:00 [Information] Authorization was successful.
2019-04-18 15:19:41.628 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 15:19:41.629 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0846ms.
2019-04-18 15:19:41.631 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:19:41.634 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 15:19:41.637 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 10.4477ms
2019-04-18 15:19:41.639 +02:00 [Information] Request finished in 32.3212ms 200 application/json; charset=utf-8
2019-04-18 15:20:53.232 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 15:20:53.232 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:20:53.245 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:20:53.246 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:20:53.247 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:20:53.248 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:20:53.250 +02:00 [Information] Request finished in 18.5383ms 204 
2019-04-18 15:20:53.251 +02:00 [Information] Request finished in 19.303ms 204 
2019-04-18 15:20:53.268 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 15:20:53.268 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:20:53.272 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:20:53.273 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:20:53.274 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:20:53.276 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:20:53.277 +02:00 [Information] Successfully validated the token.
2019-04-18 15:20:53.277 +02:00 [Information] Successfully validated the token.
2019-04-18 15:20:53.278 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:20:53.279 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:20:53.280 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:20:53.281 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:20:53.289 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:20:53.291 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:20:53.300 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:20:53.307 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:20:53.308 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 15:20:53.311 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 15:20:53.312 +02:00 [Information] Authorization was successful.
2019-04-18 15:20:53.314 +02:00 [Information] Authorization was successful.
2019-04-18 15:20:53.315 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 15:20:53.316 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 15:20:53.317 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.082ms.
2019-04-18 15:20:53.318 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0036ms.
2019-04-18 15:20:53.320 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:20:53.322 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:20:53.326 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 15:20:53.326 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 15:20:53.328 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 14.5079ms
2019-04-18 15:20:53.331 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 19.6367ms
2019-04-18 15:20:53.332 +02:00 [Information] Request finished in 64.8508ms 200 application/json; charset=utf-8
2019-04-18 15:20:53.334 +02:00 [Information] Request finished in 66.1869ms 200 application/json; charset=utf-8
2019-04-18 15:21:24.663 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:21:24.664 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:21:24.665 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:21:24.666 +02:00 [Information] Request finished in 3.5934ms 204 
2019-04-18 15:21:24.675 +02:00 [Information] Request starting HTTP/1.1 POST http://localhost:5000/sogyolunchapi/categorie application/json;charset=UTF-8 59
2019-04-18 15:21:24.677 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:21:24.678 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:21:24.679 +02:00 [Information] Successfully validated the token.
2019-04-18 15:21:24.680 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:21:24.682 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:21:24.691 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:21:24.698 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:21:24.706 +02:00 [Information] Route matched with "{action = \"AddCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.AddCategorie (Services)"
2019-04-18 15:21:24.709 +02:00 [Information] Authorization was successful.
2019-04-18 15:21:24.710 +02:00 [Information] Executing action method "Services.APIService.CategorieController.AddCategorie (Services)" with arguments (["SogyoLunchApp.Categorie"]) - Validation state: Valid
2019-04-18 15:21:24.714 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
INSERT INTO [Categorien] ([CategorieNaam], [VolgordeNummer], [WinkelId])
VALUES (@p0, @p1, @p2);
SELECT [CategorieId]
FROM [Categorien]
WHERE @@ROWCOUNT = 1 AND [CategorieId] = scope_identity();"
2019-04-18 15:21:24.717 +02:00 [Information] Executed action method "Services.APIService.CategorieController.AddCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 6.0644ms.
2019-04-18 15:21:24.720 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 15:21:24.722 +02:00 [Information] Executed action "Services.APIService.CategorieController.AddCategorie (Services)" in 13.1835ms
2019-04-18 15:21:24.724 +02:00 [Information] Request finished in 48.2769ms 200 
2019-04-18 15:21:24.727 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:21:24.728 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:21:24.730 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:21:24.731 +02:00 [Information] Request finished in 3.3759ms 204 
2019-04-18 15:21:24.734 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:21:24.735 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:21:24.738 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:21:24.740 +02:00 [Information] Successfully validated the token.
2019-04-18 15:21:24.742 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:21:24.743 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:21:24.747 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:21:24.755 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:21:24.761 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 15:21:24.762 +02:00 [Information] Authorization was successful.
2019-04-18 15:21:24.763 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 15:21:24.765 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0901ms.
2019-04-18 15:21:24.766 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:21:24.771 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 15:21:24.774 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 11.7652ms
2019-04-18 15:21:24.775 +02:00 [Information] Request finished in 41.1306ms 200 application/json; charset=utf-8
2019-04-18 15:21:29.029 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie?CategorieId=7  
2019-04-18 15:21:29.030 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:21:29.032 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:21:29.033 +02:00 [Information] Request finished in 4.1777ms 204 
2019-04-18 15:21:29.037 +02:00 [Information] Request starting HTTP/1.1 DELETE http://localhost:5000/sogyolunchapi/categorie?CategorieId=7  
2019-04-18 15:21:29.039 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:21:29.040 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:21:29.041 +02:00 [Information] Successfully validated the token.
2019-04-18 15:21:29.042 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:21:29.044 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:21:29.047 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:21:29.053 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:21:29.057 +02:00 [Information] Route matched with "{action = \"DeleteCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.DeleteCategorie (Services)"
2019-04-18 15:21:29.058 +02:00 [Information] Authorization was successful.
2019-04-18 15:21:29.059 +02:00 [Information] Executing action method "Services.APIService.CategorieController.DeleteCategorie (Services)" with arguments (["7"]) - Validation state: Valid
2019-04-18 15:21:29.062 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[CategorieId], [e].[CategorieNaam], [e].[VolgordeNummer], [e].[WinkelId]
FROM [Categorien] AS [e]
WHERE [e].[CategorieId] = @__get_Item_0"
2019-04-18 15:21:29.067 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@p0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
DELETE FROM [Categorien]
WHERE [CategorieId] = @p0;
SELECT @@ROWCOUNT;"
2019-04-18 15:21:29.071 +02:00 [Information] Executed action method "Services.APIService.CategorieController.DeleteCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 10.4932ms.
2019-04-18 15:21:29.073 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 15:21:29.074 +02:00 [Information] Executed action "Services.APIService.CategorieController.DeleteCategorie (Services)" in 16.2821ms
2019-04-18 15:21:29.076 +02:00 [Information] Request finished in 38.4294ms 200 
2019-04-18 15:21:29.079 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:21:29.081 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:21:29.082 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:21:29.083 +02:00 [Information] Request finished in 4.0386ms 204 
2019-04-18 15:21:29.087 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:21:29.088 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:21:29.090 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:21:29.091 +02:00 [Information] Successfully validated the token.
2019-04-18 15:21:29.092 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:21:29.093 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:21:29.098 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:21:29.106 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:21:29.111 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 15:21:29.113 +02:00 [Information] Authorization was successful.
2019-04-18 15:21:29.114 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 15:21:29.115 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1123ms.
2019-04-18 15:21:29.117 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:21:29.120 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 15:21:29.123 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 10.4401ms
2019-04-18 15:21:29.124 +02:00 [Information] Request finished in 37.3245ms 200 application/json; charset=utf-8
2019-04-18 15:54:27.780 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 15:54:27.804 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:54:27.852 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:54:27.855 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:54:27.865 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:54:27.867 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:54:27.870 +02:00 [Information] Request finished in 127.7024ms 204 
2019-04-18 15:54:27.877 +02:00 [Information] Request finished in 134.2595ms 204 
2019-04-18 15:54:28.021 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:54:28.034 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 15:54:28.067 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:54:28.068 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:54:28.069 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:54:28.071 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:54:28.145 +02:00 [Information] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters) in C:\agent1\_work\109\s\src\Microsoft.IdentityModel.Tokens\Validators.cs:line 274
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters) in C:\agent1\_work\109\s\src\System.IdentityModel.Tokens.Jwt\JwtSecurityTokenHandler.cs:line 1182
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters) in C:\agent1\_work\109\s\src\System.IdentityModel.Tokens.Jwt\JwtSecurityTokenHandler.cs:line 739
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken) in C:\agent1\_work\109\s\src\System.IdentityModel.Tokens.Jwt\JwtSecurityTokenHandler.cs:line 723
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2019-04-18 15:54:28.179 +02:00 [Information] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters) in C:\agent1\_work\109\s\src\Microsoft.IdentityModel.Tokens\Validators.cs:line 274
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters) in C:\agent1\_work\109\s\src\System.IdentityModel.Tokens.Jwt\JwtSecurityTokenHandler.cs:line 1182
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters) in C:\agent1\_work\109\s\src\System.IdentityModel.Tokens.Jwt\JwtSecurityTokenHandler.cs:line 739
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken) in C:\agent1\_work\109\s\src\System.IdentityModel.Tokens.Jwt\JwtSecurityTokenHandler.cs:line 723
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2019-04-18 15:54:28.200 +02:00 [Information] "Bearer" was not authenticated. Failure message: "IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'."
2019-04-18 15:54:28.212 +02:00 [Information] "Bearer" was not authenticated. Failure message: "IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'."
2019-04-18 15:54:28.219 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 15:54:28.222 +02:00 [Information] Authorization failed.
2019-04-18 15:54:28.225 +02:00 [Information] Authorization failed for the request at filter '"Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter"'.
2019-04-18 15:54:28.227 +02:00 [Information] Executing ChallengeResult with authentication schemes ([]).
2019-04-18 15:54:28.236 +02:00 [Information] AuthenticationScheme: "Bearer" was challenged.
2019-04-18 15:54:28.238 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 17.2987ms
2019-04-18 15:54:28.239 +02:00 [Information] Request finished in 205.5722ms 401 text/plain
2019-04-18 15:54:28.254 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 15:54:28.364 +02:00 [Information] Authorization failed.
2019-04-18 15:54:28.372 +02:00 [Information] Authorization failed for the request at filter '"Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter"'.
2019-04-18 15:54:28.382 +02:00 [Information] Executing ChallengeResult with authentication schemes ([]).
2019-04-18 15:54:28.384 +02:00 [Information] AuthenticationScheme: "Bearer" was challenged.
2019-04-18 15:54:28.386 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 22.2683ms
2019-04-18 15:54:28.399 +02:00 [Information] Request finished in 378.0791ms 401 text/plain
2019-04-18 15:54:32.856 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/Auth/ExternalLogin  
2019-04-18 15:54:32.858 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:54:32.860 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:54:32.861 +02:00 [Information] Request finished in 5.2997ms 204 
2019-04-18 15:54:32.866 +02:00 [Information] Request starting HTTP/1.1 POST http://localhost:5000/sogyolunchapi/Auth/ExternalLogin application/json;charset=UTF-8 1303
2019-04-18 15:54:32.867 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:54:32.868 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:54:32.872 +02:00 [Information] Route matched with "{action = \"ExternalLogin\", controller = \"Auth\"}". Executing action "SogyoLunchApp.APIService.AuthController.ExternalLogin (Services)"
2019-04-18 15:54:32.879 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:54:32.902 +02:00 [Information] Executing action method "SogyoLunchApp.APIService.AuthController.ExternalLogin (Services)" with arguments (["SogyoLunchApp.APIService.ExternalLoginModel"]) - Validation state: Valid
2019-04-18 15:54:33.046 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:54:33.194 +02:00 [Information] Executed DbCommand ("73"ms) [Parameters=["@__normalizedEmail_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName]
FROM [AspNetUsers] AS [u]
WHERE [u].[NormalizedEmail] = @__normalizedEmail_0"
2019-04-18 15:54:33.223 +02:00 [Information] Executed DbCommand ("18"ms) [Parameters=["@__loginProvider_0='?' (Size = 450), @__providerKey_1='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [userLogin].[LoginProvider], [userLogin].[ProviderKey], [userLogin].[ProviderDisplayName], [userLogin].[UserId]
FROM [AspNetUserLogins] AS [userLogin]
WHERE ([userLogin].[LoginProvider] = @__loginProvider_0) AND ([userLogin].[ProviderKey] = @__providerKey_1)"
2019-04-18 15:54:33.232 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__userId_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName]
FROM [AspNetUsers] AS [u]
WHERE [u].[Id] = @__userId_0"
2019-04-18 15:54:33.238 +02:00 [Warning] AddLogin for user "3a4a5049-5bff-4683-8042-7e01e6740527" failed because it was already associated with another user.
2019-04-18 15:54:33.249 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__user_Id_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [uc].[Id], [uc].[ClaimType], [uc].[ClaimValue], [uc].[UserId]
FROM [AspNetUserClaims] AS [uc]
WHERE [uc].[UserId] = @__user_Id_0"
2019-04-18 15:54:33.289 +02:00 [Information] Executed DbCommand ("28"ms) [Parameters=["@__userId_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [role].[Name]
FROM [AspNetUserRoles] AS [userRole]
INNER JOIN [AspNetRoles] AS [role] ON [userRole].[RoleId] = [role].[Id]
WHERE [userRole].[UserId] = @__userId_0"
2019-04-18 15:54:33.298 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__normalizedName_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [r].[Id], [r].[ConcurrencyStamp], [r].[Name], [r].[NormalizedName]
FROM [AspNetRoles] AS [r]
WHERE [r].[NormalizedName] = @__normalizedName_0"
2019-04-18 15:54:33.304 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__role_Id_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [rc].[ClaimType], [rc].[ClaimValue]
FROM [AspNetRoleClaims] AS [rc]
WHERE [rc].[RoleId] = @__role_Id_0"
2019-04-18 15:54:33.316 +02:00 [Information] AuthenticationScheme: "Identity.Application" signed in.
2019-04-18 15:54:33.320 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__userId_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [role].[Name]
FROM [AspNetUserRoles] AS [userRole]
INNER JOIN [AspNetRoles] AS [role] ON [userRole].[RoleId] = [role].[Id]
WHERE [userRole].[UserId] = @__userId_0"
2019-04-18 15:54:33.332 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:54:33.340 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__normalizedUserName_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName]
FROM [AspNetUsers] AS [u]
WHERE [u].[NormalizedUserName] = @__normalizedUserName_0"
2019-04-18 15:54:33.444 +02:00 [Information] Executed DbCommand ("92"ms) [Parameters=["@p0='?' (DbType = Guid), @p1='?' (Size = 450), @p2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
DELETE FROM [AspNetUserTokens]
WHERE [UserId] = @p0 AND [LoginProvider] = @p1 AND [Name] = @p2;
SELECT @@ROWCOUNT;"
2019-04-18 15:54:33.477 +02:00 [Information] Executed DbCommand ("26"ms) [Parameters=["@p14='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p15='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTimeOffset), @p6='?' (Size = 256), @p7='?' (Size = 256), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Boolean), @p11='?' (Size = 4000), @p12='?' (DbType = Boolean), @p13='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [LockoutEnabled] = @p4, [LockoutEnd] = @p5, [NormalizedEmail] = @p6, [NormalizedUserName] = @p7, [PasswordHash] = @p8, [PhoneNumber] = @p9, [PhoneNumberConfirmed] = @p10, [SecurityStamp] = @p11, [TwoFactorEnabled] = @p12, [UserName] = @p13
WHERE [Id] = @p14 AND [ConcurrencyStamp] = @p15;
SELECT @@ROWCOUNT;"
2019-04-18 15:54:33.488 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:54:33.497 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__normalizedUserName_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName]
FROM [AspNetUsers] AS [u]
WHERE [u].[NormalizedUserName] = @__normalizedUserName_0"
2019-04-18 15:54:33.512 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@p0='?' (DbType = Guid), @p1='?' (Size = 450), @p2='?' (Size = 450), @p3='?' (Size = 4000)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
INSERT INTO [AspNetUserTokens] ([UserId], [LoginProvider], [Name], [Value])
VALUES (@p0, @p1, @p2, @p3);"
2019-04-18 15:54:33.519 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@p14='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p15='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTimeOffset), @p6='?' (Size = 256), @p7='?' (Size = 256), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Boolean), @p11='?' (Size = 4000), @p12='?' (DbType = Boolean), @p13='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [LockoutEnabled] = @p4, [LockoutEnd] = @p5, [NormalizedEmail] = @p6, [NormalizedUserName] = @p7, [PasswordHash] = @p8, [PhoneNumber] = @p9, [PhoneNumberConfirmed] = @p10, [SecurityStamp] = @p11, [TwoFactorEnabled] = @p12, [UserName] = @p13
WHERE [Id] = @p14 AND [ConcurrencyStamp] = @p15;
SELECT @@ROWCOUNT;"
2019-04-18 15:54:33.526 +02:00 [Information] Executed action method "SogyoLunchApp.APIService.AuthController.ExternalLogin (Services)", returned result "Microsoft.AspNetCore.Mvc.OkObjectResult" in 622.9563ms.
2019-04-18 15:54:33.530 +02:00 [Information] Executing ObjectResult, writing value of type '"<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"'.
2019-04-18 15:54:33.534 +02:00 [Information] Executed action "SogyoLunchApp.APIService.AuthController.ExternalLogin (Services)" in 661.1083ms
2019-04-18 15:54:33.536 +02:00 [Information] Request finished in 670.7372ms 200 application/json; charset=utf-8
2019-04-18 15:54:33.730 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 15:54:33.732 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:54:33.737 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:54:33.780 +02:00 [Information] Request finished in 49.9844ms 204 
2019-04-18 15:54:33.785 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 15:54:33.785 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:54:33.787 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:54:33.789 +02:00 [Information] Successfully validated the token.
2019-04-18 15:54:33.793 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:54:33.800 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:54:33.815 +02:00 [Information] Executed DbCommand ("12"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:54:33.837 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:54:33.848 +02:00 [Information] Route matched with "{action = \"getBezorgdagen\", controller = \"Bezorgdag\"}". Executing action "Services.APIService.BezorgdagController.getBezorgdagen (Services)"
2019-04-18 15:54:33.850 +02:00 [Information] Authorization was successful.
2019-04-18 15:54:33.851 +02:00 [Information] Executing action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)" with arguments (["40"]) - Validation state: Valid
2019-04-18 15:54:33.872 +02:00 [Information] Executed DbCommand ("12"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:33.885 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:33.900 +02:00 [Information] Executed DbCommand ("11"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:33.907 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:33.922 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:33.934 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:33.938 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:33.948 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:33.952 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:33.956 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:33.967 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:33.971 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:33.980 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:33.984 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:33.987 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:33.995 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:34.000 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:34.005 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:34.015 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:34.020 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:34.029 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:34.034 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:34.038 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:34.047 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:34.053 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:34.060 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:34.067 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:34.072 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:34.079 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:34.085 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:34.090 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:34.095 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:34.101 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:34.105 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:34.111 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:34.116 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:34.122 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:34.126 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:34.131 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:34.135 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:34.140 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:34.144 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:34.149 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:34.154 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:34.159 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:34.164 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:34.170 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:34.174 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:34.177 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:34.180 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:34.183 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:34.186 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:34.190 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:34.193 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:34.196 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:34.201 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:34.204 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:34.207 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:34.211 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:34.215 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:34.219 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:34.222 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:34.225 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:34.229 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:34.233 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:34.237 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:34.240 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:34.244 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:34.249 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:34.254 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:34.261 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:34.266 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:34.272 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:34.283 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:34.289 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:34.297 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:34.303 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:34.310 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:34.316 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:34.323 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:34.326 +02:00 [Information] Executed action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 472.5195ms.
2019-04-18 15:54:34.327 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[System.DateTime, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"'.
2019-04-18 15:54:34.329 +02:00 [Information] Executed action "Services.APIService.BezorgdagController.getBezorgdagen (Services)" in 479.7719ms
2019-04-18 15:54:34.331 +02:00 [Information] Request finished in 546.0778ms 200 application/json; charset=utf-8
2019-04-18 15:54:34.379 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 15:54:34.379 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 15:54:34.379 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 15:54:34.379 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 15:54:34.397 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:54:34.398 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:54:34.399 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:54:34.400 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:54:34.401 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:54:34.404 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:54:34.406 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:54:34.409 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:54:34.414 +02:00 [Information] Request finished in 34.9394ms 204 
2019-04-18 15:54:34.420 +02:00 [Information] Request finished in 40.434ms 204 
2019-04-18 15:54:34.421 +02:00 [Information] Request finished in 42.154ms 204 
2019-04-18 15:54:34.428 +02:00 [Information] Request finished in 49.0835ms 204 
2019-04-18 15:54:34.437 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 15:54:34.437 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 15:54:34.437 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 15:54:34.437 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 15:54:34.448 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:54:34.450 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:54:34.451 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:54:34.452 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:54:34.453 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:54:34.454 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:54:34.456 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:54:34.457 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:54:34.459 +02:00 [Information] Successfully validated the token.
2019-04-18 15:54:34.460 +02:00 [Information] Successfully validated the token.
2019-04-18 15:54:34.461 +02:00 [Information] Successfully validated the token.
2019-04-18 15:54:34.462 +02:00 [Information] Successfully validated the token.
2019-04-18 15:54:34.463 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:54:34.463 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:54:34.464 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:54:34.465 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:54:34.466 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:54:34.467 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:54:34.468 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:54:34.469 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:54:34.483 +02:00 [Information] Executed DbCommand ("12"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:54:34.489 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:54:34.492 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:54:34.496 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:54:34.503 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:54:34.506 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:54:34.511 +02:00 [Information] Route matched with "{action = \"GetProductenbijDatum\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenbijDatum (Services)"
2019-04-18 15:54:34.516 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:54:34.517 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:54:34.518 +02:00 [Information] Route matched with "{action = \"GetDeadlinePerDatum\", controller = \"Deadline\"}". Executing action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)"
2019-04-18 15:54:34.518 +02:00 [Information] Authorization was successful.
2019-04-18 15:54:34.522 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 15:54:34.526 +02:00 [Information] Route matched with "{action = \"GetWinkelBijDatum\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)"
2019-04-18 15:54:34.527 +02:00 [Information] Authorization was successful.
2019-04-18 15:54:34.528 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenbijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:54:34.530 +02:00 [Information] Authorization was successful.
2019-04-18 15:54:34.531 +02:00 [Information] Authorization was successful.
2019-04-18 15:54:34.532 +02:00 [Information] Executing action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:54:34.535 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 15:54:34.535 +02:00 [Information] Executing action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 15:54:34.536 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:34.538 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:34.542 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 2.3776ms.
2019-04-18 15:54:34.548 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 15:54:34.550 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:54:34.720 +02:00 [Information] Executed DbCommand ("172"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:34.722 +02:00 [Information] Executed DbCommand ("171"ms) [Parameters=["@__bezorgdag_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [x].[Dag], [x].[BestelDeadlineDag], [x].[BestelDeadlineTijd], [x].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [x]
WHERE [x].[Dag] = @__bezorgdag_0"
2019-04-18 15:54:34.723 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 15:54:34.732 +02:00 [Information] Executed action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 194.731ms.
2019-04-18 15:54:34.736 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 15:54:34.737 +02:00 [Information] Executed action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 194.2392ms.
2019-04-18 15:54:34.738 +02:00 [Information] Executing JsonResult, writing value of type '"System.DateTime"'.
2019-04-18 15:54:34.740 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenbijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 206.8777ms.
2019-04-18 15:54:34.742 +02:00 [Information] Executing JsonResult, writing value of type '"SogyoLunchApp.Winkel"'.
2019-04-18 15:54:34.744 +02:00 [Information] Executed action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" in 216.2364ms
2019-04-18 15:54:34.745 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:54:34.747 +02:00 [Information] Executed action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" in 216.1235ms
2019-04-18 15:54:34.748 +02:00 [Information] Request finished in 310.6963ms 200 application/json; charset=utf-8
2019-04-18 15:54:34.750 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenbijDatum (Services)" in 231.032ms
2019-04-18 15:54:34.751 +02:00 [Information] Request finished in 314.0492ms 200 application/json; charset=utf-8
2019-04-18 15:54:34.754 +02:00 [Information] Request finished in 316.1795ms 200 application/json; charset=utf-8
2019-04-18 15:54:34.758 +02:00 [Information] Executed DbCommand ("30"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 15:54:34.779 +02:00 [Information] Executed DbCommand ("18"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x.ProductenPerBestellingen].[BestellingId], [x.ProductenPerBestellingen].[ProductId], [x.ProductenPerBestellingen].[Aantal], [x.ProductenPerBestellingen].[Notitie], [x.ProductenPerBestellingen].[Prijs], [p.Product].[ProductId], [p.Product].[CategorieId], [p.Product].[Naam], [p.Product].[Prijs], [p.Product].[WinkelId]
FROM [ProductenPerBestellingen] AS [x.ProductenPerBestellingen]
INNER JOIN [Producten] AS [p.Product] ON [x.ProductenPerBestellingen].[ProductId] = [p.Product].[ProductId]
INNER JOIN (
    SELECT [x0].[BestellingId]
    FROM [Bestellingen] AS [x0]
    WHERE (CONVERT(date, [x0].[Bezorgdatum]) = @__date_Date_0) AND ([x0].[GebruikerId] = @__gebruikerId_1)
) AS [t] ON [x.ProductenPerBestellingen].[BestellingId] = [t].[BestellingId]
ORDER BY [t].[BestellingId]"
2019-04-18 15:54:34.785 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 254.9809ms
2019-04-18 15:54:34.786 +02:00 [Information] Request finished in 349.0145ms 200 application/json; charset=utf-8
2019-04-18 15:55:06.268 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 15:55:06.268 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:55:06.269 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:55:06.270 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:55:06.271 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:55:06.272 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:55:06.273 +02:00 [Information] Request finished in 11.6099ms 204 
2019-04-18 15:55:06.275 +02:00 [Information] Request finished in 6.1721ms 204 
2019-04-18 15:55:06.285 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 15:55:06.289 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:55:06.289 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:55:06.293 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:55:06.292 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:55:06.294 +02:00 [Information] Successfully validated the token.
2019-04-18 15:55:06.295 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:55:06.297 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:55:06.298 +02:00 [Information] Successfully validated the token.
2019-04-18 15:55:06.299 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:55:06.299 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:55:06.300 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:55:06.305 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:55:06.312 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:55:06.325 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:55:06.329 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:55:06.347 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 15:55:06.348 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 15:55:06.350 +02:00 [Information] Authorization was successful.
2019-04-18 15:55:06.351 +02:00 [Information] Authorization was successful.
2019-04-18 15:55:06.352 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 15:55:06.353 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 15:55:06.354 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0048ms.
2019-04-18 15:55:06.357 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 1.4286ms.
2019-04-18 15:55:06.358 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:55:06.360 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:55:06.366 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 15:55:06.369 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 18.9461ms
2019-04-18 15:55:06.369 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 15:55:06.370 +02:00 [Information] Request finished in 84.1824ms 200 application/json; charset=utf-8
2019-04-18 15:55:06.372 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 21.4864ms
2019-04-18 15:55:06.375 +02:00 [Information] Request finished in 86.5447ms 200 application/json; charset=utf-8
2019-04-18 15:55:25.145 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie?CategorieId=6  
2019-04-18 15:55:25.147 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:55:25.149 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:55:25.150 +02:00 [Information] Request finished in 4.3901ms 204 
2019-04-18 15:55:25.162 +02:00 [Information] Request starting HTTP/1.1 DELETE http://localhost:5000/sogyolunchapi/categorie?CategorieId=6  
2019-04-18 15:55:25.163 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:55:25.164 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:55:25.165 +02:00 [Information] Successfully validated the token.
2019-04-18 15:55:25.165 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:55:25.167 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:55:25.172 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:55:25.183 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:55:25.187 +02:00 [Information] Route matched with "{action = \"DeleteCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.DeleteCategorie (Services)"
2019-04-18 15:55:25.188 +02:00 [Information] Authorization was successful.
2019-04-18 15:55:25.189 +02:00 [Information] Executing action method "Services.APIService.CategorieController.DeleteCategorie (Services)" with arguments (["6"]) - Validation state: Valid
2019-04-18 15:55:25.197 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[CategorieId], [e].[CategorieNaam], [e].[VolgordeNummer], [e].[WinkelId]
FROM [Categorien] AS [e]
WHERE [e].[CategorieId] = @__get_Item_0"
2019-04-18 15:55:25.203 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@p0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
DELETE FROM [Categorien]
WHERE [CategorieId] = @p0;
SELECT @@ROWCOUNT;"
2019-04-18 15:55:25.212 +02:00 [Information] Executed action method "Services.APIService.CategorieController.DeleteCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 16.205ms.
2019-04-18 15:55:25.215 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 15:55:25.216 +02:00 [Information] Executed action "Services.APIService.CategorieController.DeleteCategorie (Services)" in 27.487ms
2019-04-18 15:55:25.217 +02:00 [Information] Request finished in 55.4016ms 200 
2019-04-18 15:55:25.226 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:55:25.228 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:55:25.230 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:55:25.231 +02:00 [Information] Request finished in 5.4348ms 204 
2019-04-18 15:55:25.235 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:55:25.236 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:55:25.237 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:55:25.238 +02:00 [Information] Successfully validated the token.
2019-04-18 15:55:25.239 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:55:25.242 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:55:25.249 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:55:25.255 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:55:25.263 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 15:55:25.264 +02:00 [Information] Authorization was successful.
2019-04-18 15:55:25.265 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 15:55:25.266 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0919ms.
2019-04-18 15:55:25.268 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:55:25.272 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 15:55:25.277 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 12.6875ms
2019-04-18 15:55:25.278 +02:00 [Information] Request finished in 43.7429ms 200 application/json; charset=utf-8
2019-04-18 15:57:56.826 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 15:57:56.830 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:57:56.843 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:57:56.850 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:57:56.851 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:57:56.853 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:57:56.854 +02:00 [Information] Request finished in 24.6125ms 204 
2019-04-18 15:57:56.856 +02:00 [Information] Request finished in 29.5554ms 204 
2019-04-18 15:57:56.876 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 15:57:56.876 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 15:57:56.877 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:57:56.878 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 15:57:56.879 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:57:56.880 +02:00 [Information] CORS policy execution successful.
2019-04-18 15:57:56.882 +02:00 [Information] Successfully validated the token.
2019-04-18 15:57:56.883 +02:00 [Information] Successfully validated the token.
2019-04-18 15:57:56.884 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:57:56.885 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 15:57:56.887 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:57:56.888 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 15:57:56.976 +02:00 [Information] Executed DbCommand ("82"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:57:56.976 +02:00 [Information] Executed DbCommand ("64"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 15:57:57.080 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:57:57.080 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 15:57:57.085 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 15:57:57.088 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 15:57:57.088 +02:00 [Information] Authorization was successful.
2019-04-18 15:57:57.090 +02:00 [Information] Authorization was successful.
2019-04-18 15:57:57.091 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 15:57:57.092 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 15:57:57.094 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0072ms.
2019-04-18 15:57:57.095 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0965ms.
2019-04-18 15:57:57.097 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:57:57.099 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 15:57:57.103 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 15:57:57.104 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 15:57:57.105 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 16.9738ms
2019-04-18 15:57:57.110 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 19.5591ms
2019-04-18 15:57:57.111 +02:00 [Information] Request finished in 234.589ms 200 application/json; charset=utf-8
2019-04-18 15:57:57.112 +02:00 [Information] Request finished in 236.1341ms 200 application/json; charset=utf-8
2019-04-18 16:00:38.932 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:00:38.932 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:00:38.947 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:00:38.948 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:00:38.949 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:00:38.950 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:00:38.951 +02:00 [Information] Request finished in 19.2973ms 204 
2019-04-18 16:00:38.952 +02:00 [Information] Request finished in 20.3469ms 204 
2019-04-18 16:00:39.207 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:00:39.207 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:00:39.223 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:00:39.225 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:00:39.227 +02:00 [Information] Successfully validated the token.
2019-04-18 16:00:39.227 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:00:39.227 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:00:39.229 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:00:39.231 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:00:39.234 +02:00 [Information] Successfully validated the token.
2019-04-18 16:00:39.277 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:00:39.285 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:00:39.287 +02:00 [Information] Executed DbCommand ("53"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:00:39.303 +02:00 [Information] Executed DbCommand ("15"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:00:39.309 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:00:39.360 +02:00 [Information] Executed DbCommand ("45"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:00:39.390 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:00:39.402 +02:00 [Information] Authorization was successful.
2019-04-18 16:00:39.403 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:00:39.403 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 16:00:39.408 +02:00 [Information] Authorization was successful.
2019-04-18 16:00:39.408 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0072ms.
2019-04-18 16:00:39.409 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:00:39.411 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:00:39.414 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1266ms.
2019-04-18 16:00:39.419 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:00:39.453 +02:00 [Information] Executed DbCommand ("36"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 16:00:39.456 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 54.0031ms
2019-04-18 16:00:39.457 +02:00 [Information] Request finished in 250.2302ms 200 application/json; charset=utf-8
2019-04-18 16:00:39.458 +02:00 [Information] Executed DbCommand ("37"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:00:39.462 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 54.948ms
2019-04-18 16:00:39.464 +02:00 [Information] Request finished in 256.3472ms 200 application/json; charset=utf-8
2019-04-18 16:00:41.256 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 16:00:41.257 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:00:41.259 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:00:41.260 +02:00 [Information] Request finished in 4.3965ms 204 
2019-04-18 16:00:41.265 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 16:00:41.269 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:00:41.270 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:00:41.273 +02:00 [Information] Successfully validated the token.
2019-04-18 16:00:41.275 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:00:41.277 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:00:41.287 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:00:41.294 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:00:41.297 +02:00 [Information] Route matched with "{action = \"getBezorgdagen\", controller = \"Bezorgdag\"}". Executing action "Services.APIService.BezorgdagController.getBezorgdagen (Services)"
2019-04-18 16:00:41.304 +02:00 [Information] Authorization was successful.
2019-04-18 16:00:41.305 +02:00 [Information] Executing action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)" with arguments (["40"]) - Validation state: Valid
2019-04-18 16:00:41.309 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.314 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.320 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.324 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.328 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.336 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.342 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.346 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.354 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.359 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.363 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.371 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.375 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.380 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.388 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.393 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.403 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.408 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.412 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.422 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.427 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.435 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.439 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.444 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.452 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.457 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.460 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.463 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.469 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.473 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.476 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.479 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.485 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.488 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.492 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.495 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.501 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.504 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.506 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.508 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.510 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.513 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.515 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.517 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.520 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.523 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.525 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.527 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.529 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.531 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.534 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.537 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.540 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.542 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.544 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.547 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.549 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.552 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.555 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.557 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.560 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.563 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.566 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.569 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.571 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.574 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.576 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.579 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.584 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.588 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.592 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.595 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.600 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.604 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.608 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.611 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.617 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.621 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.634 +02:00 [Information] Executed DbCommand ("10"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.638 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.640 +02:00 [Information] Executed action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 332.7049ms.
2019-04-18 16:00:41.641 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[System.DateTime, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"'.
2019-04-18 16:00:41.642 +02:00 [Information] Executed action "Services.APIService.BezorgdagController.getBezorgdagen (Services)" in 338.1276ms
2019-04-18 16:00:41.643 +02:00 [Information] Request finished in 377.9736ms 200 application/json; charset=utf-8
2019-04-18 16:00:41.694 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 16:00:41.711 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 16:00:41.713 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 16:00:41.722 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 16:00:41.730 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:00:41.730 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:00:41.731 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:00:41.731 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:00:41.732 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:00:41.734 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:00:41.734 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:00:41.735 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:00:41.736 +02:00 [Information] Request finished in 42.2126ms 204 
2019-04-18 16:00:41.736 +02:00 [Information] Request finished in 23.8436ms 204 
2019-04-18 16:00:41.737 +02:00 [Information] Request finished in 26.0266ms 204 
2019-04-18 16:00:41.738 +02:00 [Information] Request finished in 15.9222ms 204 
2019-04-18 16:00:41.745 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 16:00:41.746 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 16:00:41.746 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 16:00:41.746 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 16:00:41.747 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:00:41.747 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:00:41.748 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:00:41.749 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:00:41.750 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:00:41.751 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:00:41.752 +02:00 [Information] Successfully validated the token.
2019-04-18 16:00:41.753 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:00:41.753 +02:00 [Information] Successfully validated the token.
2019-04-18 16:00:41.754 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:00:41.755 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:00:41.755 +02:00 [Information] Successfully validated the token.
2019-04-18 16:00:41.756 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:00:41.756 +02:00 [Information] Successfully validated the token.
2019-04-18 16:00:41.757 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:00:41.758 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:00:41.758 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:00:41.759 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:00:41.759 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:00:41.769 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:00:41.769 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:00:41.769 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:00:41.782 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:00:41.782 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:00:41.789 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:00:41.791 +02:00 [Information] Route matched with "{action = \"GetDeadlinePerDatum\", controller = \"Deadline\"}". Executing action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)"
2019-04-18 16:00:41.796 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:00:41.797 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 16:00:41.799 +02:00 [Information] Authorization was successful.
2019-04-18 16:00:41.801 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:00:41.804 +02:00 [Information] Authorization was successful.
2019-04-18 16:00:41.804 +02:00 [Information] Executing action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 16:00:41.805 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:00:41.807 +02:00 [Information] Route matched with "{action = \"GetWinkelBijDatum\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)"
2019-04-18 16:00:41.807 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 16:00:41.810 +02:00 [Information] Route matched with "{action = \"GetProductenbijDatum\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenbijDatum (Services)"
2019-04-18 16:00:41.810 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.811 +02:00 [Information] Authorization was successful.
2019-04-18 16:00:41.813 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.6962ms.
2019-04-18 16:00:41.813 +02:00 [Information] Authorization was successful.
2019-04-18 16:00:41.816 +02:00 [Information] Executing action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 16:00:41.817 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:00:41.818 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenbijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 16:00:41.820 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__bezorgdag_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [x].[Dag], [x].[BestelDeadlineDag], [x].[BestelDeadlineTijd], [x].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [x]
WHERE [x].[Dag] = @__bezorgdag_0"
2019-04-18 16:00:41.821 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.822 +02:00 [Information] Executed action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 13.7369ms.
2019-04-18 16:00:41.824 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:00:41.827 +02:00 [Information] Executing JsonResult, writing value of type '"System.DateTime"'.
2019-04-18 16:00:41.830 +02:00 [Information] Executed action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" in 31.4478ms
2019-04-18 16:00:41.832 +02:00 [Information] Request finished in 85.5311ms 200 application/json; charset=utf-8
2019-04-18 16:00:41.837 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.842 +02:00 [Information] Executed DbCommand ("15"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:00:41.844 +02:00 [Information] Executed DbCommand ("19"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 16:00:41.844 +02:00 [Information] Executed action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 23.8452ms.
2019-04-18 16:00:41.847 +02:00 [Information] Executing JsonResult, writing value of type '"SogyoLunchApp.Winkel"'.
2019-04-18 16:00:41.848 +02:00 [Information] Executed action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" in 37.2482ms
2019-04-18 16:00:41.851 +02:00 [Information] Request finished in 105.7109ms 200 application/json; charset=utf-8
2019-04-18 16:00:41.854 +02:00 [Information] Executed DbCommand ("13"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 16:00:41.857 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenbijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 33.517ms.
2019-04-18 16:00:41.858 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:00:41.860 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenbijDatum (Services)" in 46.679ms
2019-04-18 16:00:41.861 +02:00 [Information] Request finished in 115.0261ms 200 application/json; charset=utf-8
2019-04-18 16:00:41.875 +02:00 [Information] Executed DbCommand ("29"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x.ProductenPerBestellingen].[BestellingId], [x.ProductenPerBestellingen].[ProductId], [x.ProductenPerBestellingen].[Aantal], [x.ProductenPerBestellingen].[Notitie], [x.ProductenPerBestellingen].[Prijs], [p.Product].[ProductId], [p.Product].[CategorieId], [p.Product].[Naam], [p.Product].[Prijs], [p.Product].[WinkelId]
FROM [ProductenPerBestellingen] AS [x.ProductenPerBestellingen]
INNER JOIN [Producten] AS [p.Product] ON [x.ProductenPerBestellingen].[ProductId] = [p.Product].[ProductId]
INNER JOIN (
    SELECT [x0].[BestellingId]
    FROM [Bestellingen] AS [x0]
    WHERE (CONVERT(date, [x0].[Bezorgdatum]) = @__date_Date_0) AND ([x0].[GebruikerId] = @__gebruikerId_1)
) AS [t] ON [x.ProductenPerBestellingen].[BestellingId] = [t].[BestellingId]
ORDER BY [t].[BestellingId]"
2019-04-18 16:00:41.879 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 75.2271ms
2019-04-18 16:00:41.880 +02:00 [Information] Request finished in 134.6321ms 200 application/json; charset=utf-8
2019-04-18 16:01:14.993 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:01:14.995 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:01:14.996 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:01:14.996 +02:00 [Information] Request finished in 3.7066ms 204 
2019-04-18 16:01:15.011 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkeluitzonderingenperbezorgdag  
2019-04-18 16:01:15.013 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:01:15.019 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:01:15.019 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:01:15.021 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:01:15.022 +02:00 [Information] Request finished in 10.9107ms 204 
2019-04-18 16:01:15.025 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:01:15.027 +02:00 [Information] Successfully validated the token.
2019-04-18 16:01:15.028 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:01:15.028 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkeluitzonderingenperbezorgdag  
2019-04-18 16:01:15.030 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:01:15.030 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:01:15.036 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:01:15.039 +02:00 [Information] Successfully validated the token.
2019-04-18 16:01:15.039 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:01:15.039 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:01:15.050 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:01:15.053 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:01:15.054 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:01:15.056 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:01:15.060 +02:00 [Information] Authorization was successful.
2019-04-18 16:01:15.062 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:01:15.062 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 16:01:15.064 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0057ms.
2019-04-18 16:01:15.066 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:01:15.068 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 16:01:15.070 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 9.4227ms
2019-04-18 16:01:15.071 +02:00 [Information] Request finished in 51.7318ms 200 application/json; charset=utf-8
2019-04-18 16:01:15.081 +02:00 [Information] Route matched with "{action = \"GetAlleWinkelUitzonderingenPerBezorgdag\", controller = \"WinkelUitzonderingenPerBezorgdag\"}". Executing action "Services.APIService.WinkelUitzonderingenPerBezorgdagController.GetAlleWinkelUitzonderingenPerBezorgdag (Services)"
2019-04-18 16:01:15.082 +02:00 [Information] Authorization was successful.
2019-04-18 16:01:15.085 +02:00 [Information] Executing action method "Services.APIService.WinkelUitzonderingenPerBezorgdagController.GetAlleWinkelUitzonderingenPerBezorgdag (Services)" - Validation state: Valid
2019-04-18 16:01:15.104 +02:00 [Information] Executed action method "Services.APIService.WinkelUitzonderingenPerBezorgdagController.GetAlleWinkelUitzonderingenPerBezorgdag (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 18.2527ms.
2019-04-18 16:01:15.106 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.WinkelUitzonderingenPerBezorgdag, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:01:15.178 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[Date], [x].[BestelDeadline], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
LEFT JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]
WHERE CONVERT(date, [x].[Date]) >= GETDATE()"
2019-04-18 16:01:15.195 +02:00 [Information] Executed action "Services.APIService.WinkelUitzonderingenPerBezorgdagController.GetAlleWinkelUitzonderingenPerBezorgdag (Services)" in 112.3177ms
2019-04-18 16:01:15.197 +02:00 [Information] Request finished in 168.2055ms 200 application/json; charset=utf-8
2019-04-18 16:01:19.006 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:01:19.010 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:01:19.014 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:01:19.016 +02:00 [Information] Request finished in 10.8786ms 204 
2019-04-18 16:01:19.026 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:01:19.028 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:01:19.029 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:01:19.033 +02:00 [Information] Successfully validated the token.
2019-04-18 16:01:19.034 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:01:19.036 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:01:19.041 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:01:19.055 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:01:19.062 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:01:19.063 +02:00 [Information] Authorization was successful.
2019-04-18 16:01:19.063 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 16:01:19.068 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0102ms.
2019-04-18 16:01:19.070 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:01:19.072 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 16:01:19.073 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 10.9734ms
2019-04-18 16:01:19.075 +02:00 [Information] Request finished in 48.6153ms 200 application/json; charset=utf-8
2019-04-18 16:01:19.125 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/winkel/Albert Heijn Bezorgservice  
2019-04-18 16:01:19.126 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:01:19.127 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:01:19.128 +02:00 [Information] Request finished in 3.7356ms 204 
2019-04-18 16:01:19.135 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/winkel/Albert Heijn Bezorgservice  
2019-04-18 16:01:19.136 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:01:19.138 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:01:19.140 +02:00 [Information] Successfully validated the token.
2019-04-18 16:01:19.140 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:01:19.143 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:01:19.154 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:01:19.162 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:01:19.173 +02:00 [Information] Route matched with "{action = \"GetProductenPerWinkel\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenPerWinkel (Services)"
2019-04-18 16:01:19.174 +02:00 [Information] Authorization was successful.
2019-04-18 16:01:19.176 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenPerWinkel (Services)" with arguments (["Albert Heijn Bezorgservice"]) - Validation state: Valid
2019-04-18 16:01:19.208 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__name_0='?' (Size = 4000)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]
WHERE [w].[Winkelnaam] = @__name_0"
2019-04-18 16:01:19.211 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 16:01:19.213 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenPerWinkel (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 35.4186ms.
2019-04-18 16:01:19.219 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:01:19.220 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenPerWinkel (Services)" in 46.478ms
2019-04-18 16:01:19.222 +02:00 [Information] Request finished in 86.8569ms 200 application/json; charset=utf-8
2019-04-18 16:01:21.248 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 16:01:21.259 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:01:21.260 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:01:21.260 +02:00 [Information] Request finished in 12.1897ms 204 
2019-04-18 16:01:21.264 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 16:01:21.265 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:01:21.265 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:01:21.267 +02:00 [Information] Successfully validated the token.
2019-04-18 16:01:21.268 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:01:21.270 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:01:21.275 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:01:21.280 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:01:21.289 +02:00 [Information] Route matched with "{action = \"getBezorgdagen\", controller = \"Bezorgdag\"}". Executing action "Services.APIService.BezorgdagController.getBezorgdagen (Services)"
2019-04-18 16:01:21.293 +02:00 [Information] Authorization was successful.
2019-04-18 16:01:21.293 +02:00 [Information] Executing action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)" with arguments (["40"]) - Validation state: Valid
2019-04-18 16:01:21.297 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.300 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.307 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.310 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.312 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.314 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.316 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.323 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.325 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.328 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.330 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.332 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.336 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.339 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.341 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.344 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.346 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.348 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.350 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.355 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.358 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.360 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.362 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.365 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.366 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.370 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.373 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.375 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.377 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.379 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.381 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.383 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.387 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.390 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.392 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.394 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.396 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.398 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.400 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.404 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.407 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.409 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.411 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.413 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.415 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.417 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.421 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.424 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.426 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.428 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.430 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.432 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.434 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.438 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.441 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.443 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.445 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.448 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.451 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.457 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.460 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.463 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.466 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.470 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.474 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.477 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.480 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.483 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.487 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.490 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.492 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.494 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.496 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.498 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.500 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.504 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.507 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.509 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.511 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.513 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.515 +02:00 [Information] Executed action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 219.7571ms.
2019-04-18 16:01:21.516 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[System.DateTime, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"'.
2019-04-18 16:01:21.517 +02:00 [Information] Executed action "Services.APIService.BezorgdagController.getBezorgdagen (Services)" in 224.1052ms
2019-04-18 16:01:21.520 +02:00 [Information] Request finished in 255.4171ms 200 application/json; charset=utf-8
2019-04-18 16:01:21.538 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 16:01:21.538 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 16:01:21.539 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 16:01:21.545 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 16:01:21.546 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:01:21.548 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:01:21.548 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 16:01:21.548 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:01:21.549 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 16:01:21.549 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:01:21.550 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:01:21.551 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:01:21.553 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:01:21.554 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:01:21.556 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:01:21.557 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:01:21.558 +02:00 [Information] Request finished in 20.48ms 204 
2019-04-18 16:01:21.561 +02:00 [Information] Request finished in 15.6885ms 204 
2019-04-18 16:01:21.564 +02:00 [Information] Request finished in 15.65ms 204 
2019-04-18 16:01:21.591 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 16:01:21.592 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:01:21.593 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 16:01:21.595 +02:00 [Information] Request finished in 56.0802ms 204 
2019-04-18 16:01:21.595 +02:00 [Information] Request finished in 57.8114ms 204 
2019-04-18 16:01:21.596 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 16:01:21.597 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:01:21.598 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:01:21.599 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:01:21.600 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 16:01:21.600 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 16:01:21.601 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:01:21.603 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:01:21.604 +02:00 [Information] Request finished in 13.1282ms 204 
2019-04-18 16:01:21.605 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:01:21.607 +02:00 [Information] Successfully validated the token.
2019-04-18 16:01:21.608 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:01:21.609 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:01:21.609 +02:00 [Information] Request finished in 60.7096ms 204 
2019-04-18 16:01:21.610 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 16:01:21.611 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:01:21.612 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:01:21.612 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:01:21.613 +02:00 [Information] Request finished in 16.6618ms 204 
2019-04-18 16:01:21.613 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 16:01:21.614 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:01:21.615 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:01:21.616 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:01:21.616 +02:00 [Information] Successfully validated the token.
2019-04-18 16:01:21.617 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 16:01:21.617 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:01:21.618 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:01:21.621 +02:00 [Information] Successfully validated the token.
2019-04-18 16:01:21.626 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:01:21.627 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:01:21.627 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:01:21.627 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:01:21.628 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:01:21.629 +02:00 [Information] Successfully validated the token.
2019-04-18 16:01:21.630 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:01:21.630 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:01:21.632 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:01:21.633 +02:00 [Information] Successfully validated the token.
2019-04-18 16:01:21.633 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:01:21.637 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:01:21.640 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:01:21.641 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:01:21.641 +02:00 [Information] Successfully validated the token.
2019-04-18 16:01:21.643 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:01:21.643 +02:00 [Information] Route matched with "{action = \"GetWinkelBijDatum\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)"
2019-04-18 16:01:21.644 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:01:21.648 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:01:21.648 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:01:21.649 +02:00 [Information] Authorization was successful.
2019-04-18 16:01:21.650 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:01:21.650 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:01:21.650 +02:00 [Information] Executing action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 16:01:21.653 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 16:01:21.654 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:01:21.659 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 16:01:21.659 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:01:21.660 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.660 +02:00 [Information] Authorization was successful.
2019-04-18 16:01:21.664 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:01:21.666 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:01:21.667 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 16:01:21.672 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.673 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:01:21.675 +02:00 [Information] Executed action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 15.9351ms.
2019-04-18 16:01:21.676 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:01:21.677 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.2708ms.
2019-04-18 16:01:21.679 +02:00 [Information] Route matched with "{action = \"GetProductenbijDatum\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenbijDatum (Services)"
2019-04-18 16:01:21.682 +02:00 [Information] Authorization was successful.
2019-04-18 16:01:21.683 +02:00 [Information] Executing JsonResult, writing value of type '"SogyoLunchApp.Winkel"'.
2019-04-18 16:01:21.683 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:01:21.684 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:01:21.686 +02:00 [Information] Authorization was successful.
2019-04-18 16:01:21.689 +02:00 [Information] Route matched with "{action = \"GetProductenbijDatum\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenbijDatum (Services)"
2019-04-18 16:01:21.689 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 16:01:21.690 +02:00 [Information] Executed action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" in 41.3452ms
2019-04-18 16:01:21.692 +02:00 [Information] Route matched with "{action = \"GetWinkelBijDatum\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)"
2019-04-18 16:01:21.693 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenbijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 16:01:21.694 +02:00 [Information] Authorization was successful.
2019-04-18 16:01:21.696 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.267ms.
2019-04-18 16:01:21.697 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 16:01:21.697 +02:00 [Information] Request finished in 103.4125ms 200 application/json; charset=utf-8
2019-04-18 16:01:21.698 +02:00 [Information] Authorization was successful.
2019-04-18 16:01:21.700 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenbijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 16:01:21.700 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.701 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:01:21.704 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 16:01:21.705 +02:00 [Information] Executing action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 16:01:21.709 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.710 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.710 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:01:21.711 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x.ProductenPerBestellingen].[BestellingId], [x.ProductenPerBestellingen].[ProductId], [x.ProductenPerBestellingen].[Aantal], [x.ProductenPerBestellingen].[Notitie], [x.ProductenPerBestellingen].[Prijs], [p.Product].[ProductId], [p.Product].[CategorieId], [p.Product].[Naam], [p.Product].[Prijs], [p.Product].[WinkelId]
FROM [ProductenPerBestellingen] AS [x.ProductenPerBestellingen]
INNER JOIN [Producten] AS [p.Product] ON [x.ProductenPerBestellingen].[ProductId] = [p.Product].[ProductId]
INNER JOIN (
    SELECT [x0].[BestellingId]
    FROM [Bestellingen] AS [x0]
    WHERE (CONVERT(date, [x0].[Bezorgdatum]) = @__date_Date_0) AND ([x0].[GebruikerId] = @__gebruikerId_1)
) AS [t] ON [x.ProductenPerBestellingen].[BestellingId] = [t].[BestellingId]
ORDER BY [t].[BestellingId]"
2019-04-18 16:01:21.711 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 16:01:21.714 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.716 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:01:21.717 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 16:01:21.717 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.720 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 59.7196ms
2019-04-18 16:01:21.726 +02:00 [Information] Successfully validated the token.
2019-04-18 16:01:21.727 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x.ProductenPerBestellingen].[BestellingId], [x.ProductenPerBestellingen].[ProductId], [x.ProductenPerBestellingen].[Aantal], [x.ProductenPerBestellingen].[Notitie], [x.ProductenPerBestellingen].[Prijs], [p.Product].[ProductId], [p.Product].[CategorieId], [p.Product].[Naam], [p.Product].[Prijs], [p.Product].[WinkelId]
FROM [ProductenPerBestellingen] AS [x.ProductenPerBestellingen]
INNER JOIN [Producten] AS [p.Product] ON [x.ProductenPerBestellingen].[ProductId] = [p.Product].[ProductId]
INNER JOIN (
    SELECT [x0].[BestellingId]
    FROM [Bestellingen] AS [x0]
    WHERE (CONVERT(date, [x0].[Bezorgdatum]) = @__date_Date_0) AND ([x0].[GebruikerId] = @__gebruikerId_1)
) AS [t] ON [x.ProductenPerBestellingen].[BestellingId] = [t].[BestellingId]
ORDER BY [t].[BestellingId]"
2019-04-18 16:01:21.727 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 16:01:21.728 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenbijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 28.7153ms.
2019-04-18 16:01:21.731 +02:00 [Information] Request finished in 129.8379ms 200 application/json; charset=utf-8
2019-04-18 16:01:21.731 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:01:21.731 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:01:21.732 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:01:21.734 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenbijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 27.2751ms.
2019-04-18 16:01:21.736 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:01:21.737 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 16:01:21.739 +02:00 [Information] Executed action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 26.7901ms.
2019-04-18 16:01:21.741 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 59.1998ms
2019-04-18 16:01:21.744 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:01:21.747 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenbijDatum (Services)" in 61.567ms
2019-04-18 16:01:21.748 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:01:21.748 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:01:21.750 +02:00 [Information] Executing JsonResult, writing value of type '"SogyoLunchApp.Winkel"'.
2019-04-18 16:01:21.751 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenbijDatum (Services)" in 56.511ms
2019-04-18 16:01:21.753 +02:00 [Information] Request finished in 142.328ms 200 application/json; charset=utf-8
2019-04-18 16:01:21.754 +02:00 [Information] Request finished in 153.6754ms 200 application/json; charset=utf-8
2019-04-18 16:01:21.756 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:01:21.757 +02:00 [Information] Executed action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" in 58.5603ms
2019-04-18 16:01:21.758 +02:00 [Information] Request finished in 140.8043ms 200 application/json; charset=utf-8
2019-04-18 16:01:21.761 +02:00 [Information] Successfully validated the token.
2019-04-18 16:01:21.762 +02:00 [Information] Request finished in 148.065ms 200 application/json; charset=utf-8
2019-04-18 16:01:21.763 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:01:21.764 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:01:21.772 +02:00 [Information] Route matched with "{action = \"GetDeadlinePerDatum\", controller = \"Deadline\"}". Executing action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)"
2019-04-18 16:01:21.772 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:01:21.773 +02:00 [Information] Authorization was successful.
2019-04-18 16:01:21.775 +02:00 [Information] Executing action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 16:01:21.777 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:01:21.778 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.782 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__bezorgdag_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [x].[Dag], [x].[BestelDeadlineDag], [x].[BestelDeadlineTijd], [x].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [x]
WHERE [x].[Dag] = @__bezorgdag_0"
2019-04-18 16:01:21.783 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:01:21.784 +02:00 [Information] Executed action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 7.4143ms.
2019-04-18 16:01:21.787 +02:00 [Information] Route matched with "{action = \"GetDeadlinePerDatum\", controller = \"Deadline\"}". Executing action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)"
2019-04-18 16:01:21.788 +02:00 [Information] Executing JsonResult, writing value of type '"System.DateTime"'.
2019-04-18 16:01:21.789 +02:00 [Information] Authorization was successful.
2019-04-18 16:01:21.790 +02:00 [Information] Executed action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" in 17.3089ms
2019-04-18 16:01:21.791 +02:00 [Information] Executing action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 16:01:21.792 +02:00 [Information] Request finished in 87.4096ms 200 application/json; charset=utf-8
2019-04-18 16:01:21.794 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:01:21.796 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__bezorgdag_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [x].[Dag], [x].[BestelDeadlineDag], [x].[BestelDeadlineTijd], [x].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [x]
WHERE [x].[Dag] = @__bezorgdag_0"
2019-04-18 16:01:21.798 +02:00 [Information] Executed action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 5.1217ms.
2019-04-18 16:01:21.800 +02:00 [Information] Executing JsonResult, writing value of type '"System.DateTime"'.
2019-04-18 16:01:21.801 +02:00 [Information] Executed action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" in 11.8216ms
2019-04-18 16:01:21.803 +02:00 [Information] Request finished in 66.1617ms 200 application/json; charset=utf-8
2019-04-18 16:05:50.042 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 16:05:50.048 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:05:50.050 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:05:50.051 +02:00 [Information] Request finished in 9.1318ms 204 
2019-04-18 16:05:50.091 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 16:05:50.092 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:05:50.094 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:05:50.095 +02:00 [Information] Successfully validated the token.
2019-04-18 16:05:50.100 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:05:50.101 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:05:50.123 +02:00 [Information] Executed DbCommand ("18"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:05:50.142 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:05:50.144 +02:00 [Information] Route matched with "{action = \"getBezorgdagen\", controller = \"Bezorgdag\"}". Executing action "Services.APIService.BezorgdagController.getBezorgdagen (Services)"
2019-04-18 16:05:50.152 +02:00 [Information] Authorization was successful.
2019-04-18 16:05:50.153 +02:00 [Information] Executing action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)" with arguments (["40"]) - Validation state: Valid
2019-04-18 16:05:50.157 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.161 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.167 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.184 +02:00 [Information] Executed DbCommand ("13"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.188 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.193 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.208 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.216 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.220 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.225 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.244 +02:00 [Information] Executed DbCommand ("13"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.247 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.255 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.257 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.259 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.261 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.265 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.268 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.270 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.274 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.283 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.288 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.292 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.297 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.300 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.303 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.305 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.307 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.310 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.317 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.320 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.322 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.325 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.328 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.332 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.334 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.336 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.338 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.341 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.343 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.346 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.349 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.351 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.353 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.355 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.357 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.359 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.362 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.366 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.368 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.370 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.373 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.375 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.378 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.381 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.384 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.386 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.389 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.391 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.395 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.398 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.400 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.402 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.404 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.407 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.409 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.411 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.414 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.417 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.419 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.421 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.424 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.427 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.433 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.436 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.441 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.443 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.447 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.449 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.452 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.454 +02:00 [Information] Executed action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 299.691ms.
2019-04-18 16:05:50.456 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[System.DateTime, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"'.
2019-04-18 16:05:50.457 +02:00 [Information] Executed action "Services.APIService.BezorgdagController.getBezorgdagen (Services)" in 305.1594ms
2019-04-18 16:05:50.464 +02:00 [Information] Request finished in 372.7734ms 200 application/json; charset=utf-8
2019-04-18 16:05:50.500 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 16:05:50.500 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 16:05:50.500 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 16:05:50.508 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:05:50.511 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 16:05:50.511 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:05:50.512 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:05:50.513 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:05:50.514 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:05:50.515 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:05:50.515 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:05:50.516 +02:00 [Information] Request finished in 16.4623ms 204 
2019-04-18 16:05:50.517 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:05:50.520 +02:00 [Information] Request finished in 8.7252ms 204 
2019-04-18 16:05:50.520 +02:00 [Information] Request finished in 20.0555ms 204 
2019-04-18 16:05:50.522 +02:00 [Information] Request finished in 22.2342ms 204 
2019-04-18 16:05:50.538 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 16:05:50.538 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 16:05:50.541 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 16:05:50.541 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 16:05:50.542 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:05:50.543 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:05:50.543 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:05:50.544 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:05:50.544 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:05:50.545 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:05:50.546 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:05:50.549 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:05:50.550 +02:00 [Information] Successfully validated the token.
2019-04-18 16:05:50.551 +02:00 [Information] Successfully validated the token.
2019-04-18 16:05:50.551 +02:00 [Information] Successfully validated the token.
2019-04-18 16:05:50.552 +02:00 [Information] Successfully validated the token.
2019-04-18 16:05:50.552 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:05:50.553 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:05:50.553 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:05:50.554 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:05:50.555 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:05:50.555 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:05:50.556 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:05:50.557 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:05:50.561 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:05:50.567 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:05:50.575 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:05:50.576 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:05:50.592 +02:00 [Information] Executed DbCommand ("12"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:05:50.592 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:05:50.594 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:05:50.602 +02:00 [Information] Route matched with "{action = \"GetProductenbijDatum\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenbijDatum (Services)"
2019-04-18 16:05:50.604 +02:00 [Information] Route matched with "{action = \"GetDeadlinePerDatum\", controller = \"Deadline\"}". Executing action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)"
2019-04-18 16:05:50.606 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:05:50.607 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 16:05:50.607 +02:00 [Information] Authorization was successful.
2019-04-18 16:05:50.608 +02:00 [Information] Authorization was successful.
2019-04-18 16:05:50.613 +02:00 [Information] Route matched with "{action = \"GetWinkelBijDatum\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)"
2019-04-18 16:05:50.615 +02:00 [Information] Authorization was successful.
2019-04-18 16:05:50.616 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenbijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 16:05:50.617 +02:00 [Information] Executing action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 16:05:50.620 +02:00 [Information] Authorization was successful.
2019-04-18 16:05:50.620 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 16:05:50.623 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.624 +02:00 [Information] Executing action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 16:05:50.624 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.626 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.2459ms.
2019-04-18 16:05:50.632 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:05:50.635 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.636 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__bezorgdag_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [x].[Dag], [x].[BestelDeadlineDag], [x].[BestelDeadlineTijd], [x].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [x]
WHERE [x].[Dag] = @__bezorgdag_0"
2019-04-18 16:05:50.638 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 16:05:50.639 +02:00 [Information] Executed action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 16.299ms.
2019-04-18 16:05:50.642 +02:00 [Information] Executed DbCommand ("13"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:05:50.642 +02:00 [Information] Executing JsonResult, writing value of type '"System.DateTime"'.
2019-04-18 16:05:50.645 +02:00 [Information] Executed action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" in 37.1831ms
2019-04-18 16:05:50.647 +02:00 [Information] Request finished in 105.9168ms 200 application/json; charset=utf-8
2019-04-18 16:05:50.654 +02:00 [Information] Executed DbCommand ("9"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:05:50.657 +02:00 [Information] Executed action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 27.6288ms.
2019-04-18 16:05:50.659 +02:00 [Information] Executing JsonResult, writing value of type '"SogyoLunchApp.Winkel"'.
2019-04-18 16:05:50.660 +02:00 [Information] Executed action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" in 40.5525ms
2019-04-18 16:05:50.661 +02:00 [Information] Request finished in 123.3492ms 200 application/json; charset=utf-8
2019-04-18 16:05:50.664 +02:00 [Information] Executed DbCommand ("26"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 16:05:50.666 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenbijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 44.5278ms.
2019-04-18 16:05:50.668 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:05:50.669 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenbijDatum (Services)" in 62.2411ms
2019-04-18 16:05:50.671 +02:00 [Information] Request finished in 129.2001ms 200 application/json; charset=utf-8
2019-04-18 16:05:50.672 +02:00 [Information] Executed DbCommand ("31"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x.ProductenPerBestellingen].[BestellingId], [x.ProductenPerBestellingen].[ProductId], [x.ProductenPerBestellingen].[Aantal], [x.ProductenPerBestellingen].[Notitie], [x.ProductenPerBestellingen].[Prijs], [p.Product].[ProductId], [p.Product].[CategorieId], [p.Product].[Naam], [p.Product].[Prijs], [p.Product].[WinkelId]
FROM [ProductenPerBestellingen] AS [x.ProductenPerBestellingen]
INNER JOIN [Producten] AS [p.Product] ON [x.ProductenPerBestellingen].[ProductId] = [p.Product].[ProductId]
INNER JOIN (
    SELECT [x0].[BestellingId]
    FROM [Bestellingen] AS [x0]
    WHERE (CONVERT(date, [x0].[Bezorgdatum]) = @__date_Date_0) AND ([x0].[GebruikerId] = @__gebruikerId_1)
) AS [t] ON [x.ProductenPerBestellingen].[BestellingId] = [t].[BestellingId]
ORDER BY [t].[BestellingId]"
2019-04-18 16:05:50.676 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 60.5173ms
2019-04-18 16:05:50.677 +02:00 [Information] Request finished in 141.7096ms 200 application/json; charset=utf-8
2019-04-18 16:05:53.622 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:05:53.622 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:05:53.625 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:05:53.626 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:05:53.628 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:05:53.636 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:05:53.637 +02:00 [Information] Request finished in 15.8949ms 204 
2019-04-18 16:05:53.638 +02:00 [Information] Request finished in 16.1583ms 204 
2019-04-18 16:05:53.644 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:05:53.645 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:05:53.650 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:05:53.651 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:05:53.651 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:05:53.652 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:05:53.653 +02:00 [Information] Successfully validated the token.
2019-04-18 16:05:53.654 +02:00 [Information] Successfully validated the token.
2019-04-18 16:05:53.654 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:05:53.654 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:05:53.656 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:05:53.656 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:05:53.667 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:05:53.667 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:05:53.674 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:05:53.675 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:05:53.677 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:05:53.678 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:05:53.679 +02:00 [Information] Authorization was successful.
2019-04-18 16:05:53.681 +02:00 [Information] Authorization was successful.
2019-04-18 16:05:53.682 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 16:05:53.683 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:05:53.684 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0071ms.
2019-04-18 16:05:53.685 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.2455ms.
2019-04-18 16:05:53.686 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:05:53.687 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:05:53.690 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 16:05:53.692 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 13.1488ms
2019-04-18 16:05:53.693 +02:00 [Information] Request finished in 48.0907ms 200 application/json; charset=utf-8
2019-04-18 16:05:53.695 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:05:53.697 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 16.9236ms
2019-04-18 16:05:53.699 +02:00 [Information] Request finished in 54.5896ms 200 application/json; charset=utf-8
2019-04-18 16:15:26.102 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:15:26.102 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:15:26.118 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:15:26.120 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:15:26.120 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:15:26.121 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:15:26.122 +02:00 [Information] Request finished in 20.7268ms 204 
2019-04-18 16:15:26.123 +02:00 [Information] Request finished in 20.9965ms 204 
2019-04-18 16:15:26.143 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:15:26.143 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:15:26.144 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:15:26.144 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:15:26.145 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:15:26.146 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:15:26.147 +02:00 [Information] Successfully validated the token.
2019-04-18 16:15:26.147 +02:00 [Information] Successfully validated the token.
2019-04-18 16:15:26.147 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:15:26.148 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:15:26.153 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:15:26.154 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:15:26.175 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:15:26.181 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:15:26.185 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:15:26.187 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:15:26.188 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:15:26.189 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:15:26.190 +02:00 [Information] Authorization was successful.
2019-04-18 16:15:26.190 +02:00 [Information] Authorization was successful.
2019-04-18 16:15:26.191 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:15:26.192 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 16:15:26.194 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1272ms.
2019-04-18 16:15:26.195 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0047ms.
2019-04-18 16:15:26.196 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:15:26.197 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:15:26.201 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 16:15:26.202 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:15:26.203 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 12.4351ms
2019-04-18 16:15:26.205 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 15.1339ms
2019-04-18 16:15:26.206 +02:00 [Information] Request finished in 62.5421ms 200 application/json; charset=utf-8
2019-04-18 16:15:26.207 +02:00 [Information] Request finished in 64.2399ms 200 application/json; charset=utf-8
2019-04-18 16:15:33.979 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:15:33.979 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:15:33.980 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:15:33.981 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:15:33.981 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:15:33.982 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:15:33.983 +02:00 [Information] Request finished in 3.8512ms 204 
2019-04-18 16:15:33.983 +02:00 [Information] Request finished in 4.0826ms 204 
2019-04-18 16:15:33.989 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:15:33.989 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:15:33.990 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:15:33.991 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:15:33.991 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:15:33.992 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:15:33.993 +02:00 [Information] Successfully validated the token.
2019-04-18 16:15:33.993 +02:00 [Information] Successfully validated the token.
2019-04-18 16:15:33.994 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:15:33.994 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:15:33.995 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:15:33.996 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:15:34.001 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:15:34.001 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:15:34.006 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:15:34.008 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:15:34.008 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:15:34.010 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:15:34.011 +02:00 [Information] Authorization was successful.
2019-04-18 16:15:34.011 +02:00 [Information] Authorization was successful.
2019-04-18 16:15:34.012 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 16:15:34.012 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:15:34.013 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0065ms.
2019-04-18 16:15:34.014 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0756ms.
2019-04-18 16:15:34.016 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:15:34.017 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:15:34.019 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 16:15:34.019 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:15:34.021 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 10.1394ms
2019-04-18 16:15:34.022 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 11.0878ms
2019-04-18 16:15:34.023 +02:00 [Information] Request finished in 34.3204ms 200 application/json; charset=utf-8
2019-04-18 16:15:34.025 +02:00 [Information] Request finished in 35.6116ms 200 application/json; charset=utf-8
2019-04-18 16:15:36.801 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:15:36.801 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:15:36.803 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:15:36.805 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:15:36.806 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:15:36.807 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:15:36.808 +02:00 [Information] Request finished in 6.7593ms 204 
2019-04-18 16:15:36.808 +02:00 [Information] Request finished in 7.8327ms 204 
2019-04-18 16:15:37.064 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:15:37.064 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:15:37.076 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:15:37.077 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:15:37.077 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:15:37.079 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:15:37.080 +02:00 [Information] Successfully validated the token.
2019-04-18 16:15:37.081 +02:00 [Information] Successfully validated the token.
2019-04-18 16:15:37.086 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:15:37.091 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:15:37.108 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:15:37.124 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:15:37.210 +02:00 [Information] Executed DbCommand ("83"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:15:37.210 +02:00 [Information] Executed DbCommand ("53"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:15:37.241 +02:00 [Information] Executed DbCommand ("14"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:15:37.244 +02:00 [Information] Executed DbCommand ("11"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:15:37.257 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:15:37.258 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:15:37.258 +02:00 [Information] Authorization was successful.
2019-04-18 16:15:37.260 +02:00 [Information] Authorization was successful.
2019-04-18 16:15:37.260 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:15:37.261 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 16:15:37.262 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1301ms.
2019-04-18 16:15:37.263 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0063ms.
2019-04-18 16:15:37.264 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:15:37.267 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:15:37.269 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:15:37.271 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 16:15:37.272 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 14.0158ms
2019-04-18 16:15:37.274 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 14.3328ms
2019-04-18 16:15:37.275 +02:00 [Information] Request finished in 211.491ms 200 application/json; charset=utf-8
2019-04-18 16:15:37.276 +02:00 [Information] Request finished in 211.6821ms 200 application/json; charset=utf-8
2019-04-18 16:15:58.393 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:15:58.395 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:15:58.401 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:15:58.402 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:15:58.403 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:15:58.404 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:15:58.405 +02:00 [Information] Request finished in 12.1139ms 204 
2019-04-18 16:15:58.406 +02:00 [Information] Request finished in 11.1974ms 204 
2019-04-18 16:15:58.412 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:15:58.413 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:15:58.416 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:15:58.417 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:15:58.417 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:15:58.419 +02:00 [Information] Successfully validated the token.
2019-04-18 16:15:58.421 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:15:58.422 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:15:58.424 +02:00 [Information] Successfully validated the token.
2019-04-18 16:15:58.426 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:15:58.426 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:15:58.428 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:15:58.433 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:15:58.437 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:15:58.444 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:15:58.444 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:15:58.446 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:15:58.448 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:15:58.448 +02:00 [Information] Authorization was successful.
2019-04-18 16:15:58.450 +02:00 [Information] Authorization was successful.
2019-04-18 16:15:58.450 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:15:58.451 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 16:15:58.451 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0839ms.
2019-04-18 16:15:58.452 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0028ms.
2019-04-18 16:15:58.453 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:15:58.454 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:15:58.456 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:15:58.456 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 16:15:58.458 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 9.5274ms
2019-04-18 16:15:58.459 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 9.7126ms
2019-04-18 16:15:58.460 +02:00 [Information] Request finished in 46.9154ms 200 application/json; charset=utf-8
2019-04-18 16:15:58.461 +02:00 [Information] Request finished in 49.0999ms 200 application/json; charset=utf-8
2019-04-18 16:16:01.242 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:16:01.243 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:16:01.245 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:16:01.246 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:16:01.247 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:16:01.249 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:16:01.250 +02:00 [Information] Request finished in 7.4176ms 204 
2019-04-18 16:16:01.252 +02:00 [Information] Request finished in 8.8812ms 204 
2019-04-18 16:16:01.521 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:16:01.522 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:16:01.523 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:16:01.524 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:16:01.525 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:16:01.525 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:16:01.526 +02:00 [Information] Successfully validated the token.
2019-04-18 16:16:01.527 +02:00 [Information] Successfully validated the token.
2019-04-18 16:16:01.527 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:16:01.530 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:16:01.532 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:16:01.532 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:16:01.553 +02:00 [Information] Executed DbCommand ("16"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:16:01.556 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:16:01.570 +02:00 [Information] Executed DbCommand ("9"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:16:01.572 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:16:01.593 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:16:01.595 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:16:01.596 +02:00 [Information] Authorization was successful.
2019-04-18 16:16:01.597 +02:00 [Information] Authorization was successful.
2019-04-18 16:16:01.597 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:16:01.598 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 16:16:01.600 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1239ms.
2019-04-18 16:16:01.601 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0061ms.
2019-04-18 16:16:01.602 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:16:01.604 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:16:01.609 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 16:16:01.610 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:16:01.612 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 14.8538ms
2019-04-18 16:16:01.613 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 17.65ms
2019-04-18 16:16:01.614 +02:00 [Information] Request finished in 93.606ms 200 application/json; charset=utf-8
2019-04-18 16:16:01.616 +02:00 [Information] Request finished in 93.5847ms 200 application/json; charset=utf-8
2019-04-18 16:17:47.286 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:17:47.286 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:17:47.301 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:17:47.302 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:17:47.302 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:17:47.303 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:17:47.303 +02:00 [Information] Request finished in 16.8756ms 204 
2019-04-18 16:17:47.304 +02:00 [Information] Request finished in 17.7145ms 204 
2019-04-18 16:17:47.326 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:17:47.326 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:17:47.326 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:17:47.327 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:17:47.328 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:17:47.328 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:17:47.329 +02:00 [Information] Successfully validated the token.
2019-04-18 16:17:47.330 +02:00 [Information] Successfully validated the token.
2019-04-18 16:17:47.330 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:17:47.331 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:17:47.332 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:17:47.334 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:17:47.341 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:17:47.341 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:17:47.347 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:17:47.351 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:17:47.355 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:17:47.356 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:17:47.357 +02:00 [Information] Authorization was successful.
2019-04-18 16:17:47.357 +02:00 [Information] Authorization was successful.
2019-04-18 16:17:47.358 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:17:47.359 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 16:17:47.359 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0927ms.
2019-04-18 16:17:47.360 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0036ms.
2019-04-18 16:17:47.361 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:17:47.363 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:17:47.372 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:17:47.373 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 16:17:47.375 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 17.9468ms
2019-04-18 16:17:47.377 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 19.373ms
2019-04-18 16:17:47.380 +02:00 [Information] Request finished in 54.755ms 200 application/json; charset=utf-8
2019-04-18 16:17:47.388 +02:00 [Information] Request finished in 62.1396ms 200 application/json; charset=utf-8
2019-04-18 16:17:49.656 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:17:49.662 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:17:49.663 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:17:49.665 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:17:49.665 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:17:49.667 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:17:49.668 +02:00 [Information] Request finished in 11.7748ms 204 
2019-04-18 16:17:49.668 +02:00 [Information] Request finished in 6.5902ms 204 
2019-04-18 16:17:49.965 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:17:49.969 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:17:49.974 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:17:49.975 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:17:49.977 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:17:49.980 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:17:49.982 +02:00 [Information] Successfully validated the token.
2019-04-18 16:17:49.986 +02:00 [Information] Successfully validated the token.
2019-04-18 16:17:49.987 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:17:49.987 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:17:49.989 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:17:49.992 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:17:50.008 +02:00 [Information] Executed DbCommand ("14"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:17:50.010 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:17:50.041 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:17:50.041 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:17:50.043 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:17:50.045 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:17:50.046 +02:00 [Information] Authorization was successful.
2019-04-18 16:17:50.054 +02:00 [Information] Authorization was successful.
2019-04-18 16:17:50.055 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:17:50.055 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 16:17:50.056 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.12ms.
2019-04-18 16:17:50.057 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0051ms.
2019-04-18 16:17:50.058 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:17:50.059 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:17:50.061 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:17:50.062 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 16:17:50.063 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 17.8451ms
2019-04-18 16:17:50.071 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 17.0664ms
2019-04-18 16:17:50.072 +02:00 [Information] Request finished in 107.1422ms 200 application/json; charset=utf-8
2019-04-18 16:17:50.073 +02:00 [Information] Request finished in 104.8075ms 200 application/json; charset=utf-8
2019-04-18 16:19:02.932 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:19:02.936 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:19:02.941 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:19:02.942 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:19:02.943 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:19:02.944 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:19:02.946 +02:00 [Information] Request finished in 15.0597ms 204 
2019-04-18 16:19:02.947 +02:00 [Information] Request finished in 11.0709ms 204 
2019-04-18 16:19:02.960 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:19:02.961 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:19:02.962 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:19:02.963 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:19:02.964 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:19:02.965 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:19:02.967 +02:00 [Information] Successfully validated the token.
2019-04-18 16:19:02.967 +02:00 [Information] Successfully validated the token.
2019-04-18 16:19:02.968 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:19:02.969 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:19:02.970 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:19:02.971 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:19:02.976 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:19:02.976 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:19:02.983 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:19:02.995 +02:00 [Information] Executed DbCommand ("12"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:19:02.997 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:19:02.998 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:19:02.999 +02:00 [Information] Authorization was successful.
2019-04-18 16:19:03.000 +02:00 [Information] Authorization was successful.
2019-04-18 16:19:03.001 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 16:19:03.002 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:19:03.003 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0073ms.
2019-04-18 16:19:03.004 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1068ms.
2019-04-18 16:19:03.005 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:19:03.007 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:19:03.009 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 16:19:03.010 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:19:03.010 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 11.7839ms
2019-04-18 16:19:03.013 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 13.0685ms
2019-04-18 16:19:03.014 +02:00 [Information] Request finished in 53.911ms 200 application/json; charset=utf-8
2019-04-18 16:19:03.016 +02:00 [Information] Request finished in 55.1511ms 200 application/json; charset=utf-8
2019-04-18 16:19:23.646 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:19:23.647 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:19:23.648 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:19:23.650 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:19:23.651 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:19:23.652 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:19:23.653 +02:00 [Information] Request finished in 6.4269ms 204 
2019-04-18 16:19:23.654 +02:00 [Information] Request finished in 7.146ms 204 
2019-04-18 16:19:23.909 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:19:23.915 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:19:23.976 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:19:23.976 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:19:23.977 +02:00 [Information] Successfully validated the token.
2019-04-18 16:19:23.977 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:19:23.978 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:19:23.979 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:19:23.984 +02:00 [Information] Successfully validated the token.
2019-04-18 16:19:23.986 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:19:23.987 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:19:23.989 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:19:23.993 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:19:23.996 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:19:24.003 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:19:24.003 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:19:24.008 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:19:24.010 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:19:24.011 +02:00 [Information] Authorization was successful.
2019-04-18 16:19:24.013 +02:00 [Information] Authorization was successful.
2019-04-18 16:19:24.014 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:19:24.014 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 16:19:24.015 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1079ms.
2019-04-18 16:19:24.018 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0051ms.
2019-04-18 16:19:24.019 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:19:24.021 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:19:24.025 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 16:19:24.027 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 15.0468ms
2019-04-18 16:19:24.028 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:19:24.029 +02:00 [Information] Request finished in 120.8322ms 200 application/json; charset=utf-8
2019-04-18 16:19:24.031 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 20.7152ms
2019-04-18 16:19:24.035 +02:00 [Information] Request finished in 58.9984ms 200 application/json; charset=utf-8
2019-04-18 16:22:28.238 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:22:28.239 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:22:28.249 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:22:28.249 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:22:28.250 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:22:28.250 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:22:28.251 +02:00 [Information] Request finished in 13.5063ms 204 
2019-04-18 16:22:28.252 +02:00 [Information] Request finished in 13.3707ms 204 
2019-04-18 16:22:28.257 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:22:28.257 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:22:28.260 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:22:28.260 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:22:28.261 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:22:28.262 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:22:28.263 +02:00 [Information] Successfully validated the token.
2019-04-18 16:22:28.265 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:22:28.267 +02:00 [Information] Successfully validated the token.
2019-04-18 16:22:28.271 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:22:28.271 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:22:28.274 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:22:28.288 +02:00 [Information] Executed DbCommand ("13"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:22:28.297 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:22:28.305 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:22:28.312 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:22:28.313 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:22:28.313 +02:00 [Information] Authorization was successful.
2019-04-18 16:22:28.316 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:22:28.317 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:22:28.319 +02:00 [Information] Authorization was successful.
2019-04-18 16:22:28.320 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1158ms.
2019-04-18 16:22:28.320 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 16:22:28.322 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:22:28.323 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0073ms.
2019-04-18 16:22:28.325 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:22:28.328 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:22:28.328 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 16:22:28.330 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 16.5309ms
2019-04-18 16:22:28.331 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 12.9927ms
2019-04-18 16:22:28.336 +02:00 [Information] Request finished in 79.3227ms 200 application/json; charset=utf-8
2019-04-18 16:22:28.337 +02:00 [Information] Request finished in 80.2449ms 200 application/json; charset=utf-8
2019-04-18 16:22:31.413 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:22:31.412 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:22:31.423 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:22:31.424 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:22:31.425 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:22:31.428 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:22:31.429 +02:00 [Information] Request finished in 16.5909ms 204 
2019-04-18 16:22:31.435 +02:00 [Information] Request finished in 24.0909ms 204 
2019-04-18 16:22:31.713 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:22:31.721 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:22:31.723 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:22:31.724 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:22:31.725 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:22:31.731 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:22:31.758 +02:00 [Information] Successfully validated the token.
2019-04-18 16:22:31.759 +02:00 [Information] Successfully validated the token.
2019-04-18 16:22:31.762 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:22:31.763 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:22:31.769 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:22:31.775 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:22:31.835 +02:00 [Information] Executed DbCommand ("58"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:22:31.875 +02:00 [Information] Executed DbCommand ("11"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:22:31.876 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:22:31.889 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:22:31.898 +02:00 [Information] Executed DbCommand ("17"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:22:31.909 +02:00 [Information] Authorization was successful.
2019-04-18 16:22:31.911 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:22:31.912 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 16:22:31.913 +02:00 [Information] Authorization was successful.
2019-04-18 16:22:31.914 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0058ms.
2019-04-18 16:22:31.918 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:22:31.921 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:22:31.922 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1066ms.
2019-04-18 16:22:31.924 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 16:22:31.924 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:22:31.926 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 16.5261ms
2019-04-18 16:22:31.928 +02:00 [Information] Request finished in 215.3838ms 200 application/json; charset=utf-8
2019-04-18 16:22:31.929 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:22:31.933 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 19.5007ms
2019-04-18 16:22:31.937 +02:00 [Information] Request finished in 216.1352ms 200 application/json; charset=utf-8
2019-04-18 16:23:48.685 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:23:48.685 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:23:48.699 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:23:48.700 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:23:48.701 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:23:48.701 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:23:48.702 +02:00 [Information] Request finished in 16.6795ms 204 
2019-04-18 16:23:48.703 +02:00 [Information] Request finished in 17.2726ms 204 
2019-04-18 16:23:48.712 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:23:48.712 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:23:48.713 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:23:48.714 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:23:48.715 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:23:48.716 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:23:48.716 +02:00 [Information] Successfully validated the token.
2019-04-18 16:23:48.717 +02:00 [Information] Successfully validated the token.
2019-04-18 16:23:48.717 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:23:48.718 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:23:48.719 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:23:48.720 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:23:48.731 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:23:48.735 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:23:48.743 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:23:48.748 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:23:48.751 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:23:48.757 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:23:48.757 +02:00 [Information] Authorization was successful.
2019-04-18 16:23:48.758 +02:00 [Information] Authorization was successful.
2019-04-18 16:23:48.759 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:23:48.759 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 16:23:48.760 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1119ms.
2019-04-18 16:23:48.761 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0046ms.
2019-04-18 16:23:48.762 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:23:48.763 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:23:48.768 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 16:23:48.770 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 11.711ms
2019-04-18 16:23:48.770 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:23:48.771 +02:00 [Information] Request finished in 59.1687ms 200 application/json; charset=utf-8
2019-04-18 16:23:48.774 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 16.8081ms
2019-04-18 16:23:48.775 +02:00 [Information] Request finished in 63.157ms 200 application/json; charset=utf-8
2019-04-18 16:26:47.385 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:26:47.384 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:26:47.387 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:26:47.388 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:26:47.389 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:26:47.391 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:26:47.391 +02:00 [Information] Request finished in 7.3476ms 204 
2019-04-18 16:26:47.398 +02:00 [Information] Request finished in 14.342ms 204 
2019-04-18 16:26:47.773 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:26:47.792 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:26:47.793 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:26:47.797 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:26:47.798 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:26:47.807 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:26:47.813 +02:00 [Information] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters) in C:\agent1\_work\109\s\src\Microsoft.IdentityModel.Tokens\Validators.cs:line 274
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters) in C:\agent1\_work\109\s\src\System.IdentityModel.Tokens.Jwt\JwtSecurityTokenHandler.cs:line 1182
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters) in C:\agent1\_work\109\s\src\System.IdentityModel.Tokens.Jwt\JwtSecurityTokenHandler.cs:line 739
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken) in C:\agent1\_work\109\s\src\System.IdentityModel.Tokens.Jwt\JwtSecurityTokenHandler.cs:line 723
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2019-04-18 16:26:47.813 +02:00 [Information] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters) in C:\agent1\_work\109\s\src\Microsoft.IdentityModel.Tokens\Validators.cs:line 274
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters) in C:\agent1\_work\109\s\src\System.IdentityModel.Tokens.Jwt\JwtSecurityTokenHandler.cs:line 1182
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters) in C:\agent1\_work\109\s\src\System.IdentityModel.Tokens.Jwt\JwtSecurityTokenHandler.cs:line 739
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken) in C:\agent1\_work\109\s\src\System.IdentityModel.Tokens.Jwt\JwtSecurityTokenHandler.cs:line 723
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2019-04-18 16:26:47.827 +02:00 [Information] "Bearer" was not authenticated. Failure message: "IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'."
2019-04-18 16:26:47.829 +02:00 [Information] "Bearer" was not authenticated. Failure message: "IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'."
2019-04-18 16:26:47.830 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:26:47.831 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:26:47.833 +02:00 [Information] Authorization failed.
2019-04-18 16:26:47.835 +02:00 [Information] Authorization failed.
2019-04-18 16:26:47.837 +02:00 [Information] Authorization failed for the request at filter '"Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter"'.
2019-04-18 16:26:47.837 +02:00 [Information] Authorization failed for the request at filter '"Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter"'.
2019-04-18 16:26:47.839 +02:00 [Information] Executing ChallengeResult with authentication schemes ([]).
2019-04-18 16:26:47.839 +02:00 [Information] Executing ChallengeResult with authentication schemes ([]).
2019-04-18 16:26:47.840 +02:00 [Information] AuthenticationScheme: "Bearer" was challenged.
2019-04-18 16:26:47.840 +02:00 [Information] AuthenticationScheme: "Bearer" was challenged.
2019-04-18 16:26:47.841 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 5.8225ms
2019-04-18 16:26:47.842 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 8.385ms
2019-04-18 16:26:47.843 +02:00 [Information] Request finished in 69.6472ms 401 text/plain
2019-04-18 16:26:47.844 +02:00 [Information] Request finished in 52.1793ms 401 text/plain
2019-04-18 16:26:50.593 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/Auth/ExternalLogin  
2019-04-18 16:26:50.595 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:26:50.596 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:26:50.596 +02:00 [Information] Request finished in 3.1324ms 204 
2019-04-18 16:26:50.602 +02:00 [Information] Request starting HTTP/1.1 POST http://localhost:5000/sogyolunchapi/Auth/ExternalLogin application/json;charset=UTF-8 1303
2019-04-18 16:26:50.604 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:26:50.605 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:26:50.609 +02:00 [Information] Route matched with "{action = \"ExternalLogin\", controller = \"Auth\"}". Executing action "SogyoLunchApp.APIService.AuthController.ExternalLogin (Services)"
2019-04-18 16:26:50.611 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:26:50.620 +02:00 [Information] Executing action method "SogyoLunchApp.APIService.AuthController.ExternalLogin (Services)" with arguments (["SogyoLunchApp.APIService.ExternalLoginModel"]) - Validation state: Valid
2019-04-18 16:26:50.852 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:26:50.872 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__normalizedEmail_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName]
FROM [AspNetUsers] AS [u]
WHERE [u].[NormalizedEmail] = @__normalizedEmail_0"
2019-04-18 16:26:50.878 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__loginProvider_0='?' (Size = 450), @__providerKey_1='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [userLogin].[LoginProvider], [userLogin].[ProviderKey], [userLogin].[ProviderDisplayName], [userLogin].[UserId]
FROM [AspNetUserLogins] AS [userLogin]
WHERE ([userLogin].[LoginProvider] = @__loginProvider_0) AND ([userLogin].[ProviderKey] = @__providerKey_1)"
2019-04-18 16:26:50.882 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__userId_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName]
FROM [AspNetUsers] AS [u]
WHERE [u].[Id] = @__userId_0"
2019-04-18 16:26:50.884 +02:00 [Warning] AddLogin for user "3a4a5049-5bff-4683-8042-7e01e6740527" failed because it was already associated with another user.
2019-04-18 16:26:50.890 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__user_Id_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [uc].[Id], [uc].[ClaimType], [uc].[ClaimValue], [uc].[UserId]
FROM [AspNetUserClaims] AS [uc]
WHERE [uc].[UserId] = @__user_Id_0"
2019-04-18 16:26:50.900 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__userId_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [role].[Name]
FROM [AspNetUserRoles] AS [userRole]
INNER JOIN [AspNetRoles] AS [role] ON [userRole].[RoleId] = [role].[Id]
WHERE [userRole].[UserId] = @__userId_0"
2019-04-18 16:26:50.906 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__normalizedName_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [r].[Id], [r].[ConcurrencyStamp], [r].[Name], [r].[NormalizedName]
FROM [AspNetRoles] AS [r]
WHERE [r].[NormalizedName] = @__normalizedName_0"
2019-04-18 16:26:50.910 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__role_Id_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [rc].[ClaimType], [rc].[ClaimValue]
FROM [AspNetRoleClaims] AS [rc]
WHERE [rc].[RoleId] = @__role_Id_0"
2019-04-18 16:26:50.913 +02:00 [Information] AuthenticationScheme: "Identity.Application" signed in.
2019-04-18 16:26:50.915 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__userId_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [role].[Name]
FROM [AspNetUserRoles] AS [userRole]
INNER JOIN [AspNetRoles] AS [role] ON [userRole].[RoleId] = [role].[Id]
WHERE [userRole].[UserId] = @__userId_0"
2019-04-18 16:26:50.925 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:26:50.930 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__normalizedUserName_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName]
FROM [AspNetUsers] AS [u]
WHERE [u].[NormalizedUserName] = @__normalizedUserName_0"
2019-04-18 16:26:50.940 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@p0='?' (DbType = Guid), @p1='?' (Size = 450), @p2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
DELETE FROM [AspNetUserTokens]
WHERE [UserId] = @p0 AND [LoginProvider] = @p1 AND [Name] = @p2;
SELECT @@ROWCOUNT;"
2019-04-18 16:26:50.946 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@p14='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p15='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTimeOffset), @p6='?' (Size = 256), @p7='?' (Size = 256), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Boolean), @p11='?' (Size = 4000), @p12='?' (DbType = Boolean), @p13='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [LockoutEnabled] = @p4, [LockoutEnd] = @p5, [NormalizedEmail] = @p6, [NormalizedUserName] = @p7, [PasswordHash] = @p8, [PhoneNumber] = @p9, [PhoneNumberConfirmed] = @p10, [SecurityStamp] = @p11, [TwoFactorEnabled] = @p12, [UserName] = @p13
WHERE [Id] = @p14 AND [ConcurrencyStamp] = @p15;
SELECT @@ROWCOUNT;"
2019-04-18 16:26:50.954 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:26:50.958 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__normalizedUserName_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName]
FROM [AspNetUsers] AS [u]
WHERE [u].[NormalizedUserName] = @__normalizedUserName_0"
2019-04-18 16:26:50.963 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@p0='?' (DbType = Guid), @p1='?' (Size = 450), @p2='?' (Size = 450), @p3='?' (Size = 4000)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
INSERT INTO [AspNetUserTokens] ([UserId], [LoginProvider], [Name], [Value])
VALUES (@p0, @p1, @p2, @p3);"
2019-04-18 16:26:50.966 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@p14='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p15='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTimeOffset), @p6='?' (Size = 256), @p7='?' (Size = 256), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Boolean), @p11='?' (Size = 4000), @p12='?' (DbType = Boolean), @p13='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [LockoutEnabled] = @p4, [LockoutEnd] = @p5, [NormalizedEmail] = @p6, [NormalizedUserName] = @p7, [PasswordHash] = @p8, [PhoneNumber] = @p9, [PhoneNumberConfirmed] = @p10, [SecurityStamp] = @p11, [TwoFactorEnabled] = @p12, [UserName] = @p13
WHERE [Id] = @p14 AND [ConcurrencyStamp] = @p15;
SELECT @@ROWCOUNT;"
2019-04-18 16:26:50.969 +02:00 [Information] Executed action method "SogyoLunchApp.APIService.AuthController.ExternalLogin (Services)", returned result "Microsoft.AspNetCore.Mvc.OkObjectResult" in 347.4611ms.
2019-04-18 16:26:50.970 +02:00 [Information] Executing ObjectResult, writing value of type '"<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"'.
2019-04-18 16:26:50.972 +02:00 [Information] Executed action "SogyoLunchApp.APIService.AuthController.ExternalLogin (Services)" in 361.1943ms
2019-04-18 16:26:50.974 +02:00 [Information] Request finished in 371.5809ms 200 application/json; charset=utf-8
2019-04-18 16:26:51.227 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 16:26:51.235 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:26:51.247 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:26:51.272 +02:00 [Information] Request finished in 45.3037ms 204 
2019-04-18 16:26:51.284 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 16:26:51.286 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:26:51.287 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:26:51.288 +02:00 [Information] Successfully validated the token.
2019-04-18 16:26:51.288 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:26:51.289 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:26:51.295 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:26:51.305 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:26:51.307 +02:00 [Information] Route matched with "{action = \"getBezorgdagen\", controller = \"Bezorgdag\"}". Executing action "Services.APIService.BezorgdagController.getBezorgdagen (Services)"
2019-04-18 16:26:51.309 +02:00 [Information] Authorization was successful.
2019-04-18 16:26:51.309 +02:00 [Information] Executing action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)" with arguments (["40"]) - Validation state: Valid
2019-04-18 16:26:51.313 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.319 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.322 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.324 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.326 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.328 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.331 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.335 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.337 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.340 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.342 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.345 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.347 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.351 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.353 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.356 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.359 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.361 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.364 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.367 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.370 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.372 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.374 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.376 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.378 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.381 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.383 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.386 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.388 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.390 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.393 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.395 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.400 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.403 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.406 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.409 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.411 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.414 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.416 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.419 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.422 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.425 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.427 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.431 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.434 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.437 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.439 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.442 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.445 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.447 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.450 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.453 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.455 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.457 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.459 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.462 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.464 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.467 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.469 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.471 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.473 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.476 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.478 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.481 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.483 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.485 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.488 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.490 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.492 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.496 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.499 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.501 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.504 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.507 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.510 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.512 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.515 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.518 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.520 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.522 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.524 +02:00 [Information] Executed action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 213.3063ms.
2019-04-18 16:26:51.525 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[System.DateTime, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"'.
2019-04-18 16:26:51.527 +02:00 [Information] Executed action "Services.APIService.BezorgdagController.getBezorgdagen (Services)" in 218.255ms
2019-04-18 16:26:51.528 +02:00 [Information] Request finished in 243.5119ms 200 application/json; charset=utf-8
2019-04-18 16:26:51.544 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 16:26:51.544 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 16:26:51.546 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:26:51.547 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:26:51.554 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:26:51.556 +02:00 [Information] Request finished in 11.6706ms 204 
2019-04-18 16:26:51.557 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:26:51.558 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 16:26:51.558 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 16:26:51.558 +02:00 [Information] Request finished in 13.9484ms 204 
2019-04-18 16:26:51.574 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 16:26:51.575 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:26:51.576 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 16:26:51.575 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:26:51.577 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:26:51.577 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:26:51.578 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:26:51.579 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:26:51.582 +02:00 [Information] Request finished in 23.7117ms 204 
2019-04-18 16:26:51.583 +02:00 [Information] Request finished in 24.8755ms 204 
2019-04-18 16:26:51.585 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:26:51.587 +02:00 [Information] Successfully validated the token.
2019-04-18 16:26:51.596 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 16:26:51.606 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:26:51.607 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:26:51.608 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 16:26:51.608 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:26:51.610 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:26:51.610 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:26:51.610 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:26:51.611 +02:00 [Information] Successfully validated the token.
2019-04-18 16:26:51.612 +02:00 [Information] Successfully validated the token.
2019-04-18 16:26:51.613 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:26:51.614 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:26:51.617 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:26:51.617 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:26:51.617 +02:00 [Information] Successfully validated the token.
2019-04-18 16:26:51.618 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:26:51.621 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:26:51.622 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:26:51.623 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:26:51.662 +02:00 [Information] Route matched with "{action = \"GetWinkelBijDatum\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)"
2019-04-18 16:26:51.662 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:26:51.664 +02:00 [Information] Authorization was successful.
2019-04-18 16:26:51.686 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:26:51.686 +02:00 [Information] Executed DbCommand ("23"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:26:51.688 +02:00 [Information] Executing action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 16:26:51.703 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.703 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:26:51.704 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:26:51.712 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.712 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 16:26:51.712 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:26:51.719 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:26:51.720 +02:00 [Information] Executed action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 18.7334ms.
2019-04-18 16:26:51.723 +02:00 [Information] Route matched with "{action = \"GetDeadlinePerDatum\", controller = \"Deadline\"}". Executing action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)"
2019-04-18 16:26:51.724 +02:00 [Information] Authorization was successful.
2019-04-18 16:26:51.727 +02:00 [Information] Route matched with "{action = \"GetProductenbijDatum\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenbijDatum (Services)"
2019-04-18 16:26:51.728 +02:00 [Information] Executing JsonResult, writing value of type '"SogyoLunchApp.Winkel"'.
2019-04-18 16:26:51.729 +02:00 [Information] Authorization was successful.
2019-04-18 16:26:51.730 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 16:26:51.732 +02:00 [Information] Authorization was successful.
2019-04-18 16:26:51.733 +02:00 [Information] Executed action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" in 69.1956ms
2019-04-18 16:26:51.733 +02:00 [Information] Executing action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 16:26:51.736 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.6834ms.
2019-04-18 16:26:51.737 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenbijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 16:26:51.738 +02:00 [Information] Request finished in 162.1338ms 200 application/json; charset=utf-8
2019-04-18 16:26:51.740 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.741 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:26:51.746 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:51.777 +02:00 [Information] Executed DbCommand ("29"ms) [Parameters=["@__bezorgdag_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [x].[Dag], [x].[BestelDeadlineDag], [x].[BestelDeadlineTijd], [x].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [x]
WHERE [x].[Dag] = @__bezorgdag_0"
2019-04-18 16:26:51.777 +02:00 [Information] Executed DbCommand ("25"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:51.778 +02:00 [Information] Executed DbCommand ("28"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 16:26:51.779 +02:00 [Information] Executed action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 39.6358ms.
2019-04-18 16:26:51.787 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 16:26:51.788 +02:00 [Information] Executing JsonResult, writing value of type '"System.DateTime"'.
2019-04-18 16:26:51.790 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenbijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 46.9537ms.
2019-04-18 16:26:51.791 +02:00 [Information] Executed action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" in 61.5721ms
2019-04-18 16:26:51.794 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:26:51.794 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x.ProductenPerBestellingen].[BestellingId], [x.ProductenPerBestellingen].[ProductId], [x.ProductenPerBestellingen].[Aantal], [x.ProductenPerBestellingen].[Notitie], [x.ProductenPerBestellingen].[Prijs], [p.Product].[ProductId], [p.Product].[CategorieId], [p.Product].[Naam], [p.Product].[Prijs], [p.Product].[WinkelId]
FROM [ProductenPerBestellingen] AS [x.ProductenPerBestellingen]
INNER JOIN [Producten] AS [p.Product] ON [x.ProductenPerBestellingen].[ProductId] = [p.Product].[ProductId]
INNER JOIN (
    SELECT [x0].[BestellingId]
    FROM [Bestellingen] AS [x0]
    WHERE (CONVERT(date, [x0].[Bezorgdatum]) = @__date_Date_0) AND ([x0].[GebruikerId] = @__gebruikerId_1)
) AS [t] ON [x.ProductenPerBestellingen].[BestellingId] = [t].[BestellingId]
ORDER BY [t].[BestellingId]"
2019-04-18 16:26:51.796 +02:00 [Information] Request finished in 200.2003ms 200 application/json; charset=utf-8
2019-04-18 16:26:51.797 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenbijDatum (Services)" in 65.3883ms
2019-04-18 16:26:51.801 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 77.1859ms
2019-04-18 16:26:51.802 +02:00 [Information] Request finished in 194.3432ms 200 application/json; charset=utf-8
2019-04-18 16:26:51.803 +02:00 [Information] Request finished in 229.3968ms 200 application/json; charset=utf-8
2019-04-18 16:26:54.892 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 16:26:54.900 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:26:54.901 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:26:54.902 +02:00 [Information] Request finished in 9.846ms 204 
2019-04-18 16:26:54.929 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 16:26:54.930 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:26:54.933 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:26:54.935 +02:00 [Information] Successfully validated the token.
2019-04-18 16:26:54.936 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:26:54.939 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:26:54.946 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:26:54.988 +02:00 [Information] Executed DbCommand ("25"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:26:55.029 +02:00 [Information] Route matched with "{action = \"getBezorgdagen\", controller = \"Bezorgdag\"}". Executing action "Services.APIService.BezorgdagController.getBezorgdagen (Services)"
2019-04-18 16:26:55.030 +02:00 [Information] Authorization was successful.
2019-04-18 16:26:55.044 +02:00 [Information] Executing action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)" with arguments (["40"]) - Validation state: Valid
2019-04-18 16:26:55.046 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.052 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.056 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.058 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.060 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.063 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.071 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.074 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.076 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.079 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.087 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.090 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.092 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.095 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.097 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.102 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.106 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.108 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.110 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.112 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.114 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.120 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.123 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.125 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.127 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.129 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.134 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.137 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.140 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.142 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.144 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.155 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.157 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.160 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.163 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.169 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.171 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.174 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.176 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.178 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.187 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.190 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.196 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.205 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.207 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.210 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.213 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.221 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.223 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.226 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.229 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.234 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.237 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.242 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.244 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.247 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.250 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.253 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.255 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.263 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.266 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.268 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.271 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.273 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.276 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.278 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.281 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.283 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.286 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.289 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.291 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.294 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.296 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.299 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.302 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.304 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.306 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.309 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.311 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.314 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.316 +02:00 [Information] Executed action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 270.1343ms.
2019-04-18 16:26:55.317 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[System.DateTime, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"'.
2019-04-18 16:26:55.318 +02:00 [Information] Executed action "Services.APIService.BezorgdagController.getBezorgdagen (Services)" in 288.2984ms
2019-04-18 16:26:55.320 +02:00 [Information] Request finished in 391.0076ms 200 application/json; charset=utf-8
2019-04-18 16:26:55.362 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 16:26:55.362 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 16:26:55.363 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:26:55.363 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:26:55.364 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:26:55.366 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:26:55.366 +02:00 [Information] Request finished in 4.979ms 204 
2019-04-18 16:26:55.368 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 16:26:55.369 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 16:26:55.370 +02:00 [Information] Request finished in 7.7992ms 204 
2019-04-18 16:26:55.372 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:26:55.376 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:26:55.379 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 16:26:55.380 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 16:26:55.380 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:26:55.381 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:26:55.383 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:26:55.386 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:26:55.391 +02:00 [Information] Request finished in 22.5104ms 204 
2019-04-18 16:26:55.393 +02:00 [Information] Request finished in 23.7871ms 204 
2019-04-18 16:26:55.397 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:26:55.399 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:26:55.400 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 16:26:55.402 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 16:26:55.423 +02:00 [Information] Successfully validated the token.
2019-04-18 16:26:55.424 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:26:55.425 +02:00 [Information] Successfully validated the token.
2019-04-18 16:26:55.425 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:26:55.425 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:26:55.426 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:26:55.427 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:26:55.428 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:26:55.430 +02:00 [Information] Successfully validated the token.
2019-04-18 16:26:55.433 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:26:55.434 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:26:55.436 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:26:55.452 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:26:55.452 +02:00 [Information] Executed DbCommand ("16"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:26:55.455 +02:00 [Information] Successfully validated the token.
2019-04-18 16:26:55.459 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:26:55.460 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:26:55.464 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:26:55.465 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:26:55.469 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:26:55.469 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:26:55.474 +02:00 [Information] Route matched with "{action = \"GetWinkelBijDatum\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)"
2019-04-18 16:26:55.475 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:26:55.475 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:26:55.477 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 16:26:55.486 +02:00 [Information] Authorization was successful.
2019-04-18 16:26:55.488 +02:00 [Information] Route matched with "{action = \"GetDeadlinePerDatum\", controller = \"Deadline\"}". Executing action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)"
2019-04-18 16:26:55.489 +02:00 [Information] Authorization was successful.
2019-04-18 16:26:55.489 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:26:55.490 +02:00 [Information] Executing action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 16:26:55.490 +02:00 [Information] Authorization was successful.
2019-04-18 16:26:55.491 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 16:26:55.493 +02:00 [Information] Route matched with "{action = \"GetProductenbijDatum\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenbijDatum (Services)"
2019-04-18 16:26:55.495 +02:00 [Information] Executing action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 16:26:55.495 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.496 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1369ms.
2019-04-18 16:26:55.497 +02:00 [Information] Authorization was successful.
2019-04-18 16:26:55.501 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.502 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.502 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:26:55.503 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenbijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 16:26:55.505 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__bezorgdag_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [x].[Dag], [x].[BestelDeadlineDag], [x].[BestelDeadlineTijd], [x].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [x]
WHERE [x].[Dag] = @__bezorgdag_0"
2019-04-18 16:26:55.507 +02:00 [Information] Executed action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 12.5432ms.
2019-04-18 16:26:55.508 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 16:26:55.509 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 16:26:55.510 +02:00 [Information] Executed action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 11.4339ms.
2019-04-18 16:26:55.511 +02:00 [Information] Executing JsonResult, writing value of type '"SogyoLunchApp.Winkel"'.
2019-04-18 16:26:55.515 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x.ProductenPerBestellingen].[BestellingId], [x.ProductenPerBestellingen].[ProductId], [x.ProductenPerBestellingen].[Aantal], [x.ProductenPerBestellingen].[Notitie], [x.ProductenPerBestellingen].[Prijs], [p.Product].[ProductId], [p.Product].[CategorieId], [p.Product].[Naam], [p.Product].[Prijs], [p.Product].[WinkelId]
FROM [ProductenPerBestellingen] AS [x.ProductenPerBestellingen]
INNER JOIN [Producten] AS [p.Product] ON [x.ProductenPerBestellingen].[ProductId] = [p.Product].[ProductId]
INNER JOIN (
    SELECT [x0].[BestellingId]
    FROM [Bestellingen] AS [x0]
    WHERE (CONVERT(date, [x0].[Bezorgdatum]) = @__date_Date_0) AND ([x0].[GebruikerId] = @__gebruikerId_1)
) AS [t] ON [x.ProductenPerBestellingen].[BestellingId] = [t].[BestellingId]
ORDER BY [t].[BestellingId]"
2019-04-18 16:26:55.517 +02:00 [Information] Executing JsonResult, writing value of type '"System.DateTime"'.
2019-04-18 16:26:55.518 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 16:26:55.518 +02:00 [Information] Executed action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" in 32.3061ms
2019-04-18 16:26:55.521 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 32.0252ms
2019-04-18 16:26:55.521 +02:00 [Information] Executed action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" in 30.9458ms
2019-04-18 16:26:55.525 +02:00 [Information] Request finished in 145.5291ms 200 application/json; charset=utf-8
2019-04-18 16:26:55.525 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 16:26:55.526 +02:00 [Information] Request finished in 146.8017ms 200 application/json; charset=utf-8
2019-04-18 16:26:55.527 +02:00 [Information] Request finished in 127.0521ms 200 application/json; charset=utf-8
2019-04-18 16:26:55.530 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenbijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 21.0809ms.
2019-04-18 16:26:55.532 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:26:55.533 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenbijDatum (Services)" in 36.1182ms
2019-04-18 16:26:55.534 +02:00 [Information] Request finished in 132.9447ms 200 application/json; charset=utf-8
2019-04-18 16:26:58.204 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:26:58.204 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:26:58.205 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:26:58.206 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:26:58.207 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:26:58.207 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:26:58.208 +02:00 [Information] Request finished in 3.8137ms 204 
2019-04-18 16:26:58.209 +02:00 [Information] Request finished in 4.5493ms 204 
2019-04-18 16:26:58.212 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:26:58.215 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:26:58.222 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:26:58.223 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:26:58.223 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:26:58.224 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:26:58.225 +02:00 [Information] Successfully validated the token.
2019-04-18 16:26:58.226 +02:00 [Information] Successfully validated the token.
2019-04-18 16:26:58.226 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:26:58.227 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:26:58.228 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:26:58.228 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:26:58.237 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:26:58.241 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:26:58.246 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:26:58.252 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:26:58.255 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:26:58.256 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:26:58.256 +02:00 [Information] Authorization was successful.
2019-04-18 16:26:58.257 +02:00 [Information] Authorization was successful.
2019-04-18 16:26:58.258 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 16:26:58.258 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:26:58.259 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0058ms.
2019-04-18 16:26:58.260 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1932ms.
2019-04-18 16:26:58.261 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:26:58.263 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:26:58.267 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 16:26:58.269 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 12.9437ms
2019-04-18 16:26:58.271 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:26:58.271 +02:00 [Information] Request finished in 59.1883ms 200 application/json; charset=utf-8
2019-04-18 16:26:58.273 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 15.7663ms
2019-04-18 16:26:58.274 +02:00 [Information] Request finished in 60.3182ms 200 application/json; charset=utf-8
2019-04-18 16:27:12.045 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:27:12.046 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:27:12.047 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:27:12.051 +02:00 [Information] Request finished in 6.3085ms 204 
2019-04-18 16:27:12.055 +02:00 [Information] Request starting HTTP/1.1 POST http://localhost:5000/sogyolunchapi/categorie application/json;charset=UTF-8 61
2019-04-18 16:27:12.057 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:27:12.058 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:27:12.059 +02:00 [Information] Successfully validated the token.
2019-04-18 16:27:12.060 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:27:12.062 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:27:12.070 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:27:12.076 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:27:12.079 +02:00 [Information] Route matched with "{action = \"AddCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.AddCategorie (Services)"
2019-04-18 16:27:12.081 +02:00 [Information] Authorization was successful.
2019-04-18 16:27:12.085 +02:00 [Information] Executing action method "Services.APIService.CategorieController.AddCategorie (Services)" with arguments (["SogyoLunchApp.Categorie"]) - Validation state: Valid
2019-04-18 16:27:12.106 +02:00 [Information] Executed DbCommand ("16"ms) [Parameters=["@p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
INSERT INTO [Categorien] ([CategorieNaam], [VolgordeNummer], [WinkelId])
VALUES (@p0, @p1, @p2);
SELECT [CategorieId]
FROM [Categorien]
WHERE @@ROWCOUNT = 1 AND [CategorieId] = scope_identity();"
2019-04-18 16:27:12.110 +02:00 [Information] Executed action method "Services.APIService.CategorieController.AddCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 23.1912ms.
2019-04-18 16:27:12.111 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 16:27:12.112 +02:00 [Information] Executed action "Services.APIService.CategorieController.AddCategorie (Services)" in 31.3329ms
2019-04-18 16:27:12.113 +02:00 [Information] Request finished in 58.3525ms 200 
2019-04-18 16:27:12.119 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:27:12.121 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:27:12.122 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:27:12.123 +02:00 [Information] Request finished in 3.5624ms 204 
2019-04-18 16:27:12.126 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:27:12.127 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:27:12.128 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:27:12.129 +02:00 [Information] Successfully validated the token.
2019-04-18 16:27:12.129 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:27:12.130 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:27:12.136 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:27:12.141 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:27:12.143 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:27:12.144 +02:00 [Information] Authorization was successful.
2019-04-18 16:27:12.144 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:27:12.145 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.055ms.
2019-04-18 16:27:12.147 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:27:12.153 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:27:12.155 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 11.2245ms
2019-04-18 16:27:12.156 +02:00 [Information] Request finished in 30.5854ms 200 application/json; charset=utf-8
2019-04-18 16:27:27.973 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:27:27.975 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:27:27.976 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:27:27.977 +02:00 [Information] Request finished in 3.6685ms 204 
2019-04-18 16:27:27.993 +02:00 [Information] Request starting HTTP/1.1 PUT http://localhost:5000/sogyolunchapi/categorie application/json;charset=UTF-8 43
2019-04-18 16:27:27.995 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:27:27.996 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:27:27.997 +02:00 [Information] Successfully validated the token.
2019-04-18 16:27:28.000 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:27:28.002 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:27:28.007 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:27:28.011 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:27:28.014 +02:00 [Information] Route matched with "{action = \"UpdateCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.UpdateCategorie (Services)"
2019-04-18 16:27:28.017 +02:00 [Information] Authorization was successful.
2019-04-18 16:27:28.068 +02:00 [Information] Executing ObjectResult, writing value of type '"Microsoft.AspNetCore.Mvc.SerializableError"'.
2019-04-18 16:27:28.076 +02:00 [Information] Executed action "Services.APIService.CategorieController.UpdateCategorie (Services)" in 59.4497ms
2019-04-18 16:27:28.078 +02:00 [Information] Request finished in 84.683ms 400 application/json; charset=utf-8
2019-04-18 16:27:51.443 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:27:51.443 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:27:51.444 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:27:51.445 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:27:51.449 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:27:51.450 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:27:51.451 +02:00 [Information] Request finished in 8.5082ms 204 
2019-04-18 16:27:51.452 +02:00 [Information] Request finished in 9.5913ms 204 
2019-04-18 16:27:51.466 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:27:51.466 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:27:51.467 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:27:51.468 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:27:51.468 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:27:51.469 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:27:51.470 +02:00 [Information] Successfully validated the token.
2019-04-18 16:27:51.471 +02:00 [Information] Successfully validated the token.
2019-04-18 16:27:51.472 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:27:51.472 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:27:51.473 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:27:51.474 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:27:51.484 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:27:51.489 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:27:51.494 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:27:51.499 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:27:51.499 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:27:51.501 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:27:51.501 +02:00 [Information] Authorization was successful.
2019-04-18 16:27:51.502 +02:00 [Information] Authorization was successful.
2019-04-18 16:27:51.503 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 16:27:51.503 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:27:51.504 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0064ms.
2019-04-18 16:27:51.505 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0773ms.
2019-04-18 16:27:51.506 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:27:51.507 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:27:51.509 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 16:27:51.510 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:27:51.511 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 9.5193ms
2019-04-18 16:27:51.513 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 10.4188ms
2019-04-18 16:27:51.513 +02:00 [Information] Request finished in 47.7751ms 200 application/json; charset=utf-8
2019-04-18 16:27:51.516 +02:00 [Information] Request finished in 50.1311ms 200 application/json; charset=utf-8
2019-04-18 16:28:24.307 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:28:24.307 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:28:24.340 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:28:24.341 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:28:24.342 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:28:24.343 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:28:24.343 +02:00 [Information] Request finished in 36.5752ms 204 
2019-04-18 16:28:24.344 +02:00 [Information] Request finished in 37.0426ms 204 
2019-04-18 16:28:24.358 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:28:24.358 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:28:24.359 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:28:24.359 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:28:24.360 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:28:24.361 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:28:24.361 +02:00 [Information] Successfully validated the token.
2019-04-18 16:28:24.362 +02:00 [Information] Successfully validated the token.
2019-04-18 16:28:24.362 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:28:24.363 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:28:24.364 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:28:24.364 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:28:24.369 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:28:24.369 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:28:24.374 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:28:24.375 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:28:24.376 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:28:24.378 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:28:24.378 +02:00 [Information] Authorization was successful.
2019-04-18 16:28:24.379 +02:00 [Information] Authorization was successful.
2019-04-18 16:28:24.380 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:28:24.380 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 16:28:24.382 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0998ms.
2019-04-18 16:28:24.383 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:28:24.384 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0027ms.
2019-04-18 16:28:24.386 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:28:24.387 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:28:24.387 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 16:28:24.389 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 10.3402ms
2019-04-18 16:28:24.390 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 10.8572ms
2019-04-18 16:28:24.391 +02:00 [Information] Request finished in 33.3485ms 200 application/json; charset=utf-8
2019-04-18 16:28:24.392 +02:00 [Information] Request finished in 34.469ms 200 application/json; charset=utf-8
2019-04-18 16:28:29.583 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:28:29.583 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:28:30.087 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:28:30.090 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:28:30.090 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:28:30.091 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:28:30.092 +02:00 [Information] Request finished in 508.6788ms 204 
2019-04-18 16:28:30.092 +02:00 [Information] Request finished in 508.967ms 204 
2019-04-18 16:28:30.103 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:28:30.103 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:28:30.104 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:28:30.105 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:28:30.105 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:28:30.106 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:28:30.107 +02:00 [Information] Successfully validated the token.
2019-04-18 16:28:30.108 +02:00 [Information] Successfully validated the token.
2019-04-18 16:28:30.108 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:28:30.109 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:28:30.110 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:28:30.111 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:28:30.140 +02:00 [Information] Executed DbCommand ("27"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:28:30.142 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:28:30.178 +02:00 [Information] Executed DbCommand ("28"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:28:30.193 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:28:30.203 +02:00 [Information] Executed DbCommand ("17"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:28:30.207 +02:00 [Information] Authorization was successful.
2019-04-18 16:28:30.209 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:28:30.209 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 16:28:30.211 +02:00 [Information] Authorization was successful.
2019-04-18 16:28:30.211 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0071ms.
2019-04-18 16:28:30.212 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:28:30.213 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:28:30.216 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1178ms.
2019-04-18 16:28:30.218 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:28:30.221 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 16:28:30.223 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 16.5707ms
2019-04-18 16:28:30.227 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:28:30.233 +02:00 [Information] Request finished in 129.7677ms 200 application/json; charset=utf-8
2019-04-18 16:28:30.235 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 24.1646ms
2019-04-18 16:28:30.236 +02:00 [Information] Request finished in 132.7511ms 200 application/json; charset=utf-8
2019-04-18 16:28:41.080 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:28:41.091 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:28:41.091 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:28:41.092 +02:00 [Information] Request finished in 12.1585ms 204 
2019-04-18 16:28:41.122 +02:00 [Information] Request starting HTTP/1.1 PUT http://localhost:5000/sogyolunchapi/categorie application/json;charset=UTF-8 75
2019-04-18 16:28:41.138 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:28:41.140 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:28:41.142 +02:00 [Information] Successfully validated the token.
2019-04-18 16:28:41.143 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:28:41.145 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:28:41.153 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:28:41.159 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:28:41.161 +02:00 [Information] Route matched with "{action = \"UpdateCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.UpdateCategorie (Services)"
2019-04-18 16:28:41.162 +02:00 [Information] Authorization was successful.
2019-04-18 16:28:41.164 +02:00 [Information] Executing action method "Services.APIService.CategorieController.UpdateCategorie (Services)" with arguments (["SogyoLunchApp.Categorie"]) - Validation state: Valid
2019-04-18 16:28:41.174 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [Categorien] SET [CategorieNaam] = @p0, [VolgordeNummer] = @p1, [WinkelId] = @p2
WHERE [CategorieId] = @p3;
SELECT @@ROWCOUNT;"
2019-04-18 16:28:41.176 +02:00 [Information] Executed action method "Services.APIService.CategorieController.UpdateCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 7.5732ms.
2019-04-18 16:28:41.178 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 16:28:41.178 +02:00 [Information] Executed action "Services.APIService.CategorieController.UpdateCategorie (Services)" in 15.9125ms
2019-04-18 16:28:41.179 +02:00 [Information] Request finished in 57.7453ms 200 
2019-04-18 16:29:28.272 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:29:28.272 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:29:28.274 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:29:28.275 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:29:28.276 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:29:28.277 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:29:28.278 +02:00 [Information] Request finished in 7.1572ms 204 
2019-04-18 16:29:28.280 +02:00 [Information] Request finished in 7.8739ms 204 
2019-04-18 16:29:28.528 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:29:28.528 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:29:28.531 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:29:28.536 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:29:28.536 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:29:28.537 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:29:28.538 +02:00 [Information] Successfully validated the token.
2019-04-18 16:29:28.542 +02:00 [Information] Successfully validated the token.
2019-04-18 16:29:28.543 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:29:28.548 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:29:28.557 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:29:28.558 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:29:28.578 +02:00 [Information] Executed DbCommand ("18"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:29:28.594 +02:00 [Information] Executed DbCommand ("12"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:29:28.605 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:29:28.606 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:29:28.608 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:29:28.610 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:29:28.610 +02:00 [Information] Authorization was successful.
2019-04-18 16:29:28.611 +02:00 [Information] Authorization was successful.
2019-04-18 16:29:28.612 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:29:28.612 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 16:29:28.613 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1005ms.
2019-04-18 16:29:28.614 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0052ms.
2019-04-18 16:29:28.623 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:29:28.624 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:29:28.628 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:29:28.628 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 16:29:28.630 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 20.0333ms
2019-04-18 16:29:28.632 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 21.0229ms
2019-04-18 16:29:28.636 +02:00 [Information] Request finished in 107.9543ms 200 application/json; charset=utf-8
2019-04-18 16:29:28.637 +02:00 [Information] Request finished in 108.5747ms 200 application/json; charset=utf-8
2019-04-18 16:35:02.404 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:35:02.408 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:35:02.417 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:35:02.418 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:35:02.419 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:35:02.420 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:35:02.420 +02:00 [Information] Request finished in 16.0344ms 204 
2019-04-18 16:35:02.421 +02:00 [Information] Request finished in 12.8367ms 204 
2019-04-18 16:35:02.671 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:35:02.671 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:35:02.680 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:35:02.681 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:35:02.682 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:35:02.682 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:35:02.683 +02:00 [Information] Successfully validated the token.
2019-04-18 16:35:02.684 +02:00 [Information] Successfully validated the token.
2019-04-18 16:35:02.686 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:35:02.687 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:35:02.688 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:35:02.694 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:35:02.791 +02:00 [Information] Executed DbCommand ("24"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:35:02.805 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:35:02.808 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:35:02.812 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:35:02.814 +02:00 [Information] Authorization was successful.
2019-04-18 16:35:02.816 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:35:02.816 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 16:35:02.818 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:35:02.819 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0154ms.
2019-04-18 16:35:02.820 +02:00 [Information] Authorization was successful.
2019-04-18 16:35:02.821 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:35:02.822 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:35:02.825 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0886ms.
2019-04-18 16:35:02.826 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:35:02.826 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 16:35:02.829 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 14.9322ms
2019-04-18 16:35:02.835 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:35:02.836 +02:00 [Information] Request finished in 165.0742ms 200 application/json; charset=utf-8
2019-04-18 16:35:02.843 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 23.1374ms
2019-04-18 16:35:02.848 +02:00 [Information] Request finished in 176.7006ms 200 application/json; charset=utf-8
2019-04-18 16:36:00.414 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:36:00.414 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:36:00.426 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:36:00.427 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:36:00.427 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:36:00.428 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:36:00.429 +02:00 [Information] Request finished in 14.9083ms 204 
2019-04-18 16:36:00.429 +02:00 [Information] Request finished in 15.2244ms 204 
2019-04-18 16:36:00.869 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:36:00.869 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:36:00.870 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:36:00.871 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:36:00.878 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:36:00.879 +02:00 [Information] Successfully validated the token.
2019-04-18 16:36:00.880 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:36:00.881 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:36:00.881 +02:00 [Information] Successfully validated the token.
2019-04-18 16:36:00.882 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:36:00.882 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:36:00.885 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:36:00.905 +02:00 [Information] Executed DbCommand ("20"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:36:00.909 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:36:00.936 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:36:00.936 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:36:00.943 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:36:00.943 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:36:00.945 +02:00 [Information] Authorization was successful.
2019-04-18 16:36:00.946 +02:00 [Information] Authorization was successful.
2019-04-18 16:36:00.946 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:36:00.947 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 16:36:00.948 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0964ms.
2019-04-18 16:36:00.949 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0031ms.
2019-04-18 16:36:00.950 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:36:00.951 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:36:00.954 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 16:36:00.955 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:36:00.959 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 13.6598ms
2019-04-18 16:36:00.961 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 16.5928ms
2019-04-18 16:36:00.962 +02:00 [Information] Request finished in 93.0023ms 200 application/json; charset=utf-8
2019-04-18 16:36:00.963 +02:00 [Information] Request finished in 94.6638ms 200 application/json; charset=utf-8
2019-04-18 16:37:03.504 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:37:03.504 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:37:03.506 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:37:03.507 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:37:03.508 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:37:03.509 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:37:03.511 +02:00 [Information] Request finished in 6.8315ms 204 
2019-04-18 16:37:03.512 +02:00 [Information] Request finished in 8.4837ms 204 
2019-04-18 16:37:03.797 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:37:03.797 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:37:03.798 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:37:03.799 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:37:03.800 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:37:03.801 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:37:03.802 +02:00 [Information] Successfully validated the token.
2019-04-18 16:37:03.802 +02:00 [Information] Successfully validated the token.
2019-04-18 16:37:03.803 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:37:03.803 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:37:03.805 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:37:03.807 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:37:03.819 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:37:03.820 +02:00 [Information] Executed DbCommand ("9"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:37:03.866 +02:00 [Information] Executed DbCommand ("34"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:37:03.867 +02:00 [Information] Executed DbCommand ("12"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:37:03.870 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:37:03.871 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:37:03.872 +02:00 [Information] Authorization was successful.
2019-04-18 16:37:03.879 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:37:03.880 +02:00 [Information] Authorization was successful.
2019-04-18 16:37:03.881 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1111ms.
2019-04-18 16:37:03.881 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 16:37:03.882 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:37:03.884 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0085ms.
2019-04-18 16:37:03.886 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:37:03.899 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 16:37:03.903 +02:00 [Information] Executed DbCommand ("14"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:37:03.905 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 24.8279ms
2019-04-18 16:37:03.910 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 38.4253ms
2019-04-18 16:37:03.911 +02:00 [Information] Request finished in 114.0589ms 200 application/json; charset=utf-8
2019-04-18 16:37:03.913 +02:00 [Information] Request finished in 115.7197ms 200 application/json; charset=utf-8
2019-04-18 16:37:27.053 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:37:27.054 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:37:27.055 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:37:27.059 +02:00 [Information] Request finished in 6.2869ms 204 
2019-04-18 16:37:27.075 +02:00 [Information] Request starting HTTP/1.1 PUT http://localhost:5000/sogyolunchapi/categorie application/json;charset=UTF-8 75
2019-04-18 16:37:27.079 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:37:27.080 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:37:27.082 +02:00 [Information] Successfully validated the token.
2019-04-18 16:37:27.082 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:37:27.084 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:37:27.087 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:37:27.095 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:37:27.098 +02:00 [Information] Route matched with "{action = \"UpdateCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.UpdateCategorie (Services)"
2019-04-18 16:37:27.099 +02:00 [Information] Authorization was successful.
2019-04-18 16:37:27.102 +02:00 [Information] Executing action method "Services.APIService.CategorieController.UpdateCategorie (Services)" with arguments (["SogyoLunchApp.Categorie"]) - Validation state: Valid
2019-04-18 16:37:27.113 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [Categorien] SET [CategorieNaam] = @p0, [VolgordeNummer] = @p1, [WinkelId] = @p2
WHERE [CategorieId] = @p3;
SELECT @@ROWCOUNT;"
2019-04-18 16:37:27.115 +02:00 [Information] Executed action method "Services.APIService.CategorieController.UpdateCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 11.3673ms.
2019-04-18 16:37:27.116 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 16:37:27.117 +02:00 [Information] Executed action "Services.APIService.CategorieController.UpdateCategorie (Services)" in 18.2678ms
2019-04-18 16:37:27.118 +02:00 [Information] Request finished in 43.1224ms 200 
2019-04-18 16:37:36.504 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:37:36.505 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:37:36.508 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:37:36.508 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:37:36.509 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:37:36.510 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:37:36.510 +02:00 [Information] Request finished in 5.947ms 204 
2019-04-18 16:37:36.511 +02:00 [Information] Request finished in 6.3639ms 204 
2019-04-18 16:37:36.752 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:37:36.752 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:37:36.760 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:37:36.761 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:37:36.762 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:37:36.763 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:37:36.763 +02:00 [Information] Successfully validated the token.
2019-04-18 16:37:36.764 +02:00 [Information] Successfully validated the token.
2019-04-18 16:37:36.765 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:37:36.766 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:37:36.768 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:37:36.769 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:37:36.795 +02:00 [Information] Executed DbCommand ("23"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:37:36.796 +02:00 [Information] Executed DbCommand ("12"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:37:36.819 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:37:36.828 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:37:36.831 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:37:36.832 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:37:36.833 +02:00 [Information] Authorization was successful.
2019-04-18 16:37:36.834 +02:00 [Information] Authorization was successful.
2019-04-18 16:37:36.835 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 16:37:36.835 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:37:36.836 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0059ms.
2019-04-18 16:37:36.837 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.161ms.
2019-04-18 16:37:36.844 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:37:36.847 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 16:37:36.847 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:37:36.849 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 16.2974ms
2019-04-18 16:37:36.851 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:37:36.851 +02:00 [Information] Request finished in 99.1615ms 200 application/json; charset=utf-8
2019-04-18 16:37:36.853 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 19.1265ms
2019-04-18 16:37:36.855 +02:00 [Information] Request finished in 103.7491ms 200 application/json; charset=utf-8
2019-04-18 16:38:00.478 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:38:00.479 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:38:00.481 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:38:00.482 +02:00 [Information] Request finished in 4.0597ms 204 
2019-04-18 16:38:00.490 +02:00 [Information] Request starting HTTP/1.1 PUT http://localhost:5000/sogyolunchapi/categorie application/json;charset=UTF-8 73
2019-04-18 16:38:00.491 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:38:00.492 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:38:00.493 +02:00 [Information] Successfully validated the token.
2019-04-18 16:38:00.495 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:38:00.497 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:38:00.502 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:38:00.510 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:38:00.513 +02:00 [Information] Route matched with "{action = \"UpdateCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.UpdateCategorie (Services)"
2019-04-18 16:38:00.514 +02:00 [Information] Authorization was successful.
2019-04-18 16:38:00.515 +02:00 [Information] Executing action method "Services.APIService.CategorieController.UpdateCategorie (Services)" with arguments (["SogyoLunchApp.Categorie"]) - Validation state: Valid
2019-04-18 16:38:00.518 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [Categorien] SET [CategorieNaam] = @p0, [VolgordeNummer] = @p1, [WinkelId] = @p2
WHERE [CategorieId] = @p3;
SELECT @@ROWCOUNT;"
2019-04-18 16:38:00.520 +02:00 [Information] Executed action method "Services.APIService.CategorieController.UpdateCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 3.293ms.
2019-04-18 16:38:00.521 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 16:38:00.522 +02:00 [Information] Executed action "Services.APIService.CategorieController.UpdateCategorie (Services)" in 7.9618ms
2019-04-18 16:38:00.523 +02:00 [Information] Request finished in 33.5992ms 200 
2019-04-18 16:38:08.680 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:38:08.680 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:38:08.681 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:38:08.683 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:38:08.683 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:38:08.684 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:38:08.685 +02:00 [Information] Request finished in 4.6214ms 204 
2019-04-18 16:38:08.692 +02:00 [Information] Request finished in 11.5174ms 204 
2019-04-18 16:38:08.924 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:38:08.925 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:38:08.925 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:38:08.926 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:38:08.927 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:38:08.929 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:38:08.930 +02:00 [Information] Successfully validated the token.
2019-04-18 16:38:08.932 +02:00 [Information] Successfully validated the token.
2019-04-18 16:38:08.933 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:38:08.933 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:38:08.935 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:38:08.936 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:38:08.945 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:38:08.950 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:38:08.980 +02:00 [Information] Executed DbCommand ("17"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:38:08.980 +02:00 [Information] Executed DbCommand ("17"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:38:08.984 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:38:08.986 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:38:08.987 +02:00 [Information] Authorization was successful.
2019-04-18 16:38:08.988 +02:00 [Information] Authorization was successful.
2019-04-18 16:38:08.989 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 16:38:08.993 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:38:08.994 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0109ms.
2019-04-18 16:38:08.996 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1221ms.
2019-04-18 16:38:08.997 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:38:08.998 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:38:09.001 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 16:38:09.003 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 16.5115ms
2019-04-18 16:38:09.003 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:38:09.009 +02:00 [Information] Request finished in 83.9381ms 200 application/json; charset=utf-8
2019-04-18 16:38:09.014 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 26.8672ms
2019-04-18 16:38:09.016 +02:00 [Information] Request finished in 91.8027ms 200 application/json; charset=utf-8
2019-04-18 16:39:36.400 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:39:36.404 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:39:36.405 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:39:36.409 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:39:36.410 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:39:36.411 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:39:36.411 +02:00 [Information] Request finished in 11.8883ms 204 
2019-04-18 16:39:36.412 +02:00 [Information] Request finished in 7.6772ms 204 
2019-04-18 16:39:36.418 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:39:36.420 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:39:36.421 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:39:36.422 +02:00 [Information] Successfully validated the token.
2019-04-18 16:39:36.423 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:39:36.424 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:39:36.431 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:39:36.431 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:39:36.433 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:39:36.434 +02:00 [Information] Successfully validated the token.
2019-04-18 16:39:36.435 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:39:36.436 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:39:36.436 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:39:36.443 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:39:36.447 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:39:36.448 +02:00 [Information] Authorization was successful.
2019-04-18 16:39:36.449 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 16:39:36.450 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0069ms.
2019-04-18 16:39:36.456 +02:00 [Information] Executed DbCommand ("9"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:39:36.456 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:39:36.460 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 16:39:36.461 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:39:36.462 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 14.7925ms
2019-04-18 16:39:36.464 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:39:36.465 +02:00 [Information] Request finished in 46.7796ms 200 application/json; charset=utf-8
2019-04-18 16:39:36.466 +02:00 [Information] Authorization was successful.
2019-04-18 16:39:36.467 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:39:36.468 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0844ms.
2019-04-18 16:39:36.469 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:39:36.473 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:39:36.475 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 9.159ms
2019-04-18 16:39:36.477 +02:00 [Information] Request finished in 52.9732ms 200 application/json; charset=utf-8
2019-04-18 16:39:45.780 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:39:45.780 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:39:45.787 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:39:45.787 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:39:45.791 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:39:45.791 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:39:45.792 +02:00 [Information] Request finished in 11.5661ms 204 
2019-04-18 16:39:45.793 +02:00 [Information] Request finished in 12.3525ms 204 
2019-04-18 16:39:46.160 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:39:46.160 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:39:46.195 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:39:46.199 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:39:46.215 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:39:46.219 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:39:46.220 +02:00 [Information] Successfully validated the token.
2019-04-18 16:39:46.221 +02:00 [Information] Successfully validated the token.
2019-04-18 16:39:46.226 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:39:46.226 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:39:46.228 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:39:46.229 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:39:46.258 +02:00 [Information] Executed DbCommand ("27"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:39:46.259 +02:00 [Information] Executed DbCommand ("9"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:39:46.268 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:39:46.268 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:39:46.277 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:39:46.281 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:39:46.282 +02:00 [Information] Authorization was successful.
2019-04-18 16:39:46.283 +02:00 [Information] Authorization was successful.
2019-04-18 16:39:46.285 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 16:39:46.285 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:39:46.287 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0094ms.
2019-04-18 16:39:46.292 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.4472ms.
2019-04-18 16:39:46.294 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:39:46.295 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:39:46.298 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 16:39:46.299 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:39:46.300 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 17.5902ms
2019-04-18 16:39:46.302 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 18.907ms
2019-04-18 16:39:46.303 +02:00 [Information] Request finished in 142.4712ms 200 application/json; charset=utf-8
2019-04-18 16:39:46.304 +02:00 [Information] Request finished in 144.1688ms 200 application/json; charset=utf-8
2019-04-18 16:40:00.783 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:40:00.784 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:40:00.785 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:40:00.785 +02:00 [Information] Request finished in 2.6152ms 204 
2019-04-18 16:40:00.790 +02:00 [Information] Request starting HTTP/1.1 PUT http://localhost:5000/sogyolunchapi/categorie application/json;charset=UTF-8 79
2019-04-18 16:40:00.791 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:40:00.791 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:40:00.792 +02:00 [Information] Successfully validated the token.
2019-04-18 16:40:00.793 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:40:00.794 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:40:00.798 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:40:00.811 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:40:00.814 +02:00 [Information] Route matched with "{action = \"UpdateCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.UpdateCategorie (Services)"
2019-04-18 16:40:00.815 +02:00 [Information] Authorization was successful.
2019-04-18 16:40:00.819 +02:00 [Information] Executing ObjectResult, writing value of type '"Microsoft.AspNetCore.Mvc.SerializableError"'.
2019-04-18 16:40:00.821 +02:00 [Information] Executed action "Services.APIService.CategorieController.UpdateCategorie (Services)" in 6.0293ms
2019-04-18 16:40:00.824 +02:00 [Information] Request finished in 34.8866ms 400 application/json; charset=utf-8
2019-04-18 16:44:30.120 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:44:30.131 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:44:30.131 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:44:30.143 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:44:30.144 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:44:30.145 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:44:30.145 +02:00 [Information] Request finished in 25.3267ms 204 
2019-04-18 16:44:30.146 +02:00 [Information] Request finished in 15.7665ms 204 
2019-04-18 16:44:30.160 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:44:30.162 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:44:30.163 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:44:30.164 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:44:30.165 +02:00 [Information] Successfully validated the token.
2019-04-18 16:44:30.165 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:44:30.167 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:44:30.167 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:44:30.168 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:44:30.169 +02:00 [Information] Successfully validated the token.
2019-04-18 16:44:30.171 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:44:30.174 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:44:30.187 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:44:30.192 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:44:30.197 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:44:30.199 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:44:30.199 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:44:30.201 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:44:30.202 +02:00 [Information] Authorization was successful.
2019-04-18 16:44:30.202 +02:00 [Information] Authorization was successful.
2019-04-18 16:44:30.203 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:44:30.204 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 16:44:30.204 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1142ms.
2019-04-18 16:44:30.206 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:44:30.207 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0037ms.
2019-04-18 16:44:30.209 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:44:30.210 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 16:44:30.211 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:44:30.212 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 9.6676ms
2019-04-18 16:44:30.217 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 15.8369ms
2019-04-18 16:44:30.218 +02:00 [Information] Request finished in 54.635ms 200 application/json; charset=utf-8
2019-04-18 16:44:30.221 +02:00 [Information] Request finished in 60.3158ms 200 application/json; charset=utf-8
2019-04-18 16:45:54.700 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:45:54.701 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:45:54.702 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:45:54.704 +02:00 [Information] Request finished in 3.7021ms 204 
2019-04-18 16:45:54.716 +02:00 [Information] Request starting HTTP/1.1 PUT http://localhost:5000/sogyolunchapi/categorie application/json;charset=UTF-8 80
2019-04-18 16:45:54.718 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:45:54.719 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:45:54.721 +02:00 [Information] Successfully validated the token.
2019-04-18 16:45:54.725 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:45:54.727 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:45:54.739 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:45:54.747 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:45:54.751 +02:00 [Information] Route matched with "{action = \"UpdateCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.UpdateCategorie (Services)"
2019-04-18 16:45:54.752 +02:00 [Information] Authorization was successful.
2019-04-18 16:45:54.754 +02:00 [Information] Executing ObjectResult, writing value of type '"Microsoft.AspNetCore.Mvc.SerializableError"'.
2019-04-18 16:45:54.758 +02:00 [Information] Executed action "Services.APIService.CategorieController.UpdateCategorie (Services)" in 5.8209ms
2019-04-18 16:45:54.764 +02:00 [Information] Request finished in 47.9398ms 400 application/json; charset=utf-8
2019-04-18 16:47:54.502 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:47:54.502 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:47:54.504 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:47:54.505 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:47:54.505 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:47:54.506 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:47:54.508 +02:00 [Information] Request finished in 7.7172ms 204 
2019-04-18 16:47:54.514 +02:00 [Information] Request finished in 11.9567ms 204 
2019-04-18 16:47:54.788 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:47:54.788 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:47:54.789 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:47:54.795 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:47:54.795 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:47:54.796 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:47:54.800 +02:00 [Information] Successfully validated the token.
2019-04-18 16:47:54.801 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:47:54.801 +02:00 [Information] Successfully validated the token.
2019-04-18 16:47:54.803 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:47:54.803 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:47:54.807 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:47:54.855 +02:00 [Information] Executed DbCommand ("36"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:47:54.855 +02:00 [Information] Executed DbCommand ("11"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:47:54.866 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:47:54.870 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:47:54.871 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:47:54.872 +02:00 [Information] Authorization was successful.
2019-04-18 16:47:54.875 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:47:54.875 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:47:54.876 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.106ms.
2019-04-18 16:47:54.877 +02:00 [Information] Authorization was successful.
2019-04-18 16:47:54.878 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:47:54.879 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 16:47:54.881 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0048ms.
2019-04-18 16:47:54.883 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:47:54.969 +02:00 [Information] Executed DbCommand ("88"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:47:54.985 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 112.3204ms
2019-04-18 16:47:54.985 +02:00 [Information] Executed DbCommand ("95"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 16:47:54.996 +02:00 [Information] Request finished in 208.6517ms 200 application/json; charset=utf-8
2019-04-18 16:47:54.999 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 121.7743ms
2019-04-18 16:47:55.001 +02:00 [Information] Request finished in 212.6674ms 200 application/json; charset=utf-8
2019-04-18 16:48:28.080 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:48:28.081 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:48:28.082 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:48:28.084 +02:00 [Information] Request finished in 4.3032ms 204 
2019-04-18 16:48:28.091 +02:00 [Information] Request starting HTTP/1.1 PUT http://localhost:5000/sogyolunchapi/categorie application/json;charset=UTF-8 77
2019-04-18 16:48:28.094 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:48:28.095 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:48:28.097 +02:00 [Information] Successfully validated the token.
2019-04-18 16:48:28.098 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:48:28.099 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:48:28.103 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:48:28.113 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:48:28.116 +02:00 [Information] Route matched with "{action = \"UpdateCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.UpdateCategorie (Services)"
2019-04-18 16:48:28.117 +02:00 [Information] Authorization was successful.
2019-04-18 16:48:28.120 +02:00 [Information] Executing action method "Services.APIService.CategorieController.UpdateCategorie (Services)" with arguments (["SogyoLunchApp.Categorie"]) - Validation state: Valid
2019-04-18 16:48:28.214 +02:00 [Information] Executed DbCommand ("89"ms) [Parameters=["@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [Categorien] SET [CategorieNaam] = @p0, [VolgordeNummer] = @p1, [WinkelId] = @p2
WHERE [CategorieId] = @p3;
SELECT @@ROWCOUNT;"
2019-04-18 16:48:28.225 +02:00 [Information] Executed action method "Services.APIService.CategorieController.UpdateCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 103.9675ms.
2019-04-18 16:48:28.231 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 16:48:28.235 +02:00 [Information] Executed action "Services.APIService.CategorieController.UpdateCategorie (Services)" in 118.2825ms
2019-04-18 16:48:28.239 +02:00 [Information] Request finished in 148.2454ms 200 
2019-04-18 16:48:41.262 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:48:41.262 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:48:41.264 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:48:41.265 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:48:41.266 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:48:41.267 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:48:41.267 +02:00 [Information] Request finished in 5.5861ms 204 
2019-04-18 16:48:41.268 +02:00 [Information] Request finished in 6.406ms 204 
2019-04-18 16:48:41.531 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:48:41.532 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:48:41.535 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:48:41.538 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:48:41.540 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:48:41.542 +02:00 [Information] Successfully validated the token.
2019-04-18 16:48:41.545 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:48:41.547 +02:00 [Information] Successfully validated the token.
2019-04-18 16:48:41.547 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:48:41.548 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:48:41.549 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:48:41.550 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:48:41.638 +02:00 [Information] Executed DbCommand ("86"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:48:41.639 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:48:41.652 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:48:41.654 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:48:41.655 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:48:41.657 +02:00 [Information] Authorization was successful.
2019-04-18 16:48:41.657 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:48:41.658 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:48:41.659 +02:00 [Information] Authorization was successful.
2019-04-18 16:48:41.661 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1461ms.
2019-04-18 16:48:41.662 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 16:48:41.663 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:48:41.664 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.006ms.
2019-04-18 16:48:41.674 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:48:41.682 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 16:48:41.685 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 26.2313ms
2019-04-18 16:48:41.686 +02:00 [Information] Request finished in 154.814ms 200 application/json; charset=utf-8
2019-04-18 16:48:41.687 +02:00 [Information] Executed DbCommand ("21"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:48:41.693 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 35.4287ms
2019-04-18 16:48:41.695 +02:00 [Information] Request finished in 164.2995ms 200 application/json; charset=utf-8
2019-04-18 16:49:14.936 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:49:14.941 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:49:14.942 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:49:14.942 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:49:14.944 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:49:14.944 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:49:14.945 +02:00 [Information] Request finished in 11.468ms 204 
2019-04-18 16:49:14.946 +02:00 [Information] Request finished in 4.8713ms 204 
2019-04-18 16:49:14.961 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:49:14.961 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:49:14.962 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:49:14.963 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:49:14.964 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:49:14.965 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:49:14.966 +02:00 [Information] Successfully validated the token.
2019-04-18 16:49:14.966 +02:00 [Information] Successfully validated the token.
2019-04-18 16:49:14.967 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:49:14.967 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:49:14.969 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:49:14.969 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:49:14.977 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:49:14.977 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:49:14.983 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:49:14.984 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:49:14.986 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:49:14.987 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:49:14.988 +02:00 [Information] Authorization was successful.
2019-04-18 16:49:14.989 +02:00 [Information] Authorization was successful.
2019-04-18 16:49:14.989 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:49:14.990 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 16:49:14.991 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0549ms.
2019-04-18 16:49:14.992 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0049ms.
2019-04-18 16:49:14.993 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:49:14.995 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:49:14.998 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 16:49:14.998 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:49:14.999 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 10.6484ms
2019-04-18 16:49:15.001 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 13.5362ms
2019-04-18 16:49:15.002 +02:00 [Information] Request finished in 40.7871ms 200 application/json; charset=utf-8
2019-04-18 16:49:15.003 +02:00 [Information] Request finished in 42.0295ms 200 application/json; charset=utf-8
2019-04-18 16:50:36.441 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:50:36.479 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:50:36.484 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:50:36.485 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:50:36.485 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:50:36.516 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:50:36.518 +02:00 [Information] Request finished in 76.6436ms 204 
2019-04-18 16:50:36.518 +02:00 [Information] Request finished in 39.1477ms 204 
2019-04-18 16:50:36.955 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:50:36.964 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:50:36.972 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:50:36.972 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:50:36.973 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:50:36.975 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:50:36.975 +02:00 [Information] Successfully validated the token.
2019-04-18 16:50:36.976 +02:00 [Information] Successfully validated the token.
2019-04-18 16:50:36.976 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:50:36.977 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:50:36.978 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:50:36.979 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:50:37.253 +02:00 [Information] Executed DbCommand ("270"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:50:37.264 +02:00 [Information] Executed DbCommand ("248"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:50:37.282 +02:00 [Information] Executed DbCommand ("24"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:50:37.285 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:50:37.286 +02:00 [Information] Authorization was successful.
2019-04-18 16:50:37.287 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 16:50:37.288 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0079ms.
2019-04-18 16:50:37.289 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:50:37.293 +02:00 [Information] Executed DbCommand ("24"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:50:37.295 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:50:37.297 +02:00 [Information] Authorization was successful.
2019-04-18 16:50:37.297 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:50:37.298 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0779ms.
2019-04-18 16:50:37.300 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:50:37.314 +02:00 [Information] Executed DbCommand ("23"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 16:50:37.314 +02:00 [Information] Executed DbCommand ("13"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:50:37.316 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 29.6372ms
2019-04-18 16:50:37.317 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 20.5962ms
2019-04-18 16:50:37.318 +02:00 [Information] Request finished in 363.9501ms 200 application/json; charset=utf-8
2019-04-18 16:50:37.320 +02:00 [Information] Request finished in 358.0454ms 200 application/json; charset=utf-8
2019-04-18 16:50:57.811 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:50:57.813 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:50:57.815 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:50:57.817 +02:00 [Information] Request finished in 5.3827ms 204 
2019-04-18 16:50:57.821 +02:00 [Information] Request starting HTTP/1.1 PUT http://localhost:5000/sogyolunchapi/categorie application/json;charset=UTF-8 75
2019-04-18 16:50:57.823 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:50:57.824 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:50:57.826 +02:00 [Information] Successfully validated the token.
2019-04-18 16:50:57.827 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:50:57.828 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:50:57.839 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:50:57.848 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:50:57.852 +02:00 [Information] Route matched with "{action = \"UpdateCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.UpdateCategorie (Services)"
2019-04-18 16:50:57.853 +02:00 [Information] Authorization was successful.
2019-04-18 16:50:57.854 +02:00 [Information] Executing action method "Services.APIService.CategorieController.UpdateCategorie (Services)" with arguments (["SogyoLunchApp.Categorie"]) - Validation state: Valid
2019-04-18 16:50:57.860 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [Categorien] SET [CategorieNaam] = @p0, [VolgordeNummer] = @p1, [WinkelId] = @p2
WHERE [CategorieId] = @p3;
SELECT @@ROWCOUNT;"
2019-04-18 16:50:57.865 +02:00 [Information] Executed action method "Services.APIService.CategorieController.UpdateCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 9.3358ms.
2019-04-18 16:50:57.867 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 16:50:57.868 +02:00 [Information] Executed action "Services.APIService.CategorieController.UpdateCategorie (Services)" in 15.1981ms
2019-04-18 16:50:57.869 +02:00 [Information] Request finished in 47.8028ms 200 
2019-04-18 16:50:57.873 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:50:57.873 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:50:57.875 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:50:57.875 +02:00 [Information] Request finished in 2.7903ms 204 
2019-04-18 16:50:57.878 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:50:57.879 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:50:57.881 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:50:57.882 +02:00 [Information] Successfully validated the token.
2019-04-18 16:50:57.883 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:50:57.885 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:50:57.889 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:50:57.893 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:50:57.896 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:50:57.898 +02:00 [Information] Authorization was successful.
2019-04-18 16:50:57.899 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:50:57.901 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1192ms.
2019-04-18 16:50:57.902 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:50:57.906 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:50:57.907 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 9.4871ms
2019-04-18 16:50:57.909 +02:00 [Information] Request finished in 30.6011ms 200 application/json; charset=utf-8
2019-04-18 16:51:06.388 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:51:06.389 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:51:06.390 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:51:06.390 +02:00 [Information] Request finished in 2.7307ms 204 
2019-04-18 16:51:06.393 +02:00 [Information] Request starting HTTP/1.1 PUT http://localhost:5000/sogyolunchapi/categorie application/json;charset=UTF-8 75
2019-04-18 16:51:06.394 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:51:06.395 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:51:06.396 +02:00 [Information] Successfully validated the token.
2019-04-18 16:51:06.398 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:51:06.401 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:51:06.405 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:51:06.409 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:51:06.411 +02:00 [Information] Route matched with "{action = \"UpdateCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.UpdateCategorie (Services)"
2019-04-18 16:51:06.412 +02:00 [Information] Authorization was successful.
2019-04-18 16:51:06.416 +02:00 [Information] Executing action method "Services.APIService.CategorieController.UpdateCategorie (Services)" with arguments (["SogyoLunchApp.Categorie"]) - Validation state: Valid
2019-04-18 16:51:06.420 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [Categorien] SET [CategorieNaam] = @p0, [VolgordeNummer] = @p1, [WinkelId] = @p2
WHERE [CategorieId] = @p3;
SELECT @@ROWCOUNT;"
2019-04-18 16:51:06.422 +02:00 [Information] Executed action method "Services.APIService.CategorieController.UpdateCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 3.3586ms.
2019-04-18 16:51:06.424 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 16:51:06.425 +02:00 [Information] Executed action "Services.APIService.CategorieController.UpdateCategorie (Services)" in 12.3874ms
2019-04-18 16:51:06.426 +02:00 [Information] Request finished in 32.639ms 200 
2019-04-18 16:51:06.437 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:51:06.438 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:51:06.439 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:51:06.440 +02:00 [Information] Request finished in 3.1619ms 204 
2019-04-18 16:51:06.443 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:51:06.444 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:51:06.445 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:51:06.448 +02:00 [Information] Successfully validated the token.
2019-04-18 16:51:06.449 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:51:06.451 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:51:06.455 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:51:06.459 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:51:06.461 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:51:06.465 +02:00 [Information] Authorization was successful.
2019-04-18 16:51:06.467 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:51:06.468 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1032ms.
2019-04-18 16:51:06.470 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:51:06.472 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:51:06.474 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 8.3671ms
2019-04-18 16:51:06.475 +02:00 [Information] Request finished in 32.3123ms 200 application/json; charset=utf-8
2019-04-18 16:51:12.619 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:51:12.622 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:51:12.623 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:51:12.624 +02:00 [Information] Request finished in 4.4589ms 204 
2019-04-18 16:51:12.627 +02:00 [Information] Request starting HTTP/1.1 PUT http://localhost:5000/sogyolunchapi/categorie application/json;charset=UTF-8 75
2019-04-18 16:51:12.628 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:51:12.630 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:51:12.630 +02:00 [Information] Successfully validated the token.
2019-04-18 16:51:12.631 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:51:12.633 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:51:12.637 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:51:12.642 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:51:12.644 +02:00 [Information] Route matched with "{action = \"UpdateCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.UpdateCategorie (Services)"
2019-04-18 16:51:12.645 +02:00 [Information] Authorization was successful.
2019-04-18 16:51:12.647 +02:00 [Information] Executing action method "Services.APIService.CategorieController.UpdateCategorie (Services)" with arguments (["SogyoLunchApp.Categorie"]) - Validation state: Valid
2019-04-18 16:51:12.651 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [Categorien] SET [CategorieNaam] = @p0, [VolgordeNummer] = @p1, [WinkelId] = @p2
WHERE [CategorieId] = @p3;
SELECT @@ROWCOUNT;"
2019-04-18 16:51:12.654 +02:00 [Information] Executed action method "Services.APIService.CategorieController.UpdateCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 4.6832ms.
2019-04-18 16:51:12.656 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 16:51:12.657 +02:00 [Information] Executed action "Services.APIService.CategorieController.UpdateCategorie (Services)" in 11.6954ms
2019-04-18 16:51:12.658 +02:00 [Information] Request finished in 30.5848ms 200 
2019-04-18 16:51:12.661 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:51:12.663 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:51:12.664 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:51:12.666 +02:00 [Information] Request finished in 4.3329ms 204 
2019-04-18 16:51:12.672 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:51:12.673 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:51:12.674 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:51:12.675 +02:00 [Information] Successfully validated the token.
2019-04-18 16:51:12.676 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:51:12.678 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:51:12.686 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:51:12.693 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:51:12.697 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:51:12.699 +02:00 [Information] Authorization was successful.
2019-04-18 16:51:12.701 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:51:12.704 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1265ms.
2019-04-18 16:51:12.705 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:51:12.707 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:51:12.710 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 10.1595ms
2019-04-18 16:51:12.711 +02:00 [Information] Request finished in 39.1505ms 200 application/json; charset=utf-8
2019-04-18 16:51:18.472 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:51:18.474 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:51:18.475 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:51:18.476 +02:00 [Information] Request finished in 3.4261ms 204 
2019-04-18 16:51:18.480 +02:00 [Information] Request starting HTTP/1.1 PUT http://localhost:5000/sogyolunchapi/categorie application/json;charset=UTF-8 75
2019-04-18 16:51:18.482 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:51:18.484 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:51:18.485 +02:00 [Information] Successfully validated the token.
2019-04-18 16:51:18.486 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:51:18.487 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:51:18.744 +02:00 [Information] Executed DbCommand ("254"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:51:18.987 +02:00 [Information] Executed DbCommand ("234"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:51:18.996 +02:00 [Information] Route matched with "{action = \"UpdateCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.UpdateCategorie (Services)"
2019-04-18 16:51:18.999 +02:00 [Information] Authorization was successful.
2019-04-18 16:51:19.002 +02:00 [Information] Executing action method "Services.APIService.CategorieController.UpdateCategorie (Services)" with arguments (["SogyoLunchApp.Categorie"]) - Validation state: Valid
2019-04-18 16:51:19.260 +02:00 [Information] Executed DbCommand ("252"ms) [Parameters=["@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [Categorien] SET [CategorieNaam] = @p0, [VolgordeNummer] = @p1, [WinkelId] = @p2
WHERE [CategorieId] = @p3;
SELECT @@ROWCOUNT;"
2019-04-18 16:51:19.269 +02:00 [Information] Executed action method "Services.APIService.CategorieController.UpdateCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 262.5591ms.
2019-04-18 16:51:19.271 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 16:51:19.272 +02:00 [Information] Executed action "Services.APIService.CategorieController.UpdateCategorie (Services)" in 273.0274ms
2019-04-18 16:51:19.274 +02:00 [Information] Request finished in 793.6719ms 200 
2019-04-18 16:51:19.278 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:51:19.279 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:51:19.281 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:51:19.282 +02:00 [Information] Request finished in 3.6889ms 204 
2019-04-18 16:51:19.285 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:51:19.287 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:51:19.288 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:51:19.289 +02:00 [Information] Successfully validated the token.
2019-04-18 16:51:19.290 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:51:19.292 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:51:19.531 +02:00 [Information] Executed DbCommand ("235"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:51:19.762 +02:00 [Information] Executed DbCommand ("227"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:51:19.766 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:51:19.768 +02:00 [Information] Authorization was successful.
2019-04-18 16:51:19.768 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:51:19.770 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.109ms.
2019-04-18 16:51:19.771 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:51:20.011 +02:00 [Information] Executed DbCommand ("238"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:51:20.014 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 246.2178ms
2019-04-18 16:51:20.015 +02:00 [Information] Request finished in 729.9715ms 200 application/json; charset=utf-8
2019-04-18 16:51:34.811 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:51:34.812 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:51:34.815 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:51:34.816 +02:00 [Information] Request finished in 5.5519ms 204 
2019-04-18 16:51:34.820 +02:00 [Information] Request starting HTTP/1.1 PUT http://localhost:5000/sogyolunchapi/categorie application/json;charset=UTF-8 76
2019-04-18 16:51:34.821 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:51:34.822 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:51:34.823 +02:00 [Information] Successfully validated the token.
2019-04-18 16:51:34.823 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:51:34.825 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:51:34.834 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:51:34.840 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:51:34.843 +02:00 [Information] Route matched with "{action = \"UpdateCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.UpdateCategorie (Services)"
2019-04-18 16:51:34.844 +02:00 [Information] Authorization was successful.
2019-04-18 16:51:34.845 +02:00 [Information] Executing action method "Services.APIService.CategorieController.UpdateCategorie (Services)" with arguments (["SogyoLunchApp.Categorie"]) - Validation state: Valid
2019-04-18 16:51:34.852 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [Categorien] SET [CategorieNaam] = @p0, [VolgordeNummer] = @p1, [WinkelId] = @p2
WHERE [CategorieId] = @p3;
SELECT @@ROWCOUNT;"
2019-04-18 16:51:34.855 +02:00 [Information] Executed action method "Services.APIService.CategorieController.UpdateCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 8.3104ms.
2019-04-18 16:51:34.857 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 16:51:34.858 +02:00 [Information] Executed action "Services.APIService.CategorieController.UpdateCategorie (Services)" in 13.5809ms
2019-04-18 16:51:34.859 +02:00 [Information] Request finished in 39.2842ms 200 
2019-04-18 16:51:34.869 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:51:34.871 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:51:34.872 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:51:34.873 +02:00 [Information] Request finished in 3.2952ms 204 
2019-04-18 16:51:34.876 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:51:34.877 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:51:34.878 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:51:34.879 +02:00 [Information] Successfully validated the token.
2019-04-18 16:51:34.881 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:51:34.884 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:51:34.889 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:51:34.894 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:51:34.897 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:51:34.899 +02:00 [Information] Authorization was successful.
2019-04-18 16:51:34.900 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:51:34.901 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0931ms.
2019-04-18 16:51:34.902 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:51:34.907 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:51:34.909 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 10.4207ms
2019-04-18 16:51:34.911 +02:00 [Information] Request finished in 34.6957ms 200 application/json; charset=utf-8
2019-04-18 16:52:01.249 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:52:01.249 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:52:01.250 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:52:01.251 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:52:01.252 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:52:01.253 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:52:01.254 +02:00 [Information] Request finished in 5.2645ms 204 
2019-04-18 16:52:01.255 +02:00 [Information] Request finished in 5.8915ms 204 
2019-04-18 16:52:01.271 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:52:01.271 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:52:01.272 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:52:01.273 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:52:01.274 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:52:01.277 +02:00 [Information] Successfully validated the token.
2019-04-18 16:52:01.278 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:52:01.279 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:52:01.281 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:52:01.282 +02:00 [Information] Successfully validated the token.
2019-04-18 16:52:01.283 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:52:01.285 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:52:01.285 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:52:01.291 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:52:01.291 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:52:01.294 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:52:01.296 +02:00 [Information] Authorization was successful.
2019-04-18 16:52:01.297 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:52:01.298 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:52:01.298 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0702ms.
2019-04-18 16:52:01.301 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:52:01.301 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:52:01.302 +02:00 [Information] Authorization was successful.
2019-04-18 16:52:01.303 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 16:52:01.304 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:52:01.304 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0037ms.
2019-04-18 16:52:01.306 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 10.5869ms
2019-04-18 16:52:01.307 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:52:01.308 +02:00 [Information] Request finished in 37.5361ms 200 application/json; charset=utf-8
2019-04-18 16:52:01.311 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 16:52:01.312 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 10.2642ms
2019-04-18 16:52:01.314 +02:00 [Information] Request finished in 42.8625ms 200 application/json; charset=utf-8
2019-04-18 16:52:29.188 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:52:29.193 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:52:29.194 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:52:29.194 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:52:29.196 +02:00 [Information] Request finished in 7.4651ms 204 
2019-04-18 16:52:29.199 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:52:29.202 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:52:29.205 +02:00 [Information] Request starting HTTP/1.1 PUT http://localhost:5000/sogyolunchapi/categorie application/json;charset=UTF-8 75
2019-04-18 16:52:29.209 +02:00 [Information] Request finished in 15.298ms 204 
2019-04-18 16:52:29.209 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:52:29.211 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:52:29.213 +02:00 [Information] Successfully validated the token.
2019-04-18 16:52:29.215 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:52:29.215 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:52:29.216 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:52:29.217 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:52:29.220 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:52:29.222 +02:00 [Information] Successfully validated the token.
2019-04-18 16:52:29.222 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:52:29.223 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:52:29.226 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:52:29.227 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:52:29.237 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:52:29.242 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:52:29.243 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:52:29.246 +02:00 [Information] Route matched with "{action = \"UpdateCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.UpdateCategorie (Services)"
2019-04-18 16:52:29.246 +02:00 [Information] Authorization was successful.
2019-04-18 16:52:29.248 +02:00 [Information] Authorization was successful.
2019-04-18 16:52:29.249 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:52:29.251 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1034ms.
2019-04-18 16:52:29.251 +02:00 [Information] Executing action method "Services.APIService.CategorieController.UpdateCategorie (Services)" with arguments (["SogyoLunchApp.Categorie"]) - Validation state: Valid
2019-04-18 16:52:29.252 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:52:29.258 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:52:29.258 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [Categorien] SET [CategorieNaam] = @p0, [VolgordeNummer] = @p1, [WinkelId] = @p2
WHERE [CategorieId] = @p3;
SELECT @@ROWCOUNT;"
2019-04-18 16:52:29.261 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 14.5449ms
2019-04-18 16:52:29.264 +02:00 [Information] Request finished in 49.5783ms 200 application/json; charset=utf-8
2019-04-18 16:52:29.266 +02:00 [Information] Executed action method "Services.APIService.CategorieController.UpdateCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 12.3351ms.
2019-04-18 16:52:29.268 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 16:52:29.268 +02:00 [Information] Executed action "Services.APIService.CategorieController.UpdateCategorie (Services)" in 20.1845ms
2019-04-18 16:52:29.270 +02:00 [Information] Request finished in 64.2509ms 200 
2019-04-18 16:52:36.075 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:52:36.076 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:52:36.076 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:52:36.077 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:52:36.078 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:52:36.079 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:52:36.080 +02:00 [Information] Request finished in 5.5034ms 204 
2019-04-18 16:52:36.082 +02:00 [Information] Request finished in 6.3005ms 204 
2019-04-18 16:52:36.085 +02:00 [Information] Request starting HTTP/1.1 PUT http://localhost:5000/sogyolunchapi/categorie application/json;charset=UTF-8 75
2019-04-18 16:52:36.085 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:52:36.086 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:52:36.087 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:52:36.088 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:52:36.088 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:52:36.089 +02:00 [Information] Successfully validated the token.
2019-04-18 16:52:36.090 +02:00 [Information] Successfully validated the token.
2019-04-18 16:52:36.091 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:52:36.091 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:52:36.092 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:52:36.093 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:52:36.097 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:52:36.100 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:52:36.103 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:52:36.105 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:52:36.105 +02:00 [Information] Route matched with "{action = \"UpdateCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.UpdateCategorie (Services)"
2019-04-18 16:52:36.107 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:52:36.108 +02:00 [Information] Authorization was successful.
2019-04-18 16:52:36.108 +02:00 [Information] Authorization was successful.
2019-04-18 16:52:36.109 +02:00 [Information] Executing action method "Services.APIService.CategorieController.UpdateCategorie (Services)" with arguments (["SogyoLunchApp.Categorie"]) - Validation state: Valid
2019-04-18 16:52:36.110 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:52:36.113 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0842ms.
2019-04-18 16:52:36.114 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [Categorien] SET [CategorieNaam] = @p0, [VolgordeNummer] = @p1, [WinkelId] = @p2
WHERE [CategorieId] = @p3;
SELECT @@ROWCOUNT;"
2019-04-18 16:52:36.114 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:52:36.117 +02:00 [Information] Executed action method "Services.APIService.CategorieController.UpdateCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 6.1572ms.
2019-04-18 16:52:36.119 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:52:36.119 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 16:52:36.121 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 12.6764ms
2019-04-18 16:52:36.122 +02:00 [Information] Executed action "Services.APIService.CategorieController.UpdateCategorie (Services)" in 13.9166ms
2019-04-18 16:52:36.123 +02:00 [Information] Request finished in 37.6859ms 200 application/json; charset=utf-8
2019-04-18 16:52:36.124 +02:00 [Information] Request finished in 39.2327ms 200 
2019-04-18 16:52:40.762 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:52:40.765 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:52:40.767 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:52:40.768 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:52:40.768 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:52:40.769 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:52:40.770 +02:00 [Information] Request finished in 8.3043ms 204 
2019-04-18 16:52:40.774 +02:00 [Information] Request finished in 9.3733ms 204 
2019-04-18 16:52:40.783 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:52:40.784 +02:00 [Information] Request starting HTTP/1.1 PUT http://localhost:5000/sogyolunchapi/categorie application/json;charset=UTF-8 76
2019-04-18 16:52:40.785 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:52:40.786 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:52:40.787 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:52:40.788 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:52:40.788 +02:00 [Information] Successfully validated the token.
2019-04-18 16:52:40.789 +02:00 [Information] Successfully validated the token.
2019-04-18 16:52:40.789 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:52:40.790 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:52:40.791 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:52:40.792 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:52:40.794 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:52:40.799 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:52:40.804 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:52:40.811 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:52:40.812 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:52:40.814 +02:00 [Information] Route matched with "{action = \"UpdateCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.UpdateCategorie (Services)"
2019-04-18 16:52:40.814 +02:00 [Information] Authorization was successful.
2019-04-18 16:52:40.815 +02:00 [Information] Authorization was successful.
2019-04-18 16:52:40.816 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:52:40.817 +02:00 [Information] Executing action method "Services.APIService.CategorieController.UpdateCategorie (Services)" with arguments (["SogyoLunchApp.Categorie"]) - Validation state: Valid
2019-04-18 16:52:40.818 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0798ms.
2019-04-18 16:52:40.820 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:52:40.820 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [Categorien] SET [CategorieNaam] = @p0, [VolgordeNummer] = @p1, [WinkelId] = @p2
WHERE [CategorieId] = @p3;
SELECT @@ROWCOUNT;"
2019-04-18 16:52:40.821 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:52:40.823 +02:00 [Information] Executed action method "Services.APIService.CategorieController.UpdateCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 4.1027ms.
2019-04-18 16:52:40.824 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 10.1028ms
2019-04-18 16:52:40.825 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 16:52:40.827 +02:00 [Information] Request finished in 43.3119ms 200 application/json; charset=utf-8
2019-04-18 16:52:40.827 +02:00 [Information] Executed action "Services.APIService.CategorieController.UpdateCategorie (Services)" in 11.6931ms
2019-04-18 16:52:40.829 +02:00 [Information] Request finished in 45.3971ms 200 
2019-04-18 16:52:55.169 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:52:55.169 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:52:55.171 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:52:55.171 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:52:55.172 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:52:55.173 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:52:55.174 +02:00 [Information] Request finished in 4.8644ms 204 
2019-04-18 16:52:55.175 +02:00 [Information] Request finished in 5.5081ms 204 
2019-04-18 16:52:55.178 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:52:55.178 +02:00 [Information] Request starting HTTP/1.1 PUT http://localhost:5000/sogyolunchapi/categorie application/json;charset=UTF-8 76
2019-04-18 16:52:55.181 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:52:55.179 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:52:55.182 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:52:55.183 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:52:55.185 +02:00 [Information] Successfully validated the token.
2019-04-18 16:52:55.185 +02:00 [Information] Successfully validated the token.
2019-04-18 16:52:55.186 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:52:55.186 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:52:55.187 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:52:55.188 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:52:55.192 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:52:55.193 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:52:55.202 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:52:55.202 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:52:55.205 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:52:55.206 +02:00 [Information] Route matched with "{action = \"UpdateCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.UpdateCategorie (Services)"
2019-04-18 16:52:55.207 +02:00 [Information] Authorization was successful.
2019-04-18 16:52:55.208 +02:00 [Information] Authorization was successful.
2019-04-18 16:52:55.208 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:52:55.209 +02:00 [Information] Executing action method "Services.APIService.CategorieController.UpdateCategorie (Services)" with arguments (["SogyoLunchApp.Categorie"]) - Validation state: Valid
2019-04-18 16:52:55.210 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0557ms.
2019-04-18 16:52:55.212 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:52:55.212 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [Categorien] SET [CategorieNaam] = @p0, [VolgordeNummer] = @p1, [WinkelId] = @p2
WHERE [CategorieId] = @p3;
SELECT @@ROWCOUNT;"
2019-04-18 16:52:55.216 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:52:55.218 +02:00 [Information] Executed action method "Services.APIService.CategorieController.UpdateCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 6.7957ms.
2019-04-18 16:52:55.219 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 12.497ms
2019-04-18 16:52:55.220 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 16:52:55.221 +02:00 [Information] Request finished in 43.1057ms 200 application/json; charset=utf-8
2019-04-18 16:52:55.222 +02:00 [Information] Executed action "Services.APIService.CategorieController.UpdateCategorie (Services)" in 14.2148ms
2019-04-18 16:52:55.223 +02:00 [Information] Request finished in 45.0695ms 200 
2019-04-18 16:53:03.349 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:53:03.350 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:53:03.351 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:53:03.352 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:53:03.353 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:53:03.353 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:53:03.354 +02:00 [Information] Request finished in 5.0616ms 204 
2019-04-18 16:53:03.355 +02:00 [Information] Request finished in 4.9873ms 204 
2019-04-18 16:53:03.358 +02:00 [Information] Request starting HTTP/1.1 PUT http://localhost:5000/sogyolunchapi/categorie application/json;charset=UTF-8 75
2019-04-18 16:53:03.359 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:53:03.359 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:53:03.360 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:53:03.361 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:53:03.363 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:53:03.366 +02:00 [Information] Successfully validated the token.
2019-04-18 16:53:03.366 +02:00 [Information] Successfully validated the token.
2019-04-18 16:53:03.367 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:53:03.368 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:53:03.369 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:53:03.370 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:53:03.374 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:53:03.375 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:53:03.378 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:53:03.384 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:53:03.385 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:53:03.387 +02:00 [Information] Route matched with "{action = \"UpdateCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.UpdateCategorie (Services)"
2019-04-18 16:53:03.387 +02:00 [Information] Authorization was successful.
2019-04-18 16:53:03.388 +02:00 [Information] Authorization was successful.
2019-04-18 16:53:03.389 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:53:03.390 +02:00 [Information] Executing action method "Services.APIService.CategorieController.UpdateCategorie (Services)" with arguments (["SogyoLunchApp.Categorie"]) - Validation state: Valid
2019-04-18 16:53:03.390 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0729ms.
2019-04-18 16:53:03.392 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:53:03.394 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [Categorien] SET [CategorieNaam] = @p0, [VolgordeNummer] = @p1, [WinkelId] = @p2
WHERE [CategorieId] = @p3;
SELECT @@ROWCOUNT;"
2019-04-18 16:53:03.395 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:53:03.397 +02:00 [Information] Executed action method "Services.APIService.CategorieController.UpdateCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 5.3108ms.
2019-04-18 16:53:03.399 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 11.7283ms
2019-04-18 16:53:03.400 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 16:53:03.402 +02:00 [Information] Request finished in 43.5392ms 200 application/json; charset=utf-8
2019-04-18 16:53:03.403 +02:00 [Information] Executed action "Services.APIService.CategorieController.UpdateCategorie (Services)" in 14.9012ms
2019-04-18 16:53:03.405 +02:00 [Information] Request finished in 47.2968ms 200 
2019-04-18 16:53:10.106 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:53:10.106 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:53:10.107 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:53:10.107 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:53:10.108 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:53:10.109 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:53:10.109 +02:00 [Information] Request finished in 3.4498ms 204 
2019-04-18 16:53:10.110 +02:00 [Information] Request finished in 4.0604ms 204 
2019-04-18 16:53:10.119 +02:00 [Information] Request starting HTTP/1.1 PUT http://localhost:5000/sogyolunchapi/categorie application/json;charset=UTF-8 75
2019-04-18 16:53:10.119 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:53:10.120 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:53:10.120 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:53:10.121 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:53:10.122 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:53:10.123 +02:00 [Information] Successfully validated the token.
2019-04-18 16:53:10.123 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:53:10.123 +02:00 [Information] Successfully validated the token.
2019-04-18 16:53:10.125 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:53:10.124 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:53:10.126 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:53:10.130 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:53:10.133 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:53:10.138 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:53:10.140 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:53:10.140 +02:00 [Information] Route matched with "{action = \"UpdateCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.UpdateCategorie (Services)"
2019-04-18 16:53:10.144 +02:00 [Information] Authorization was successful.
2019-04-18 16:53:10.144 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:53:10.148 +02:00 [Information] Executing action method "Services.APIService.CategorieController.UpdateCategorie (Services)" with arguments (["SogyoLunchApp.Categorie"]) - Validation state: Valid
2019-04-18 16:53:10.149 +02:00 [Information] Authorization was successful.
2019-04-18 16:53:10.152 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:53:10.153 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [Categorien] SET [CategorieNaam] = @p0, [VolgordeNummer] = @p1, [WinkelId] = @p2
WHERE [CategorieId] = @p3;
SELECT @@ROWCOUNT;"
2019-04-18 16:53:10.153 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0676ms.
2019-04-18 16:53:10.155 +02:00 [Information] Executed action method "Services.APIService.CategorieController.UpdateCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 3.7787ms.
2019-04-18 16:53:10.155 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:53:10.157 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 16:53:10.158 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:53:10.158 +02:00 [Information] Executed action "Services.APIService.CategorieController.UpdateCategorie (Services)" in 14.7571ms
2019-04-18 16:53:10.160 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 10.9597ms
2019-04-18 16:53:10.161 +02:00 [Information] Request finished in 42.044ms 200 
2019-04-18 16:53:10.164 +02:00 [Information] Request finished in 45.3232ms 200 application/json; charset=utf-8
2019-04-18 16:55:15.268 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:55:15.268 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:55:15.269 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:55:15.270 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:55:15.282 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:55:15.283 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:55:15.290 +02:00 [Information] Request finished in 22.0517ms 204 
2019-04-18 16:55:15.290 +02:00 [Information] Request finished in 21.7342ms 204 
2019-04-18 16:55:15.650 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:55:15.650 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:55:15.816 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:55:15.817 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:55:15.818 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:55:15.819 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:55:15.822 +02:00 [Information] Successfully validated the token.
2019-04-18 16:55:15.831 +02:00 [Information] Successfully validated the token.
2019-04-18 16:55:15.833 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:55:15.834 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:55:15.835 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:55:15.836 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:55:16.210 +02:00 [Information] Executed DbCommand ("366"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:55:16.221 +02:00 [Information] Executed DbCommand ("381"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:55:16.457 +02:00 [Information] Executed DbCommand ("232"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:55:16.460 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:55:16.461 +02:00 [Information] Authorization was successful.
2019-04-18 16:55:16.463 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 16:55:16.464 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0074ms.
2019-04-18 16:55:16.466 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:55:16.467 +02:00 [Information] Executed DbCommand ("249"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:55:16.470 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:55:16.472 +02:00 [Information] Authorization was successful.
2019-04-18 16:55:16.472 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:55:16.473 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0662ms.
2019-04-18 16:55:16.474 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:55:16.670 +02:00 [Information] Executed DbCommand ("203"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 16:55:16.676 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 214.0728ms
2019-04-18 16:55:16.678 +02:00 [Information] Request finished in 1028.3692ms 200 application/json; charset=utf-8
2019-04-18 16:55:16.682 +02:00 [Information] Executed DbCommand ("204"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:55:16.685 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 213.1393ms
2019-04-18 16:55:16.686 +02:00 [Information] Request finished in 1035.653ms 200 application/json; charset=utf-8
2019-04-18 16:55:44.646 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:55:44.646 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:55:44.656 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:55:44.657 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:55:44.658 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:55:44.658 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:55:44.659 +02:00 [Information] Request finished in 13.4213ms 204 
2019-04-18 16:55:44.660 +02:00 [Information] Request finished in 13.7726ms 204 
2019-04-18 16:55:44.983 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:55:45.039 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:55:45.042 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:55:45.043 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:55:45.043 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:55:45.044 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:55:45.050 +02:00 [Information] Successfully validated the token.
2019-04-18 16:55:45.050 +02:00 [Information] Successfully validated the token.
2019-04-18 16:55:45.051 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:55:45.051 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:55:45.052 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:55:45.053 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:55:45.250 +02:00 [Information] Executed DbCommand ("193"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:55:45.269 +02:00 [Information] Executed DbCommand ("214"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:55:45.493 +02:00 [Information] Executed DbCommand ("221"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:55:45.493 +02:00 [Information] Executed DbCommand ("217"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:55:45.500 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:55:45.501 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:55:45.501 +02:00 [Information] Authorization was successful.
2019-04-18 16:55:45.502 +02:00 [Information] Authorization was successful.
2019-04-18 16:55:45.503 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:55:45.503 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 16:55:45.504 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1175ms.
2019-04-18 16:55:45.505 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0035ms.
2019-04-18 16:55:45.506 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:55:45.508 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:55:45.796 +02:00 [Information] Executed DbCommand ("286"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 16:55:45.798 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 296.1185ms
2019-04-18 16:55:45.800 +02:00 [Information] Request finished in 816.3837ms 200 application/json; charset=utf-8
2019-04-18 16:55:45.851 +02:00 [Information] Executed DbCommand ("342"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:55:45.853 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 351.9725ms
2019-04-18 16:55:45.859 +02:00 [Information] Request finished in 819.9356ms 200 application/json; charset=utf-8
2019-04-18 16:56:05.901 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:56:05.901 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:56:05.905 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:56:05.905 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:56:05.906 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:56:05.907 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:56:05.907 +02:00 [Information] Request finished in 6.221ms 204 
2019-04-18 16:56:05.909 +02:00 [Information] Request finished in 8.2799ms 204 
2019-04-18 16:56:06.141 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 16:56:06.141 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 16:56:06.175 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:56:06.176 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 16:56:06.177 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:56:06.178 +02:00 [Information] CORS policy execution successful.
2019-04-18 16:56:06.184 +02:00 [Information] Successfully validated the token.
2019-04-18 16:56:06.185 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:56:06.186 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:56:06.191 +02:00 [Information] Successfully validated the token.
2019-04-18 16:56:06.223 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 16:56:06.224 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 16:56:06.482 +02:00 [Information] Executed DbCommand ("293"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:56:06.559 +02:00 [Information] Executed DbCommand ("333"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 16:56:06.763 +02:00 [Information] Executed DbCommand ("141"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:56:06.767 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 16:56:06.770 +02:00 [Information] Authorization was successful.
2019-04-18 16:56:06.771 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 16:56:06.773 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1179ms.
2019-04-18 16:56:06.774 +02:00 [Information] Executed DbCommand ("282"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 16:56:06.776 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:56:06.779 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 16:56:06.780 +02:00 [Information] Authorization was successful.
2019-04-18 16:56:06.781 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 16:56:06.782 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0051ms.
2019-04-18 16:56:06.783 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 16:56:06.823 +02:00 [Information] Executed DbCommand ("39"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 16:56:06.828 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 48.2637ms
2019-04-18 16:56:06.838 +02:00 [Information] Request finished in 696.7423ms 200 application/json; charset=utf-8
2019-04-18 16:56:06.838 +02:00 [Information] Executed DbCommand ("59"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 16:56:06.843 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 72.7121ms
2019-04-18 16:56:06.844 +02:00 [Information] Request finished in 703.0906ms 200 application/json; charset=utf-8
2019-04-18 17:00:23.969 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:00:23.973 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:00:23.974 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:00:23.975 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:00:23.976 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:00:23.977 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:00:23.978 +02:00 [Information] Request finished in 9.8355ms 204 
2019-04-18 17:00:23.979 +02:00 [Information] Request finished in 6.4303ms 204 
2019-04-18 17:00:24.222 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:00:24.222 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:00:24.223 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:00:24.224 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:00:24.226 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:00:24.227 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:00:24.234 +02:00 [Information] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters) in C:\agent1\_work\109\s\src\Microsoft.IdentityModel.Tokens\Validators.cs:line 274
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters) in C:\agent1\_work\109\s\src\System.IdentityModel.Tokens.Jwt\JwtSecurityTokenHandler.cs:line 1182
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters) in C:\agent1\_work\109\s\src\System.IdentityModel.Tokens.Jwt\JwtSecurityTokenHandler.cs:line 739
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken) in C:\agent1\_work\109\s\src\System.IdentityModel.Tokens.Jwt\JwtSecurityTokenHandler.cs:line 723
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2019-04-18 17:00:24.234 +02:00 [Information] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters) in C:\agent1\_work\109\s\src\Microsoft.IdentityModel.Tokens\Validators.cs:line 274
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters) in C:\agent1\_work\109\s\src\System.IdentityModel.Tokens.Jwt\JwtSecurityTokenHandler.cs:line 1182
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters) in C:\agent1\_work\109\s\src\System.IdentityModel.Tokens.Jwt\JwtSecurityTokenHandler.cs:line 739
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken) in C:\agent1\_work\109\s\src\System.IdentityModel.Tokens.Jwt\JwtSecurityTokenHandler.cs:line 723
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2019-04-18 17:00:24.259 +02:00 [Information] "Bearer" was not authenticated. Failure message: "IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'."
2019-04-18 17:00:24.265 +02:00 [Information] "Bearer" was not authenticated. Failure message: "IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'."
2019-04-18 17:00:24.267 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:00:24.267 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:00:24.268 +02:00 [Information] Authorization failed.
2019-04-18 17:00:24.269 +02:00 [Information] Authorization failed.
2019-04-18 17:00:24.272 +02:00 [Information] Authorization failed for the request at filter '"Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter"'.
2019-04-18 17:00:24.273 +02:00 [Information] Executing ChallengeResult with authentication schemes ([]).
2019-04-18 17:00:24.274 +02:00 [Information] Authorization failed for the request at filter '"Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter"'.
2019-04-18 17:00:24.276 +02:00 [Information] Executing ChallengeResult with authentication schemes ([]).
2019-04-18 17:00:24.276 +02:00 [Information] AuthenticationScheme: "Bearer" was challenged.
2019-04-18 17:00:24.277 +02:00 [Information] AuthenticationScheme: "Bearer" was challenged.
2019-04-18 17:00:24.280 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 11.1792ms
2019-04-18 17:00:24.281 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 12.9637ms
2019-04-18 17:00:24.283 +02:00 [Information] Request finished in 61.1948ms 401 text/plain
2019-04-18 17:00:24.284 +02:00 [Information] Request finished in 62.2787ms 401 text/plain
2019-04-18 17:00:27.170 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/Auth/ExternalLogin  
2019-04-18 17:00:27.171 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:00:27.172 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:00:27.173 +02:00 [Information] Request finished in 2.618ms 204 
2019-04-18 17:00:27.175 +02:00 [Information] Request starting HTTP/1.1 POST http://localhost:5000/sogyolunchapi/Auth/ExternalLogin application/json;charset=UTF-8 1303
2019-04-18 17:00:27.176 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:00:27.177 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:00:27.182 +02:00 [Information] Route matched with "{action = \"ExternalLogin\", controller = \"Auth\"}". Executing action "SogyoLunchApp.APIService.AuthController.ExternalLogin (Services)"
2019-04-18 17:00:27.184 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:00:27.188 +02:00 [Information] Executing action method "SogyoLunchApp.APIService.AuthController.ExternalLogin (Services)" with arguments (["SogyoLunchApp.APIService.ExternalLoginModel"]) - Validation state: Valid
2019-04-18 17:00:27.315 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:00:27.414 +02:00 [Information] Executed DbCommand ("18"ms) [Parameters=["@__normalizedEmail_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName]
FROM [AspNetUsers] AS [u]
WHERE [u].[NormalizedEmail] = @__normalizedEmail_0"
2019-04-18 17:00:27.428 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__loginProvider_0='?' (Size = 450), @__providerKey_1='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [userLogin].[LoginProvider], [userLogin].[ProviderKey], [userLogin].[ProviderDisplayName], [userLogin].[UserId]
FROM [AspNetUserLogins] AS [userLogin]
WHERE ([userLogin].[LoginProvider] = @__loginProvider_0) AND ([userLogin].[ProviderKey] = @__providerKey_1)"
2019-04-18 17:00:27.438 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__userId_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName]
FROM [AspNetUsers] AS [u]
WHERE [u].[Id] = @__userId_0"
2019-04-18 17:00:27.444 +02:00 [Warning] AddLogin for user "3a4a5049-5bff-4683-8042-7e01e6740527" failed because it was already associated with another user.
2019-04-18 17:00:27.456 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__user_Id_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [uc].[Id], [uc].[ClaimType], [uc].[ClaimValue], [uc].[UserId]
FROM [AspNetUserClaims] AS [uc]
WHERE [uc].[UserId] = @__user_Id_0"
2019-04-18 17:00:27.468 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__userId_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [role].[Name]
FROM [AspNetUserRoles] AS [userRole]
INNER JOIN [AspNetRoles] AS [role] ON [userRole].[RoleId] = [role].[Id]
WHERE [userRole].[UserId] = @__userId_0"
2019-04-18 17:00:27.477 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__normalizedName_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [r].[Id], [r].[ConcurrencyStamp], [r].[Name], [r].[NormalizedName]
FROM [AspNetRoles] AS [r]
WHERE [r].[NormalizedName] = @__normalizedName_0"
2019-04-18 17:00:27.485 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__role_Id_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [rc].[ClaimType], [rc].[ClaimValue]
FROM [AspNetRoleClaims] AS [rc]
WHERE [rc].[RoleId] = @__role_Id_0"
2019-04-18 17:00:27.488 +02:00 [Information] AuthenticationScheme: "Identity.Application" signed in.
2019-04-18 17:00:27.490 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__userId_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [role].[Name]
FROM [AspNetUserRoles] AS [userRole]
INNER JOIN [AspNetRoles] AS [role] ON [userRole].[RoleId] = [role].[Id]
WHERE [userRole].[UserId] = @__userId_0"
2019-04-18 17:00:27.497 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:00:27.501 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__normalizedUserName_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName]
FROM [AspNetUsers] AS [u]
WHERE [u].[NormalizedUserName] = @__normalizedUserName_0"
2019-04-18 17:00:27.508 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@p0='?' (DbType = Guid), @p1='?' (Size = 450), @p2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
DELETE FROM [AspNetUserTokens]
WHERE [UserId] = @p0 AND [LoginProvider] = @p1 AND [Name] = @p2;
SELECT @@ROWCOUNT;"
2019-04-18 17:00:27.515 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@p14='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p15='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTimeOffset), @p6='?' (Size = 256), @p7='?' (Size = 256), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Boolean), @p11='?' (Size = 4000), @p12='?' (DbType = Boolean), @p13='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [LockoutEnabled] = @p4, [LockoutEnd] = @p5, [NormalizedEmail] = @p6, [NormalizedUserName] = @p7, [PasswordHash] = @p8, [PhoneNumber] = @p9, [PhoneNumberConfirmed] = @p10, [SecurityStamp] = @p11, [TwoFactorEnabled] = @p12, [UserName] = @p13
WHERE [Id] = @p14 AND [ConcurrencyStamp] = @p15;
SELECT @@ROWCOUNT;"
2019-04-18 17:00:27.521 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:00:27.524 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__normalizedUserName_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName]
FROM [AspNetUsers] AS [u]
WHERE [u].[NormalizedUserName] = @__normalizedUserName_0"
2019-04-18 17:00:27.530 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@p0='?' (DbType = Guid), @p1='?' (Size = 450), @p2='?' (Size = 450), @p3='?' (Size = 4000)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
INSERT INTO [AspNetUserTokens] ([UserId], [LoginProvider], [Name], [Value])
VALUES (@p0, @p1, @p2, @p3);"
2019-04-18 17:00:27.532 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@p14='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p15='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTimeOffset), @p6='?' (Size = 256), @p7='?' (Size = 256), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Boolean), @p11='?' (Size = 4000), @p12='?' (DbType = Boolean), @p13='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [LockoutEnabled] = @p4, [LockoutEnd] = @p5, [NormalizedEmail] = @p6, [NormalizedUserName] = @p7, [PasswordHash] = @p8, [PhoneNumber] = @p9, [PhoneNumberConfirmed] = @p10, [SecurityStamp] = @p11, [TwoFactorEnabled] = @p12, [UserName] = @p13
WHERE [Id] = @p14 AND [ConcurrencyStamp] = @p15;
SELECT @@ROWCOUNT;"
2019-04-18 17:00:27.535 +02:00 [Information] Executed action method "SogyoLunchApp.APIService.AuthController.ExternalLogin (Services)", returned result "Microsoft.AspNetCore.Mvc.OkObjectResult" in 346.1202ms.
2019-04-18 17:00:27.537 +02:00 [Information] Executing ObjectResult, writing value of type '"<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"'.
2019-04-18 17:00:27.539 +02:00 [Information] Executed action "SogyoLunchApp.APIService.AuthController.ExternalLogin (Services)" in 355.8517ms
2019-04-18 17:00:27.540 +02:00 [Information] Request finished in 364.983ms 200 application/json; charset=utf-8
2019-04-18 17:00:27.723 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 17:00:27.725 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:00:27.740 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:00:27.766 +02:00 [Information] Request finished in 42.6566ms 204 
2019-04-18 17:00:27.775 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 17:00:27.781 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:00:27.790 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:00:27.793 +02:00 [Information] Successfully validated the token.
2019-04-18 17:00:27.802 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:00:27.803 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:00:27.808 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:00:27.825 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:00:27.835 +02:00 [Information] Route matched with "{action = \"getBezorgdagen\", controller = \"Bezorgdag\"}". Executing action "Services.APIService.BezorgdagController.getBezorgdagen (Services)"
2019-04-18 17:00:27.837 +02:00 [Information] Authorization was successful.
2019-04-18 17:00:27.838 +02:00 [Information] Executing action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)" with arguments (["40"]) - Validation state: Valid
2019-04-18 17:00:27.848 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:27.855 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:27.858 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:27.860 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:27.866 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:27.869 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:27.871 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:27.874 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:27.876 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:27.880 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:27.884 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:27.886 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:27.889 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:27.891 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:27.893 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:27.897 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:27.900 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:27.902 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:27.904 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:27.907 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:27.910 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:27.913 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:27.918 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:27.920 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:27.922 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:27.924 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:27.926 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:27.930 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:27.935 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:27.937 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:27.940 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:27.943 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:27.950 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:27.953 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:27.955 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:27.958 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:27.960 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:27.965 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:27.968 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:27.971 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:27.973 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:27.975 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:27.980 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:27.984 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:27.986 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:27.988 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:27.991 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:27.993 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:27.997 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:28.000 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:28.003 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:28.005 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:28.007 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:28.009 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:28.013 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:28.017 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:28.019 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:28.022 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:28.024 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:28.026 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:28.029 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:28.032 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:28.035 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:28.037 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:28.039 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:28.041 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:28.043 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:28.048 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:28.051 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:28.053 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:28.056 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:28.058 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:28.060 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:28.063 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:28.066 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:28.069 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:28.072 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:28.074 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:28.076 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:28.079 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:28.082 +02:00 [Information] Executed action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 241.8106ms.
2019-04-18 17:00:28.084 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[System.DateTime, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"'.
2019-04-18 17:00:28.086 +02:00 [Information] Executed action "Services.APIService.BezorgdagController.getBezorgdagen (Services)" in 250.1111ms
2019-04-18 17:00:28.087 +02:00 [Information] Request finished in 312.2507ms 200 application/json; charset=utf-8
2019-04-18 17:00:28.104 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 17:00:28.104 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 17:00:28.105 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:00:28.107 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:00:28.108 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:00:28.109 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:00:28.116 +02:00 [Information] Request finished in 5.6138ms 204 
2019-04-18 17:00:28.118 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 17:00:28.118 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 17:00:28.119 +02:00 [Information] Request finished in 14.4347ms 204 
2019-04-18 17:00:28.120 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:00:28.121 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:00:28.124 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:00:28.126 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:00:28.128 +02:00 [Information] Request finished in 10.1247ms 204 
2019-04-18 17:00:28.129 +02:00 [Information] Request finished in 10.7945ms 204 
2019-04-18 17:00:28.129 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 17:00:28.129 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 17:00:28.131 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:00:28.132 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:00:28.134 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:00:28.135 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:00:28.136 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 17:00:28.136 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 17:00:28.136 +02:00 [Information] Successfully validated the token.
2019-04-18 17:00:28.137 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:00:28.139 +02:00 [Information] Successfully validated the token.
2019-04-18 17:00:28.139 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:00:28.140 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:00:28.140 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:00:28.142 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:00:28.142 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:00:28.144 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:00:28.144 +02:00 [Information] Successfully validated the token.
2019-04-18 17:00:28.149 +02:00 [Information] Successfully validated the token.
2019-04-18 17:00:28.157 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:00:28.157 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:00:28.158 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:00:28.158 +02:00 [Information] Executed DbCommand ("11"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:00:28.162 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:00:28.166 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:00:28.184 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:00:28.184 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:00:28.186 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:00:28.186 +02:00 [Information] Route matched with "{action = \"GetWinkelBijDatum\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)"
2019-04-18 17:00:28.194 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:00:28.194 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:00:28.197 +02:00 [Information] Authorization was successful.
2019-04-18 17:00:28.200 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:00:28.200 +02:00 [Information] Executing action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 17:00:28.201 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 17:00:28.205 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:00:28.205 +02:00 [Information] Route matched with "{action = \"GetDeadlinePerDatum\", controller = \"Deadline\"}". Executing action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)"
2019-04-18 17:00:28.206 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:28.207 +02:00 [Information] Authorization was successful.
2019-04-18 17:00:28.209 +02:00 [Information] Route matched with "{action = \"GetProductenbijDatum\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenbijDatum (Services)"
2019-04-18 17:00:28.209 +02:00 [Information] Authorization was successful.
2019-04-18 17:00:28.212 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 17:00:28.213 +02:00 [Information] Authorization was successful.
2019-04-18 17:00:28.214 +02:00 [Information] Executing action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 17:00:28.217 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenbijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 17:00:28.217 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 1.6154ms.
2019-04-18 17:00:28.218 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:28.218 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:28.219 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:00:28.220 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:00:28.223 +02:00 [Information] Executed action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 17.1039ms.
2019-04-18 17:00:28.225 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__bezorgdag_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [x].[Dag], [x].[BestelDeadlineDag], [x].[BestelDeadlineTijd], [x].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [x]
WHERE [x].[Dag] = @__bezorgdag_0"
2019-04-18 17:00:28.226 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:00:28.227 +02:00 [Information] Executing JsonResult, writing value of type '"SogyoLunchApp.Winkel"'.
2019-04-18 17:00:28.230 +02:00 [Information] Executed action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 12.0447ms.
2019-04-18 17:00:28.234 +02:00 [Information] Executed action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" in 36.8526ms
2019-04-18 17:00:28.235 +02:00 [Information] Executing JsonResult, writing value of type '"System.DateTime"'.
2019-04-18 17:00:28.235 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 17:00:28.236 +02:00 [Information] Request finished in 106.7798ms 200 application/json; charset=utf-8
2019-04-18 17:00:28.236 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 17:00:28.237 +02:00 [Information] Executed action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" in 27.4322ms
2019-04-18 17:00:28.241 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenbijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 21.4783ms.
2019-04-18 17:00:28.242 +02:00 [Information] Request finished in 105.9645ms 200 application/json; charset=utf-8
2019-04-18 17:00:28.243 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:00:28.247 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenbijDatum (Services)" in 33.5435ms
2019-04-18 17:00:28.248 +02:00 [Information] Request finished in 112.3359ms 200 application/json; charset=utf-8
2019-04-18 17:00:28.254 +02:00 [Information] Executed DbCommand ("15"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x.ProductenPerBestellingen].[BestellingId], [x.ProductenPerBestellingen].[ProductId], [x.ProductenPerBestellingen].[Aantal], [x.ProductenPerBestellingen].[Notitie], [x.ProductenPerBestellingen].[Prijs], [p.Product].[ProductId], [p.Product].[CategorieId], [p.Product].[Naam], [p.Product].[Prijs], [p.Product].[WinkelId]
FROM [ProductenPerBestellingen] AS [x.ProductenPerBestellingen]
INNER JOIN [Producten] AS [p.Product] ON [x.ProductenPerBestellingen].[ProductId] = [p.Product].[ProductId]
INNER JOIN (
    SELECT [x0].[BestellingId]
    FROM [Bestellingen] AS [x0]
    WHERE (CONVERT(date, [x0].[Bezorgdatum]) = @__date_Date_0) AND ([x0].[GebruikerId] = @__gebruikerId_1)
) AS [t] ON [x.ProductenPerBestellingen].[BestellingId] = [t].[BestellingId]
ORDER BY [t].[BestellingId]"
2019-04-18 17:00:28.258 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 51.0084ms
2019-04-18 17:00:28.259 +02:00 [Information] Request finished in 130.2625ms 200 application/json; charset=utf-8
2019-04-18 17:00:30.988 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:00:30.988 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:00:30.990 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:00:30.991 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:00:30.992 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:00:30.993 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:00:30.993 +02:00 [Information] Request finished in 5.2612ms 204 
2019-04-18 17:00:30.994 +02:00 [Information] Request finished in 6.2583ms 204 
2019-04-18 17:00:31.002 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:00:31.002 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:00:31.003 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:00:31.004 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:00:31.004 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:00:31.005 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:00:31.006 +02:00 [Information] Successfully validated the token.
2019-04-18 17:00:31.006 +02:00 [Information] Successfully validated the token.
2019-04-18 17:00:31.007 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:00:31.007 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:00:31.009 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:00:31.009 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:00:31.027 +02:00 [Information] Executed DbCommand ("15"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:00:31.027 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:00:31.056 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:00:31.056 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:00:31.058 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:00:31.060 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:00:31.062 +02:00 [Information] Authorization was successful.
2019-04-18 17:00:31.064 +02:00 [Information] Authorization was successful.
2019-04-18 17:00:31.065 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:00:31.065 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:00:31.066 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0043ms.
2019-04-18 17:00:31.067 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.2346ms.
2019-04-18 17:00:31.068 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:00:31.070 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:00:31.073 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:00:31.075 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 13.5404ms
2019-04-18 17:00:31.077 +02:00 [Information] Request finished in 74.6781ms 200 application/json; charset=utf-8
2019-04-18 17:00:31.085 +02:00 [Information] Executed DbCommand ("12"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:00:31.087 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 23.3287ms
2019-04-18 17:00:31.088 +02:00 [Information] Request finished in 85.9488ms 200 application/json; charset=utf-8
2019-04-18 17:02:12.834 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:02:12.834 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:02:12.843 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:02:12.845 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:02:12.846 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:02:12.847 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:02:12.848 +02:00 [Information] Request finished in 14.0773ms 204 
2019-04-18 17:02:12.848 +02:00 [Information] Request finished in 14.6138ms 204 
2019-04-18 17:02:13.138 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:02:13.138 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:02:13.142 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:02:13.143 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:02:13.143 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:02:13.157 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:02:13.158 +02:00 [Information] Successfully validated the token.
2019-04-18 17:02:13.158 +02:00 [Information] Successfully validated the token.
2019-04-18 17:02:13.159 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:02:13.160 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:02:13.169 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:02:13.170 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:02:13.188 +02:00 [Information] Executed DbCommand ("14"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:02:13.188 +02:00 [Information] Executed DbCommand ("15"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:02:13.201 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:02:13.201 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:02:13.205 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:02:13.206 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:02:13.206 +02:00 [Information] Authorization was successful.
2019-04-18 17:02:13.207 +02:00 [Information] Authorization was successful.
2019-04-18 17:02:13.208 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:02:13.208 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:02:13.209 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0062ms.
2019-04-18 17:02:13.210 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0923ms.
2019-04-18 17:02:13.212 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:02:13.213 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:02:13.237 +02:00 [Information] Executed DbCommand ("22"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:02:13.238 +02:00 [Information] Executed DbCommand ("22"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:02:13.239 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 32.83ms
2019-04-18 17:02:13.250 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 42.5606ms
2019-04-18 17:02:13.251 +02:00 [Information] Request finished in 112.6617ms 200 application/json; charset=utf-8
2019-04-18 17:02:13.252 +02:00 [Information] Request finished in 114.1179ms 200 application/json; charset=utf-8
2019-04-18 17:03:09.655 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:03:09.659 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:03:09.659 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:03:09.660 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:03:09.661 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:03:09.661 +02:00 [Information] Request finished in 6.6991ms 204 
2019-04-18 17:03:09.662 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:03:09.665 +02:00 [Information] Request finished in 5.8845ms 204 
2019-04-18 17:03:09.674 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:03:09.677 +02:00 [Information] Request starting HTTP/1.1 PUT http://localhost:5000/sogyolunchapi/categorie application/json;charset=UTF-8 77
2019-04-18 17:03:09.678 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:03:09.679 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:03:09.680 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:03:09.681 +02:00 [Information] Successfully validated the token.
2019-04-18 17:03:09.683 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:03:09.684 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:03:09.685 +02:00 [Information] Successfully validated the token.
2019-04-18 17:03:09.686 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:03:09.686 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:03:09.689 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:03:09.696 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:03:09.695 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:03:09.704 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:03:09.706 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:03:09.713 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:03:09.716 +02:00 [Information] Route matched with "{action = \"UpdateCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.UpdateCategorie (Services)"
2019-04-18 17:03:09.716 +02:00 [Information] Authorization was successful.
2019-04-18 17:03:09.717 +02:00 [Information] Authorization was successful.
2019-04-18 17:03:09.718 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:03:09.719 +02:00 [Information] Executing action method "Services.APIService.CategorieController.UpdateCategorie (Services)" with arguments (["SogyoLunchApp.Categorie"]) - Validation state: Valid
2019-04-18 17:03:09.719 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0966ms.
2019-04-18 17:03:09.722 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:03:09.726 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:03:09.726 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [Categorien] SET [CategorieNaam] = @p0, [VolgordeNummer] = @p1, [WinkelId] = @p2
WHERE [CategorieId] = @p3;
SELECT @@ROWCOUNT;"
2019-04-18 17:03:09.728 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 11.8008ms
2019-04-18 17:03:09.731 +02:00 [Information] Request finished in 57.1565ms 200 application/json; charset=utf-8
2019-04-18 17:03:09.733 +02:00 [Information] Executed action method "Services.APIService.CategorieController.UpdateCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 12.0792ms.
2019-04-18 17:03:09.735 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 17:03:09.736 +02:00 [Information] Executed action "Services.APIService.CategorieController.UpdateCategorie (Services)" in 18.5833ms
2019-04-18 17:03:09.737 +02:00 [Information] Request finished in 59.5753ms 200 
2019-04-18 17:03:19.342 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:03:19.345 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:03:19.350 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:03:19.351 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:03:19.352 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:03:19.352 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:03:19.353 +02:00 [Information] Request finished in 10.7903ms 204 
2019-04-18 17:03:19.354 +02:00 [Information] Request finished in 8.9045ms 204 
2019-04-18 17:03:19.588 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:03:19.588 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:03:19.595 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:03:19.595 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:03:19.599 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:03:19.600 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:03:19.602 +02:00 [Information] Successfully validated the token.
2019-04-18 17:03:19.602 +02:00 [Information] Successfully validated the token.
2019-04-18 17:03:19.602 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:03:19.603 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:03:19.604 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:03:19.605 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:03:19.696 +02:00 [Information] Executed DbCommand ("88"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:03:19.703 +02:00 [Information] Executed DbCommand ("93"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:03:19.755 +02:00 [Information] Executed DbCommand ("12"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:03:19.757 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:03:19.759 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:03:19.761 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:03:19.762 +02:00 [Information] Authorization was successful.
2019-04-18 17:03:19.767 +02:00 [Information] Authorization was successful.
2019-04-18 17:03:19.767 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:03:19.769 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.006ms.
2019-04-18 17:03:19.769 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:03:19.771 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:03:19.772 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0981ms.
2019-04-18 17:03:19.774 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:03:19.775 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:03:19.776 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:03:19.778 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 15.9681ms
2019-04-18 17:03:19.781 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 14.3423ms
2019-04-18 17:03:19.782 +02:00 [Information] Request finished in 194.1707ms 200 application/json; charset=utf-8
2019-04-18 17:03:19.783 +02:00 [Information] Request finished in 194.7946ms 200 application/json; charset=utf-8
2019-04-18 17:04:50.485 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:04:50.486 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:04:50.487 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:04:50.487 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:04:50.488 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:04:50.490 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:04:50.490 +02:00 [Information] Request finished in 4.871ms 204 
2019-04-18 17:04:50.494 +02:00 [Information] Request finished in 8.7242ms 204 
2019-04-18 17:04:50.524 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:04:50.524 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:04:50.525 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:04:50.526 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:04:50.527 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:04:50.527 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:04:50.528 +02:00 [Information] Successfully validated the token.
2019-04-18 17:04:50.529 +02:00 [Information] Successfully validated the token.
2019-04-18 17:04:50.530 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:04:50.530 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:04:50.532 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:04:50.532 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:04:50.569 +02:00 [Information] Executed DbCommand ("29"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:04:50.569 +02:00 [Information] Executed DbCommand ("21"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:04:50.583 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:04:50.584 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:04:50.587 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:04:50.589 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:04:50.589 +02:00 [Information] Authorization was successful.
2019-04-18 17:04:50.590 +02:00 [Information] Authorization was successful.
2019-04-18 17:04:50.590 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:04:50.591 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:04:50.592 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0773ms.
2019-04-18 17:04:50.593 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0027ms.
2019-04-18 17:04:50.594 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:04:50.595 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:04:50.604 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:04:50.604 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:04:50.607 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 17.6254ms
2019-04-18 17:04:50.608 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 18.5454ms
2019-04-18 17:04:50.611 +02:00 [Information] Request finished in 86.8276ms 200 application/json; charset=utf-8
2019-04-18 17:04:50.612 +02:00 [Information] Request finished in 88.0842ms 200 application/json; charset=utf-8
2019-04-18 17:04:54.487 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:04:54.487 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:04:54.493 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:04:54.494 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:04:54.495 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:04:54.495 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:04:54.496 +02:00 [Information] Request finished in 8.8419ms 204 
2019-04-18 17:04:54.496 +02:00 [Information] Request finished in 9.2268ms 204 
2019-04-18 17:04:54.774 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:04:54.774 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:04:54.775 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:04:54.776 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:04:54.776 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:04:54.777 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:04:54.778 +02:00 [Information] Successfully validated the token.
2019-04-18 17:04:54.780 +02:00 [Information] Successfully validated the token.
2019-04-18 17:04:54.781 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:04:54.782 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:04:54.799 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:04:54.927 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:04:54.938 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:04:54.958 +02:00 [Information] Executed DbCommand ("19"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:04:54.963 +02:00 [Information] Executed DbCommand ("18"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:04:54.964 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:04:54.972 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:04:54.973 +02:00 [Information] Authorization was successful.
2019-04-18 17:04:54.974 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:04:54.975 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1013ms.
2019-04-18 17:04:54.976 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:04:54.977 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:04:54.978 +02:00 [Information] Authorization was successful.
2019-04-18 17:04:54.979 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:04:54.980 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0053ms.
2019-04-18 17:04:54.981 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:04:54.988 +02:00 [Information] Executed DbCommand ("10"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:04:54.988 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:04:54.990 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 17.091ms
2019-04-18 17:04:54.992 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 13.3877ms
2019-04-18 17:04:54.993 +02:00 [Information] Request finished in 218.8716ms 200 application/json; charset=utf-8
2019-04-18 17:04:54.995 +02:00 [Information] Request finished in 221.0486ms 200 application/json; charset=utf-8
2019-04-18 17:05:25.589 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:05:25.590 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:05:25.593 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:05:25.595 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:05:25.597 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:05:25.598 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:05:25.603 +02:00 [Information] Request finished in 13.5582ms 204 
2019-04-18 17:05:25.608 +02:00 [Information] Request finished in 17.9321ms 204 
2019-04-18 17:05:25.621 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:05:25.621 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:05:25.621 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:05:25.622 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:05:25.623 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:05:25.624 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:05:25.625 +02:00 [Information] Successfully validated the token.
2019-04-18 17:05:25.625 +02:00 [Information] Successfully validated the token.
2019-04-18 17:05:25.626 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:05:25.626 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:05:25.627 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:05:25.628 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:05:25.633 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:05:25.633 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:05:25.642 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:05:25.643 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:05:25.645 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:05:25.647 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:05:25.647 +02:00 [Information] Authorization was successful.
2019-04-18 17:05:25.648 +02:00 [Information] Authorization was successful.
2019-04-18 17:05:25.649 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:05:25.649 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:05:25.651 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1295ms.
2019-04-18 17:05:25.652 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:05:25.653 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0036ms.
2019-04-18 17:05:25.655 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:05:25.657 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:05:25.658 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:05:25.659 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 11.9727ms
2019-04-18 17:05:25.661 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 12.4106ms
2019-04-18 17:05:25.662 +02:00 [Information] Request finished in 41.4139ms 200 application/json; charset=utf-8
2019-04-18 17:05:25.664 +02:00 [Information] Request finished in 43.1206ms 200 application/json; charset=utf-8
2019-04-18 17:07:25.687 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:07:25.687 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:07:25.692 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:07:25.693 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:07:25.694 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:07:25.695 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:07:25.696 +02:00 [Information] Request finished in 8.3507ms 204 
2019-04-18 17:07:25.704 +02:00 [Information] Request finished in 13.0513ms 204 
2019-04-18 17:07:25.980 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:07:25.996 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:07:26.000 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:07:26.002 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:07:26.003 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:07:26.004 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:07:26.005 +02:00 [Information] Successfully validated the token.
2019-04-18 17:07:26.010 +02:00 [Information] Successfully validated the token.
2019-04-18 17:07:26.010 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:07:26.011 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:07:26.012 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:07:26.013 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:07:26.048 +02:00 [Information] Executed DbCommand ("11"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:07:26.048 +02:00 [Information] Executed DbCommand ("33"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:07:26.062 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:07:26.065 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:07:26.067 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:07:26.067 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:07:26.068 +02:00 [Information] Authorization was successful.
2019-04-18 17:07:26.069 +02:00 [Information] Authorization was successful.
2019-04-18 17:07:26.070 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:07:26.070 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:07:26.071 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0067ms.
2019-04-18 17:07:26.073 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1331ms.
2019-04-18 17:07:26.074 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:07:26.075 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:07:26.081 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:07:26.081 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:07:26.084 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 14.3475ms
2019-04-18 17:07:26.086 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 17.7248ms
2019-04-18 17:07:26.087 +02:00 [Information] Request finished in 111.721ms 200 application/json; charset=utf-8
2019-04-18 17:07:26.091 +02:00 [Information] Request finished in 95.5125ms 200 application/json; charset=utf-8
2019-04-18 17:07:53.515 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:07:53.515 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:07:53.517 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:07:53.518 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:07:53.519 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:07:53.521 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:07:53.522 +02:00 [Information] Request finished in 6.5712ms 204 
2019-04-18 17:07:53.525 +02:00 [Information] Request finished in 9.441ms 204 
2019-04-18 17:07:53.536 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:07:53.536 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:07:53.537 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:07:53.538 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:07:53.540 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:07:53.541 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:07:53.542 +02:00 [Information] Successfully validated the token.
2019-04-18 17:07:53.542 +02:00 [Information] Successfully validated the token.
2019-04-18 17:07:53.543 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:07:53.543 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:07:53.544 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:07:53.545 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:07:53.553 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:07:53.553 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:07:53.560 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:07:53.561 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:07:53.562 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:07:53.564 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:07:53.565 +02:00 [Information] Authorization was successful.
2019-04-18 17:07:53.565 +02:00 [Information] Authorization was successful.
2019-04-18 17:07:53.566 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:07:53.567 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:07:53.568 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0565ms.
2019-04-18 17:07:53.568 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0028ms.
2019-04-18 17:07:53.570 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:07:53.571 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:07:53.575 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:07:53.575 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:07:53.577 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 11.2717ms
2019-04-18 17:07:53.579 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 13.9745ms
2019-04-18 17:07:53.580 +02:00 [Information] Request finished in 43.655ms 200 application/json; charset=utf-8
2019-04-18 17:07:53.581 +02:00 [Information] Request finished in 44.6154ms 200 application/json; charset=utf-8
2019-04-18 17:07:55.826 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:07:55.830 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:07:55.830 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:07:55.831 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:07:55.833 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:07:55.834 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:07:55.835 +02:00 [Information] Request finished in 8.8514ms 204 
2019-04-18 17:07:55.836 +02:00 [Information] Request finished in 5.8819ms 204 
2019-04-18 17:07:56.054 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:07:56.054 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:07:56.056 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:07:56.058 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:07:56.059 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:07:56.060 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:07:56.062 +02:00 [Information] Successfully validated the token.
2019-04-18 17:07:56.063 +02:00 [Information] Successfully validated the token.
2019-04-18 17:07:56.063 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:07:56.064 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:07:56.065 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:07:56.066 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:07:56.100 +02:00 [Information] Executed DbCommand ("32"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:07:56.100 +02:00 [Information] Executed DbCommand ("25"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:07:56.150 +02:00 [Information] Executed DbCommand ("23"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:07:56.170 +02:00 [Information] Executed DbCommand ("16"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:07:56.183 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:07:56.185 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:07:56.186 +02:00 [Information] Authorization was successful.
2019-04-18 17:07:56.187 +02:00 [Information] Authorization was successful.
2019-04-18 17:07:56.188 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:07:56.188 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:07:56.194 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0124ms.
2019-04-18 17:07:56.195 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1634ms.
2019-04-18 17:07:56.197 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:07:56.198 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:07:56.199 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:07:56.200 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:07:56.201 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 14.3689ms
2019-04-18 17:07:56.214 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 27.951ms
2019-04-18 17:07:56.215 +02:00 [Information] Request finished in 160.1339ms 200 application/json; charset=utf-8
2019-04-18 17:07:56.216 +02:00 [Information] Request finished in 161.3968ms 200 application/json; charset=utf-8
2019-04-18 17:09:37.065 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:09:37.066 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:09:37.084 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:09:37.085 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:09:37.086 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:09:37.088 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:09:37.089 +02:00 [Information] Request finished in 23.8336ms 204 
2019-04-18 17:09:37.090 +02:00 [Information] Request finished in 24.3253ms 204 
2019-04-18 17:09:37.105 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:09:37.105 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:09:37.106 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:09:37.107 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:09:37.108 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:09:37.108 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:09:37.109 +02:00 [Information] Successfully validated the token.
2019-04-18 17:09:37.110 +02:00 [Information] Successfully validated the token.
2019-04-18 17:09:37.110 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:09:37.111 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:09:37.112 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:09:37.112 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:09:37.124 +02:00 [Information] Executed DbCommand ("10"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:09:37.125 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:09:37.131 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:09:37.133 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:09:37.143 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:09:37.144 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:09:37.144 +02:00 [Information] Authorization was successful.
2019-04-18 17:09:37.145 +02:00 [Information] Authorization was successful.
2019-04-18 17:09:37.146 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:09:37.146 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:09:37.147 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1697ms.
2019-04-18 17:09:37.148 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0044ms.
2019-04-18 17:09:37.150 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:09:37.151 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:09:37.161 +02:00 [Information] Executed DbCommand ("9"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:09:37.161 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:09:37.163 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 18.8782ms
2019-04-18 17:09:37.165 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 19.4856ms
2019-04-18 17:09:37.166 +02:00 [Information] Request finished in 60.9808ms 200 application/json; charset=utf-8
2019-04-18 17:09:37.167 +02:00 [Information] Request finished in 62.2596ms 200 application/json; charset=utf-8
2019-04-18 17:09:41.943 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:09:41.943 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:09:41.945 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:09:41.946 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:09:41.947 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:09:41.947 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:09:41.948 +02:00 [Information] Request finished in 5.1617ms 204 
2019-04-18 17:09:41.949 +02:00 [Information] Request finished in 5.8384ms 204 
2019-04-18 17:09:42.239 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:09:42.239 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:09:42.248 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:09:42.248 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:09:42.249 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:09:42.250 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:09:42.251 +02:00 [Information] Successfully validated the token.
2019-04-18 17:09:42.252 +02:00 [Information] Successfully validated the token.
2019-04-18 17:09:42.253 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:09:42.254 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:09:42.255 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:09:42.256 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:09:42.296 +02:00 [Information] Executed DbCommand ("32"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:09:42.296 +02:00 [Information] Executed DbCommand ("10"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:09:42.356 +02:00 [Information] Executed DbCommand ("17"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:09:42.356 +02:00 [Information] Executed DbCommand ("16"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:09:42.384 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:09:42.385 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:09:42.386 +02:00 [Information] Authorization was successful.
2019-04-18 17:09:42.386 +02:00 [Information] Authorization was successful.
2019-04-18 17:09:42.388 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:09:42.389 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:09:42.390 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1267ms.
2019-04-18 17:09:42.391 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0132ms.
2019-04-18 17:09:42.396 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:09:42.398 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:09:42.399 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:09:42.400 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:09:42.401 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 15.7063ms
2019-04-18 17:09:42.403 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 16.4266ms
2019-04-18 17:09:42.404 +02:00 [Information] Request finished in 164.6939ms 200 application/json; charset=utf-8
2019-04-18 17:09:42.405 +02:00 [Information] Request finished in 165.9591ms 200 application/json; charset=utf-8
2019-04-18 17:11:17.729 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 17:11:17.730 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:11:17.731 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:11:17.732 +02:00 [Information] Request finished in 3.4184ms 204 
2019-04-18 17:11:17.754 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 17:11:17.755 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:11:17.756 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:11:17.757 +02:00 [Information] Successfully validated the token.
2019-04-18 17:11:17.760 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:11:17.765 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:11:17.774 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:11:17.787 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:11:17.790 +02:00 [Information] Route matched with "{action = \"getBezorgdagen\", controller = \"Bezorgdag\"}". Executing action "Services.APIService.BezorgdagController.getBezorgdagen (Services)"
2019-04-18 17:11:17.797 +02:00 [Information] Authorization was successful.
2019-04-18 17:11:17.801 +02:00 [Information] Executing action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)" with arguments (["40"]) - Validation state: Valid
2019-04-18 17:11:17.807 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:17.822 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:17.825 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:17.830 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:17.832 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:17.835 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:17.837 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:17.840 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:17.845 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:17.847 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:17.850 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:17.853 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:17.855 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:17.857 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:17.861 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:17.864 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:17.866 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:17.869 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:17.872 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:17.874 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:17.878 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:17.880 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:17.883 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:17.885 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:17.887 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:17.889 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:17.892 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:17.895 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:17.897 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:17.900 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:17.902 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:17.904 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:17.907 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:17.910 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:17.912 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:17.914 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:17.916 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:17.919 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:17.921 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:17.923 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:17.925 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:17.928 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:17.930 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:17.932 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:17.934 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:17.936 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:17.939 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:17.941 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:17.943 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:17.946 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:17.948 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:17.950 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:17.952 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:17.954 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:17.956 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:17.958 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:17.962 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:17.964 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:17.966 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:17.968 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:17.971 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:17.973 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:17.976 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:17.980 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:17.982 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:17.984 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:17.987 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:17.989 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:17.991 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:17.995 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:17.998 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:18.001 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:18.003 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:18.006 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:18.008 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:18.013 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:18.016 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:18.018 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:18.020 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:18.022 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:18.024 +02:00 [Information] Executed action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 221.0967ms.
2019-04-18 17:11:18.026 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[System.DateTime, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"'.
2019-04-18 17:11:18.028 +02:00 [Information] Executed action "Services.APIService.BezorgdagController.getBezorgdagen (Services)" in 231.2751ms
2019-04-18 17:11:18.030 +02:00 [Information] Request finished in 275.8192ms 200 application/json; charset=utf-8
2019-04-18 17:11:18.051 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 17:11:18.053 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:11:18.053 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 17:11:18.053 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 17:11:18.056 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:11:18.073 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 17:11:18.073 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:11:18.100 +02:00 [Information] Request finished in 49.3028ms 204 
2019-04-18 17:11:18.101 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:11:18.102 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:11:18.103 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:11:18.104 +02:00 [Information] Request finished in 50.4132ms 204 
2019-04-18 17:11:18.104 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 17:11:18.104 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:11:18.106 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:11:18.107 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:11:18.108 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 17:11:18.108 +02:00 [Information] Request finished in 54.5384ms 204 
2019-04-18 17:11:18.110 +02:00 [Information] Request finished in 37.0092ms 204 
2019-04-18 17:11:18.115 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:11:18.116 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 17:11:18.116 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 17:11:18.117 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:11:18.118 +02:00 [Information] Successfully validated the token.
2019-04-18 17:11:18.118 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:11:18.119 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:11:18.120 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:11:18.120 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:11:18.121 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:11:18.122 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:11:18.122 +02:00 [Information] Successfully validated the token.
2019-04-18 17:11:18.123 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:11:18.123 +02:00 [Information] Successfully validated the token.
2019-04-18 17:11:18.124 +02:00 [Information] Successfully validated the token.
2019-04-18 17:11:18.124 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:11:18.129 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:11:18.130 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:11:18.130 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:11:18.131 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:11:18.131 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:11:18.132 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:11:18.137 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:11:18.137 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:11:18.160 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 17:11:18.161 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:11:18.161 +02:00 [Information] Authorization was successful.
2019-04-18 17:11:18.167 +02:00 [Information] Route matched with "{action = \"GetWinkelBijDatum\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)"
2019-04-18 17:11:18.167 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:11:18.167 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:11:18.168 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 17:11:18.168 +02:00 [Information] Authorization was successful.
2019-04-18 17:11:18.173 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:11:18.175 +02:00 [Information] Executing action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 17:11:18.175 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:11:18.177 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 3.1773ms.
2019-04-18 17:11:18.178 +02:00 [Information] Route matched with "{action = \"GetDeadlinePerDatum\", controller = \"Deadline\"}". Executing action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)"
2019-04-18 17:11:18.184 +02:00 [Information] Route matched with "{action = \"GetProductenbijDatum\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenbijDatum (Services)"
2019-04-18 17:11:18.185 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:18.186 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:11:18.187 +02:00 [Information] Authorization was successful.
2019-04-18 17:11:18.188 +02:00 [Information] Authorization was successful.
2019-04-18 17:11:18.191 +02:00 [Information] Executing action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 17:11:18.192 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenbijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 17:11:18.195 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:18.198 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 17:11:18.198 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__bezorgdag_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [x].[Dag], [x].[BestelDeadlineDag], [x].[BestelDeadlineTijd], [x].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [x]
WHERE [x].[Dag] = @__bezorgdag_0"
2019-04-18 17:11:18.198 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:18.199 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:11:18.202 +02:00 [Information] Executed action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 8.9749ms.
2019-04-18 17:11:18.204 +02:00 [Information] Executed action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 19.1366ms.
2019-04-18 17:11:18.206 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x.ProductenPerBestellingen].[BestellingId], [x.ProductenPerBestellingen].[ProductId], [x.ProductenPerBestellingen].[Aantal], [x.ProductenPerBestellingen].[Notitie], [x.ProductenPerBestellingen].[Prijs], [p.Product].[ProductId], [p.Product].[CategorieId], [p.Product].[Naam], [p.Product].[Prijs], [p.Product].[WinkelId]
FROM [ProductenPerBestellingen] AS [x.ProductenPerBestellingen]
INNER JOIN [Producten] AS [p.Product] ON [x.ProductenPerBestellingen].[ProductId] = [p.Product].[ProductId]
INNER JOIN (
    SELECT [x0].[BestellingId]
    FROM [Bestellingen] AS [x0]
    WHERE (CONVERT(date, [x0].[Bezorgdatum]) = @__date_Date_0) AND ([x0].[GebruikerId] = @__gebruikerId_1)
) AS [t] ON [x.ProductenPerBestellingen].[BestellingId] = [t].[BestellingId]
ORDER BY [t].[BestellingId]"
2019-04-18 17:11:18.206 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:11:18.207 +02:00 [Information] Executing JsonResult, writing value of type '"System.DateTime"'.
2019-04-18 17:11:18.208 +02:00 [Information] Executing JsonResult, writing value of type '"SogyoLunchApp.Winkel"'.
2019-04-18 17:11:18.212 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 51.0587ms
2019-04-18 17:11:18.214 +02:00 [Information] Executed action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" in 27.5996ms
2019-04-18 17:11:18.215 +02:00 [Information] Executed action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" in 47.1454ms
2019-04-18 17:11:18.217 +02:00 [Information] Request finished in 112.7631ms 200 application/json; charset=utf-8
2019-04-18 17:11:18.218 +02:00 [Information] Request finished in 110.0308ms 200 application/json; charset=utf-8
2019-04-18 17:11:18.219 +02:00 [Information] Request finished in 103.0716ms 200 application/json; charset=utf-8
2019-04-18 17:11:18.220 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 17:11:18.223 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenbijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 27.4152ms.
2019-04-18 17:11:18.224 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:11:18.225 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenbijDatum (Services)" in 37.5032ms
2019-04-18 17:11:18.228 +02:00 [Information] Request finished in 111.6193ms 200 application/json; charset=utf-8
2019-04-18 17:11:23.572 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:11:23.572 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:11:23.574 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:11:23.575 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:11:23.578 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:11:23.579 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:11:23.580 +02:00 [Information] Request finished in 7.5756ms 204 
2019-04-18 17:11:23.582 +02:00 [Information] Request finished in 9.5543ms 204 
2019-04-18 17:11:23.586 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:11:23.588 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:11:23.589 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:11:23.589 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:11:23.590 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:11:23.591 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:11:23.592 +02:00 [Information] Successfully validated the token.
2019-04-18 17:11:23.593 +02:00 [Information] Successfully validated the token.
2019-04-18 17:11:23.594 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:11:23.595 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:11:23.597 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:11:23.599 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:11:23.603 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:11:23.604 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:11:23.608 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:11:23.612 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:11:23.614 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:11:23.615 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:11:23.616 +02:00 [Information] Authorization was successful.
2019-04-18 17:11:23.617 +02:00 [Information] Authorization was successful.
2019-04-18 17:11:23.617 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:11:23.618 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:11:23.619 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0042ms.
2019-04-18 17:11:23.620 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.6668ms.
2019-04-18 17:11:23.621 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:11:23.622 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:11:23.624 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:11:23.625 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 9.5821ms
2019-04-18 17:11:23.628 +02:00 [Information] Request finished in 41.7405ms 200 application/json; charset=utf-8
2019-04-18 17:11:23.630 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:11:23.632 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 15.7649ms
2019-04-18 17:11:23.634 +02:00 [Information] Request finished in 45.2246ms 200 application/json; charset=utf-8
2019-04-18 17:12:09.951 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:12:09.951 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:12:09.952 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:12:09.953 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:12:09.954 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:12:09.954 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:12:09.955 +02:00 [Information] Request finished in 4.4696ms 204 
2019-04-18 17:12:09.964 +02:00 [Information] Request finished in 13.3458ms 204 
2019-04-18 17:12:09.974 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:12:09.981 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:12:09.982 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:12:09.982 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:12:09.983 +02:00 [Information] Successfully validated the token.
2019-04-18 17:12:09.983 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:12:09.984 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:12:09.984 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:12:09.985 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:12:09.986 +02:00 [Information] Successfully validated the token.
2019-04-18 17:12:09.987 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:12:09.988 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:12:09.990 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:12:09.994 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:12:09.997 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:12:10.003 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:12:10.004 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:12:10.006 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:12:10.007 +02:00 [Information] Authorization was successful.
2019-04-18 17:12:10.007 +02:00 [Information] Authorization was successful.
2019-04-18 17:12:10.008 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:12:10.008 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:12:10.009 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.005ms.
2019-04-18 17:12:10.011 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.134ms.
2019-04-18 17:12:10.012 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:12:10.013 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:12:10.014 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:12:10.015 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:12:10.016 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 10.0031ms
2019-04-18 17:12:10.018 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 10.9542ms
2019-04-18 17:12:10.019 +02:00 [Information] Request finished in 45.2072ms 200 application/json; charset=utf-8
2019-04-18 17:12:10.021 +02:00 [Information] Request finished in 39.097ms 200 application/json; charset=utf-8
2019-04-18 17:12:18.299 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:12:18.300 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:12:18.323 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:12:18.324 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:12:18.324 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:12:18.333 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:12:18.333 +02:00 [Information] Request finished in 35.2094ms 204 
2019-04-18 17:12:18.335 +02:00 [Information] Request finished in 34.9816ms 204 
2019-04-18 17:12:18.566 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:12:18.566 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:12:18.567 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:12:18.568 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:12:18.569 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:12:18.569 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:12:18.570 +02:00 [Information] Successfully validated the token.
2019-04-18 17:12:18.570 +02:00 [Information] Successfully validated the token.
2019-04-18 17:12:18.586 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:12:18.588 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:12:18.589 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:12:18.590 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:12:18.616 +02:00 [Information] Executed DbCommand ("15"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:12:18.616 +02:00 [Information] Executed DbCommand ("24"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:12:18.639 +02:00 [Information] Executed DbCommand ("13"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:12:18.640 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:12:18.648 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:12:18.649 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:12:18.649 +02:00 [Information] Authorization was successful.
2019-04-18 17:12:18.650 +02:00 [Information] Authorization was successful.
2019-04-18 17:12:18.651 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:12:18.652 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:12:18.656 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1472ms.
2019-04-18 17:12:18.657 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.005ms.
2019-04-18 17:12:18.658 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:12:18.661 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:12:18.668 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:12:18.668 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:12:18.670 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 19.8056ms
2019-04-18 17:12:18.672 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 22.6286ms
2019-04-18 17:12:18.673 +02:00 [Information] Request finished in 106.8862ms 200 application/json; charset=utf-8
2019-04-18 17:12:18.674 +02:00 [Information] Request finished in 107.7369ms 200 application/json; charset=utf-8
2019-04-18 17:14:30.146 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:14:30.153 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:14:30.153 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:14:30.164 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:14:30.164 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:14:30.165 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:14:30.166 +02:00 [Information] Request finished in 19.7909ms 204 
2019-04-18 17:14:30.166 +02:00 [Information] Request finished in 13.8172ms 204 
2019-04-18 17:14:30.180 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:14:30.181 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:14:30.181 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:14:30.182 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:14:30.183 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:14:30.183 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:14:30.184 +02:00 [Information] Successfully validated the token.
2019-04-18 17:14:30.185 +02:00 [Information] Successfully validated the token.
2019-04-18 17:14:30.185 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:14:30.186 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:14:30.187 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:14:30.187 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:14:30.393 +02:00 [Information] Executed DbCommand ("202"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:14:30.403 +02:00 [Information] Executed DbCommand ("213"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:14:30.425 +02:00 [Information] Executed DbCommand ("18"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:14:30.431 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:14:30.433 +02:00 [Information] Authorization was successful.
2019-04-18 17:14:30.434 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:14:30.436 +02:00 [Information] Executed DbCommand ("37"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:14:30.437 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1369ms.
2019-04-18 17:14:30.440 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:14:30.440 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:14:30.442 +02:00 [Information] Authorization was successful.
2019-04-18 17:14:30.446 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:14:30.447 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0067ms.
2019-04-18 17:14:30.449 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:14:30.452 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:14:30.455 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 12.8565ms
2019-04-18 17:14:30.456 +02:00 [Information] Request finished in 275.4641ms 200 application/json; charset=utf-8
2019-04-18 17:14:30.470 +02:00 [Information] Executed DbCommand ("25"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:14:30.472 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 39.8252ms
2019-04-18 17:14:30.474 +02:00 [Information] Request finished in 297.1427ms 200 application/json; charset=utf-8
2019-04-18 17:14:35.408 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:14:35.408 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:14:35.413 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:14:35.413 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:14:35.414 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:14:35.415 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:14:35.415 +02:00 [Information] Request finished in 7.8602ms 204 
2019-04-18 17:14:35.416 +02:00 [Information] Request finished in 8.1605ms 204 
2019-04-18 17:14:35.651 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:14:35.651 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:14:35.656 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:14:35.657 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:14:35.658 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:14:35.663 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:14:35.664 +02:00 [Information] Successfully validated the token.
2019-04-18 17:14:35.664 +02:00 [Information] Successfully validated the token.
2019-04-18 17:14:35.665 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:14:35.665 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:14:35.667 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:14:35.670 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:14:35.695 +02:00 [Information] Executed DbCommand ("23"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:14:35.697 +02:00 [Information] Executed DbCommand ("11"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:14:35.723 +02:00 [Information] Executed DbCommand ("19"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:14:35.727 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:14:35.734 +02:00 [Information] Authorization was successful.
2019-04-18 17:14:35.735 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:14:35.735 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:14:35.740 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0084ms.
2019-04-18 17:14:35.742 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:14:35.747 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:14:35.758 +02:00 [Information] Executed DbCommand ("12"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:14:35.768 +02:00 [Information] Authorization was successful.
2019-04-18 17:14:35.769 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 35.2662ms
2019-04-18 17:14:35.769 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:14:35.771 +02:00 [Information] Request finished in 119.712ms 200 application/json; charset=utf-8
2019-04-18 17:14:35.772 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0929ms.
2019-04-18 17:14:35.787 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:14:35.800 +02:00 [Information] Executed DbCommand ("10"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:14:35.803 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 43.2471ms
2019-04-18 17:14:35.804 +02:00 [Information] Request finished in 153.3114ms 200 application/json; charset=utf-8
2019-04-18 17:14:53.887 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:14:53.887 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:14:53.895 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:14:53.895 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:14:53.896 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:14:53.897 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:14:53.898 +02:00 [Information] Request finished in 10.8143ms 204 
2019-04-18 17:14:53.898 +02:00 [Information] Request finished in 10.8939ms 204 
2019-04-18 17:14:53.906 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:14:53.906 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:14:53.908 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:14:53.908 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:14:53.910 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:14:53.910 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:14:53.912 +02:00 [Information] Successfully validated the token.
2019-04-18 17:14:53.912 +02:00 [Information] Successfully validated the token.
2019-04-18 17:14:53.912 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:14:53.914 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:14:53.916 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:14:53.918 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:14:53.926 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:14:53.927 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:14:53.934 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:14:53.936 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:14:53.939 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:14:53.941 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:14:53.941 +02:00 [Information] Authorization was successful.
2019-04-18 17:14:53.942 +02:00 [Information] Authorization was successful.
2019-04-18 17:14:53.942 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:14:53.943 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:14:53.945 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0309ms.
2019-04-18 17:14:53.946 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1335ms.
2019-04-18 17:14:53.948 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:14:53.949 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:14:53.951 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:14:53.952 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:14:53.953 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 11.5299ms
2019-04-18 17:14:53.954 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 12.5571ms
2019-04-18 17:14:53.955 +02:00 [Information] Request finished in 48.8327ms 200 application/json; charset=utf-8
2019-04-18 17:14:53.956 +02:00 [Information] Request finished in 49.9018ms 200 application/json; charset=utf-8
2019-04-18 17:18:30.394 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:18:30.400 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:18:30.401 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:18:30.403 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:18:30.404 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:18:30.405 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:18:30.405 +02:00 [Information] Request finished in 11.1465ms 204 
2019-04-18 17:18:30.406 +02:00 [Information] Request finished in 5.7079ms 204 
2019-04-18 17:18:30.685 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:18:30.685 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:18:30.686 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:18:30.687 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:18:30.688 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:18:30.693 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:18:30.699 +02:00 [Information] Successfully validated the token.
2019-04-18 17:18:30.700 +02:00 [Information] Successfully validated the token.
2019-04-18 17:18:30.701 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:18:30.701 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:18:30.702 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:18:30.702 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:18:30.738 +02:00 [Information] Executed DbCommand ("33"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:18:30.739 +02:00 [Information] Executed DbCommand ("31"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:18:30.758 +02:00 [Information] Executed DbCommand ("9"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:18:30.766 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:18:30.768 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:18:30.771 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:18:30.771 +02:00 [Information] Authorization was successful.
2019-04-18 17:18:30.773 +02:00 [Information] Authorization was successful.
2019-04-18 17:18:30.773 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:18:30.774 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:18:30.775 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0988ms.
2019-04-18 17:18:30.776 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0043ms.
2019-04-18 17:18:30.777 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:18:30.779 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:18:30.783 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:18:30.785 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:18:30.785 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 12.7696ms
2019-04-18 17:18:30.787 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 16.3615ms
2019-04-18 17:18:30.788 +02:00 [Information] Request finished in 103.3512ms 200 application/json; charset=utf-8
2019-04-18 17:18:30.790 +02:00 [Information] Request finished in 108.887ms 200 application/json; charset=utf-8
2019-04-18 17:19:12.804 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:19:12.807 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:19:12.808 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:19:12.813 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:19:12.815 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:19:12.816 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:19:12.817 +02:00 [Information] Request finished in 13.6341ms 204 
2019-04-18 17:19:12.818 +02:00 [Information] Request finished in 10.8466ms 204 
2019-04-18 17:19:13.085 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:19:13.085 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:19:13.087 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:19:13.088 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:19:13.088 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:19:13.090 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:19:13.092 +02:00 [Information] Successfully validated the token.
2019-04-18 17:19:13.092 +02:00 [Information] Successfully validated the token.
2019-04-18 17:19:13.093 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:19:13.093 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:19:13.098 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:19:13.099 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:19:13.121 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:19:13.125 +02:00 [Information] Executed DbCommand ("19"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:19:13.170 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:19:13.172 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:19:13.184 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:19:13.186 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:19:13.186 +02:00 [Information] Authorization was successful.
2019-04-18 17:19:13.188 +02:00 [Information] Authorization was successful.
2019-04-18 17:19:13.189 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:19:13.190 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:19:13.192 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1643ms.
2019-04-18 17:19:13.193 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0054ms.
2019-04-18 17:19:13.194 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:19:13.197 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:19:13.203 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:19:13.205 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:19:13.205 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 17.8942ms
2019-04-18 17:19:13.209 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 22.2995ms
2019-04-18 17:19:13.209 +02:00 [Information] Request finished in 124.7025ms 200 application/json; charset=utf-8
2019-04-18 17:19:13.213 +02:00 [Information] Request finished in 127.6147ms 200 application/json; charset=utf-8
2019-04-18 17:19:27.993 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 17:19:27.998 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:19:27.999 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:19:28.000 +02:00 [Information] Request finished in 7.0034ms 204 
2019-04-18 17:19:28.007 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 17:19:28.008 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:19:28.009 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:19:28.010 +02:00 [Information] Successfully validated the token.
2019-04-18 17:19:28.010 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:19:28.017 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:19:28.022 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:19:28.034 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:19:28.037 +02:00 [Information] Route matched with "{action = \"getBezorgdagen\", controller = \"Bezorgdag\"}". Executing action "Services.APIService.BezorgdagController.getBezorgdagen (Services)"
2019-04-18 17:19:28.038 +02:00 [Information] Authorization was successful.
2019-04-18 17:19:28.039 +02:00 [Information] Executing action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)" with arguments (["40"]) - Validation state: Valid
2019-04-18 17:19:28.043 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.053 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.056 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.059 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.064 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.067 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.069 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.071 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.074 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.076 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.080 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.083 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.086 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.089 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.091 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.093 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.097 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.099 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.101 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.104 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.106 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.108 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.114 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.118 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.120 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.124 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.126 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.130 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.133 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.135 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.138 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.141 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.143 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.147 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.149 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.152 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.154 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.156 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.158 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.161 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.164 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.167 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.169 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.171 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.173 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.175 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.178 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.181 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.184 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.186 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.189 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.191 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.193 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.197 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.200 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.202 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.205 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.207 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.209 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.213 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.216 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.218 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.221 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.223 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.225 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.229 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.233 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.236 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.238 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.241 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.243 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.247 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.249 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.252 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.254 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.256 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.259 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.264 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.267 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.269 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.271 +02:00 [Information] Executed action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 230.5142ms.
2019-04-18 17:19:28.273 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[System.DateTime, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"'.
2019-04-18 17:19:28.274 +02:00 [Information] Executed action "Services.APIService.BezorgdagController.getBezorgdagen (Services)" in 235.8646ms
2019-04-18 17:19:28.275 +02:00 [Information] Request finished in 268.1871ms 200 application/json; charset=utf-8
2019-04-18 17:19:28.291 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 17:19:28.292 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 17:19:28.293 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:19:28.298 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 17:19:28.299 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 17:19:28.300 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:19:28.301 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:19:28.301 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:19:28.302 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:19:28.304 +02:00 [Information] Request finished in 13.1034ms 204 
2019-04-18 17:19:28.306 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:19:28.309 +02:00 [Information] Request finished in 11.3488ms 204 
2019-04-18 17:19:28.310 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:19:28.312 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:19:28.313 +02:00 [Information] Request finished in 14.5863ms 204 
2019-04-18 17:19:28.314 +02:00 [Information] Request finished in 21.6488ms 204 
2019-04-18 17:19:28.316 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 17:19:28.317 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:19:28.318 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:19:28.319 +02:00 [Information] Successfully validated the token.
2019-04-18 17:19:28.320 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 17:19:28.320 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:19:28.321 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:19:28.323 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:19:28.323 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:19:28.323 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 17:19:28.326 +02:00 [Information] Successfully validated the token.
2019-04-18 17:19:28.329 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 17:19:28.329 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:19:28.330 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:19:28.330 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:19:28.331 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:19:28.332 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:19:28.337 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:19:28.342 +02:00 [Information] Successfully validated the token.
2019-04-18 17:19:28.343 +02:00 [Information] Successfully validated the token.
2019-04-18 17:19:28.343 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:19:28.343 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:19:28.347 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:19:28.347 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:19:28.348 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:19:28.351 +02:00 [Information] Route matched with "{action = \"GetWinkelBijDatum\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)"
2019-04-18 17:19:28.351 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:19:28.355 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:19:28.356 +02:00 [Information] Authorization was successful.
2019-04-18 17:19:28.358 +02:00 [Information] Executing action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 17:19:28.358 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:19:28.375 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:19:28.376 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:19:28.388 +02:00 [Information] Route matched with "{action = \"GetProductenbijDatum\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenbijDatum (Services)"
2019-04-18 17:19:28.394 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:19:28.394 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:19:28.396 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.397 +02:00 [Information] Authorization was successful.
2019-04-18 17:19:28.399 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 17:19:28.401 +02:00 [Information] Route matched with "{action = \"GetDeadlinePerDatum\", controller = \"Deadline\"}". Executing action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)"
2019-04-18 17:19:28.403 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenbijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 17:19:28.404 +02:00 [Information] Authorization was successful.
2019-04-18 17:19:28.405 +02:00 [Information] Authorization was successful.
2019-04-18 17:19:28.406 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.407 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 17:19:28.407 +02:00 [Information] Executing action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 17:19:28.407 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.409 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:19:28.410 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.2699ms.
2019-04-18 17:19:28.413 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:19:28.415 +02:00 [Information] Executed action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 39.9872ms.
2019-04-18 17:19:28.418 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:19:28.419 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 17:19:28.421 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__bezorgdag_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [x].[Dag], [x].[BestelDeadlineDag], [x].[BestelDeadlineTijd], [x].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [x]
WHERE [x].[Dag] = @__bezorgdag_0"
2019-04-18 17:19:28.421 +02:00 [Information] Executing JsonResult, writing value of type '"SogyoLunchApp.Winkel"'.
2019-04-18 17:19:28.424 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenbijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 18.0866ms.
2019-04-18 17:19:28.424 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 17:19:28.425 +02:00 [Information] Executed action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 12.8053ms.
2019-04-18 17:19:28.426 +02:00 [Information] Executed action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" in 70.3805ms
2019-04-18 17:19:28.427 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:19:28.431 +02:00 [Information] Executing JsonResult, writing value of type '"System.DateTime"'.
2019-04-18 17:19:28.432 +02:00 [Information] Request finished in 116.2944ms 200 application/json; charset=utf-8
2019-04-18 17:19:28.433 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenbijDatum (Services)" in 36.3762ms
2019-04-18 17:19:28.434 +02:00 [Information] Executed action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" in 29.9156ms
2019-04-18 17:19:28.436 +02:00 [Information] Request finished in 115.4806ms 200 application/json; charset=utf-8
2019-04-18 17:19:28.436 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x.ProductenPerBestellingen].[BestellingId], [x.ProductenPerBestellingen].[ProductId], [x.ProductenPerBestellingen].[Aantal], [x.ProductenPerBestellingen].[Notitie], [x.ProductenPerBestellingen].[Prijs], [p.Product].[ProductId], [p.Product].[CategorieId], [p.Product].[Naam], [p.Product].[Prijs], [p.Product].[WinkelId]
FROM [ProductenPerBestellingen] AS [x.ProductenPerBestellingen]
INNER JOIN [Producten] AS [p.Product] ON [x.ProductenPerBestellingen].[ProductId] = [p.Product].[ProductId]
INNER JOIN (
    SELECT [x0].[BestellingId]
    FROM [Bestellingen] AS [x0]
    WHERE (CONVERT(date, [x0].[Bezorgdatum]) = @__date_Date_0) AND ([x0].[GebruikerId] = @__gebruikerId_1)
) AS [t] ON [x.ProductenPerBestellingen].[BestellingId] = [t].[BestellingId]
ORDER BY [t].[BestellingId]"
2019-04-18 17:19:28.437 +02:00 [Information] Request finished in 113.2611ms 200 application/json; charset=utf-8
2019-04-18 17:19:28.441 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 37.3858ms
2019-04-18 17:19:28.442 +02:00 [Information] Request finished in 113.0014ms 200 application/json; charset=utf-8
2019-04-18 17:20:15.561 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 17:20:15.641 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:20:15.644 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:20:15.652 +02:00 [Information] Request finished in 91.3062ms 204 
2019-04-18 17:20:15.657 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 17:20:15.665 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:20:15.666 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:20:15.667 +02:00 [Information] Successfully validated the token.
2019-04-18 17:20:15.668 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:20:15.669 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:20:16.166 +02:00 [Information] Executed DbCommand ("495"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:20:16.421 +02:00 [Information] Executed DbCommand ("249"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:20:16.424 +02:00 [Information] Route matched with "{action = \"getBezorgdagen\", controller = \"Bezorgdag\"}". Executing action "Services.APIService.BezorgdagController.getBezorgdagen (Services)"
2019-04-18 17:20:16.425 +02:00 [Information] Authorization was successful.
2019-04-18 17:20:16.426 +02:00 [Information] Executing action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)" with arguments (["40"]) - Validation state: Valid
2019-04-18 17:20:16.441 +02:00 [Information] Executed DbCommand ("13"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:16.466 +02:00 [Information] Executed DbCommand ("23"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:16.472 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:16.478 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:16.484 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:16.489 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:16.493 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:16.497 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:16.500 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:16.688 +02:00 [Information] Executed DbCommand ("185"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:16.840 +02:00 [Information] Executed DbCommand ("150"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:17.094 +02:00 [Information] Executed DbCommand ("250"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:17.182 +02:00 [Information] Executed DbCommand ("80"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:17.203 +02:00 [Information] Executed DbCommand ("18"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:17.207 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:17.210 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:17.214 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:17.216 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:17.219 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:17.222 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:17.224 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:17.226 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:17.230 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:17.233 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:17.235 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:17.238 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:17.241 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:17.244 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:17.247 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:17.250 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:17.255 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:17.258 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:17.561 +02:00 [Information] Executed DbCommand ("300"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:17.790 +02:00 [Information] Executed DbCommand ("225"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:17.807 +02:00 [Information] Executed DbCommand ("14"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:18.049 +02:00 [Information] Executed DbCommand ("240"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:18.068 +02:00 [Information] Executed DbCommand ("14"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:18.177 +02:00 [Information] Executed DbCommand ("105"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:18.184 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:18.186 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:18.188 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:18.191 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:18.193 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:18.195 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:18.197 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:18.200 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:18.202 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:18.204 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:18.207 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:18.209 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:18.211 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:18.214 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:18.217 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:18.219 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:18.221 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:18.224 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:18.226 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:18.228 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:18.231 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:18.233 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:18.235 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:18.238 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:18.240 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:18.242 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:18.244 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:18.247 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:18.249 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:18.486 +02:00 [Information] Executed DbCommand ("234"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:18.505 +02:00 [Information] Executed DbCommand ("14"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:18.509 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:18.519 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:18.522 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:18.527 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:18.534 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:18.538 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:18.541 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:18.546 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:18.550 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:18.554 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:18.558 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:18.561 +02:00 [Information] Executed action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 2133.03ms.
2019-04-18 17:20:18.563 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[System.DateTime, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"'.
2019-04-18 17:20:18.565 +02:00 [Information] Executed action "Services.APIService.BezorgdagController.getBezorgdagen (Services)" in 2139.4754ms
2019-04-18 17:20:18.566 +02:00 [Information] Request finished in 2909.6263ms 200 application/json; charset=utf-8
2019-04-18 17:20:18.636 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 17:20:18.638 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 17:20:18.644 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 17:20:18.644 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:20:18.647 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:20:18.647 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 17:20:18.647 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:20:18.648 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:20:18.648 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:20:18.649 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:20:18.650 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:20:18.651 +02:00 [Information] Request finished in 14.4623ms 204 
2019-04-18 17:20:18.652 +02:00 [Information] Request finished in 14.8315ms 204 
2019-04-18 17:20:18.652 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:20:18.653 +02:00 [Information] Request finished in 8.8773ms 204 
2019-04-18 17:20:18.655 +02:00 [Information] Request finished in 8.5639ms 204 
2019-04-18 17:20:18.665 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 17:20:18.666 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 17:20:18.707 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 17:20:18.710 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 17:20:18.759 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:20:18.760 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:20:18.761 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:20:18.764 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:20:18.765 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:20:18.766 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:20:18.767 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:20:18.768 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:20:18.769 +02:00 [Information] Successfully validated the token.
2019-04-18 17:20:18.769 +02:00 [Information] Successfully validated the token.
2019-04-18 17:20:18.770 +02:00 [Information] Successfully validated the token.
2019-04-18 17:20:18.770 +02:00 [Information] Successfully validated the token.
2019-04-18 17:20:18.771 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:20:18.771 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:20:18.772 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:20:18.772 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:20:18.774 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:20:18.774 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:20:18.775 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:20:18.776 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:20:18.834 +02:00 [Information] Executed DbCommand ("47"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:20:18.834 +02:00 [Information] Executed DbCommand ("53"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:20:18.842 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:20:18.842 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:20:18.844 +02:00 [Information] Route matched with "{action = \"GetProductenbijDatum\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenbijDatum (Services)"
2019-04-18 17:20:18.847 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 17:20:18.847 +02:00 [Information] Authorization was successful.
2019-04-18 17:20:18.848 +02:00 [Information] Authorization was successful.
2019-04-18 17:20:18.849 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenbijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 17:20:18.850 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 17:20:18.853 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1412ms.
2019-04-18 17:20:18.853 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:18.854 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:20:18.854 +02:00 [Information] Executed DbCommand ("63"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:20:18.860 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:18.867 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:20:18.871 +02:00 [Information] Route matched with "{action = \"GetDeadlinePerDatum\", controller = \"Deadline\"}". Executing action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)"
2019-04-18 17:20:18.872 +02:00 [Information] Authorization was successful.
2019-04-18 17:20:18.873 +02:00 [Information] Executing action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 17:20:18.876 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:18.880 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__bezorgdag_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [x].[Dag], [x].[BestelDeadlineDag], [x].[BestelDeadlineTijd], [x].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [x]
WHERE [x].[Dag] = @__bezorgdag_0"
2019-04-18 17:20:18.881 +02:00 [Information] Executed DbCommand ("12"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 17:20:18.882 +02:00 [Information] Executed action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 8.0429ms.
2019-04-18 17:20:18.884 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenbijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 33.0988ms.
2019-04-18 17:20:18.885 +02:00 [Information] Executing JsonResult, writing value of type '"System.DateTime"'.
2019-04-18 17:20:18.886 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:20:18.888 +02:00 [Information] Executed action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" in 15.9534ms
2019-04-18 17:20:18.888 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenbijDatum (Services)" in 40.5971ms
2019-04-18 17:20:18.889 +02:00 [Information] Request finished in 182.4034ms 200 application/json; charset=utf-8
2019-04-18 17:20:18.890 +02:00 [Information] Request finished in 224.8382ms 200 application/json; charset=utf-8
2019-04-18 17:20:18.901 +02:00 [Information] Executed DbCommand ("44"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 17:20:19.084 +02:00 [Information] Executed DbCommand ("117"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:20:19.091 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:20:19.095 +02:00 [Information] Route matched with "{action = \"GetWinkelBijDatum\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)"
2019-04-18 17:20:19.097 +02:00 [Information] Authorization was successful.
2019-04-18 17:20:19.099 +02:00 [Information] Executing action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 17:20:19.103 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:20:19.115 +02:00 [Information] Executed DbCommand ("211"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x.ProductenPerBestellingen].[BestellingId], [x.ProductenPerBestellingen].[ProductId], [x.ProductenPerBestellingen].[Aantal], [x.ProductenPerBestellingen].[Notitie], [x.ProductenPerBestellingen].[Prijs], [p.Product].[ProductId], [p.Product].[CategorieId], [p.Product].[Naam], [p.Product].[Prijs], [p.Product].[WinkelId]
FROM [ProductenPerBestellingen] AS [x.ProductenPerBestellingen]
INNER JOIN [Producten] AS [p.Product] ON [x.ProductenPerBestellingen].[ProductId] = [p.Product].[ProductId]
INNER JOIN (
    SELECT [x0].[BestellingId]
    FROM [Bestellingen] AS [x0]
    WHERE (CONVERT(date, [x0].[Bezorgdatum]) = @__date_Date_0) AND ([x0].[GebruikerId] = @__gebruikerId_1)
) AS [t] ON [x.ProductenPerBestellingen].[BestellingId] = [t].[BestellingId]
ORDER BY [t].[BestellingId]"
2019-04-18 17:20:19.118 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 269.9726ms
2019-04-18 17:20:19.120 +02:00 [Information] Request finished in 453.958ms 200 application/json; charset=utf-8
2019-04-18 17:20:19.141 +02:00 [Information] Executed DbCommand ("36"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:20:19.144 +02:00 [Information] Executed action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 42.8974ms.
2019-04-18 17:20:19.146 +02:00 [Information] Executing JsonResult, writing value of type '"SogyoLunchApp.Winkel"'.
2019-04-18 17:20:19.147 +02:00 [Information] Executed action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" in 50.2988ms
2019-04-18 17:20:19.150 +02:00 [Information] Request finished in 439.7153ms 200 application/json; charset=utf-8
2019-04-18 17:20:20.032 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:20:20.032 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:20:20.034 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:20:20.035 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:20:20.036 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:20:20.037 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:20:20.038 +02:00 [Information] Request finished in 6.2631ms 204 
2019-04-18 17:20:20.044 +02:00 [Information] Request finished in 11.5671ms 204 
2019-04-18 17:20:20.051 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:20:20.052 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:20:20.055 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:20:20.056 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:20:20.056 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:20:20.057 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:20:20.058 +02:00 [Information] Successfully validated the token.
2019-04-18 17:20:20.059 +02:00 [Information] Successfully validated the token.
2019-04-18 17:20:20.059 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:20:20.060 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:20:20.061 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:20:20.061 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:20:20.288 +02:00 [Information] Executed DbCommand ("223"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:20:20.288 +02:00 [Information] Executed DbCommand ("218"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:20:20.322 +02:00 [Information] Executed DbCommand ("29"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:20:20.324 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:20:20.326 +02:00 [Information] Authorization was successful.
2019-04-18 17:20:20.327 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:20:20.332 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.5268ms.
2019-04-18 17:20:20.333 +02:00 [Information] Executed DbCommand ("37"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:20:20.333 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:20:20.336 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:20:20.337 +02:00 [Information] Authorization was successful.
2019-04-18 17:20:20.338 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:20:20.339 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0033ms.
2019-04-18 17:20:20.340 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:20:20.534 +02:00 [Information] Executed DbCommand ("192"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:20:20.537 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 200.1775ms
2019-04-18 17:20:20.539 +02:00 [Information] Request finished in 486.7956ms 200 application/json; charset=utf-8
2019-04-18 17:20:20.549 +02:00 [Information] Executed DbCommand ("212"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:20:20.551 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 225.0473ms
2019-04-18 17:20:20.553 +02:00 [Information] Request finished in 501.387ms 200 application/json; charset=utf-8
2019-04-18 17:22:12.224 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:22:12.231 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:22:12.231 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:22:12.233 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:22:12.234 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:22:12.234 +02:00 [Information] Request finished in 10.3952ms 204 
2019-04-18 17:22:12.240 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:22:12.242 +02:00 [Information] Request finished in 11.2274ms 204 
2019-04-18 17:22:12.661 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:22:12.663 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:22:12.668 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:22:12.671 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:22:12.674 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:22:12.674 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:22:12.678 +02:00 [Information] Successfully validated the token.
2019-04-18 17:22:12.688 +02:00 [Information] Successfully validated the token.
2019-04-18 17:22:12.691 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:22:12.693 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:22:12.695 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:22:12.696 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:22:13.068 +02:00 [Information] Executed DbCommand ("363"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:22:13.078 +02:00 [Information] Executed DbCommand ("359"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:22:13.296 +02:00 [Information] Executed DbCommand ("221"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:22:13.302 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:22:13.303 +02:00 [Information] Authorization was successful.
2019-04-18 17:22:13.304 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:22:13.305 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0061ms.
2019-04-18 17:22:13.307 +02:00 [Information] Executed DbCommand ("224"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:22:13.307 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:22:13.310 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:22:13.312 +02:00 [Information] Authorization was successful.
2019-04-18 17:22:13.312 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:22:13.314 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1083ms.
2019-04-18 17:22:13.316 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:22:13.545 +02:00 [Information] Executed DbCommand ("235"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:22:13.555 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 251.6035ms
2019-04-18 17:22:13.558 +02:00 [Information] Request finished in 897.191ms 200 application/json; charset=utf-8
2019-04-18 17:22:13.563 +02:00 [Information] Executed DbCommand ("244"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:22:13.571 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 258.96ms
2019-04-18 17:22:13.574 +02:00 [Information] Request finished in 910.6024ms 200 application/json; charset=utf-8
2019-04-18 17:23:31.032 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:23:31.032 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:23:31.037 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:23:31.037 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:23:31.038 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:23:31.040 +02:00 [Information] Request finished in 7.9122ms 204 
2019-04-18 17:23:31.045 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:23:31.062 +02:00 [Information] Request finished in 29.9571ms 204 
2019-04-18 17:23:31.062 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:23:31.064 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:23:31.065 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:23:31.066 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:23:31.067 +02:00 [Information] Successfully validated the token.
2019-04-18 17:23:31.068 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:23:31.069 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:23:31.069 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:23:31.071 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:23:31.071 +02:00 [Information] Successfully validated the token.
2019-04-18 17:23:31.073 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:23:31.075 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:23:31.080 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:23:31.080 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:23:31.089 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:23:31.091 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:23:31.094 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:23:31.095 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:23:31.096 +02:00 [Information] Authorization was successful.
2019-04-18 17:23:31.097 +02:00 [Information] Authorization was successful.
2019-04-18 17:23:31.098 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:23:31.099 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:23:31.099 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0074ms.
2019-04-18 17:23:31.101 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:23:31.103 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0997ms.
2019-04-18 17:23:31.104 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:23:31.108 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:23:31.109 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:23:31.109 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 13.3592ms
2019-04-18 17:23:31.113 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 15.6875ms
2019-04-18 17:23:31.115 +02:00 [Information] Request finished in 48.9236ms 200 application/json; charset=utf-8
2019-04-18 17:23:31.117 +02:00 [Information] Request finished in 55.3294ms 200 application/json; charset=utf-8
2019-04-18 17:23:58.643 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:23:58.644 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:23:58.659 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:23:58.659 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:23:58.663 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:23:58.664 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:23:58.665 +02:00 [Information] Request finished in 21.789ms 204 
2019-04-18 17:23:58.666 +02:00 [Information] Request finished in 22.067ms 204 
2019-04-18 17:23:58.715 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:23:58.716 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:23:58.722 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:23:58.723 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:23:58.725 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:23:58.726 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:23:58.727 +02:00 [Information] Successfully validated the token.
2019-04-18 17:23:58.731 +02:00 [Information] Successfully validated the token.
2019-04-18 17:23:58.732 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:23:58.733 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:23:58.741 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:23:58.743 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:23:58.750 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:23:58.756 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:23:58.772 +02:00 [Information] Executed DbCommand ("10"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:23:58.790 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:23:58.791 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:23:58.793 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:23:58.794 +02:00 [Information] Authorization was successful.
2019-04-18 17:23:58.795 +02:00 [Information] Authorization was successful.
2019-04-18 17:23:58.796 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:23:58.798 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:23:58.799 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0067ms.
2019-04-18 17:23:58.800 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.3232ms.
2019-04-18 17:23:58.809 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:23:58.811 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:23:58.816 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:23:58.821 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:23:58.824 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 29.9291ms
2019-04-18 17:23:58.827 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 32.1442ms
2019-04-18 17:23:58.829 +02:00 [Information] Request finished in 113.2804ms 200 application/json; charset=utf-8
2019-04-18 17:23:58.832 +02:00 [Information] Request finished in 115.6858ms 200 application/json; charset=utf-8
2019-04-18 17:24:11.926 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:24:11.928 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:24:11.929 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:24:11.930 +02:00 [Information] Request finished in 3.9024ms 204 
2019-04-18 17:24:11.938 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkeluitzonderingenperbezorgdag  
2019-04-18 17:24:11.939 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:24:11.941 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:24:11.942 +02:00 [Information] Request finished in 4.1403ms 204 
2019-04-18 17:24:11.950 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:24:11.952 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkeluitzonderingenperbezorgdag  
2019-04-18 17:24:11.954 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:24:11.955 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:24:11.956 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:24:11.957 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:24:11.961 +02:00 [Information] Successfully validated the token.
2019-04-18 17:24:11.961 +02:00 [Information] Successfully validated the token.
2019-04-18 17:24:11.962 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:24:11.963 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:24:11.965 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:24:11.965 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:24:11.975 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:24:11.975 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:24:11.980 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:24:11.981 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:24:11.983 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:24:11.986 +02:00 [Information] Route matched with "{action = \"GetAlleWinkelUitzonderingenPerBezorgdag\", controller = \"WinkelUitzonderingenPerBezorgdag\"}". Executing action "Services.APIService.WinkelUitzonderingenPerBezorgdagController.GetAlleWinkelUitzonderingenPerBezorgdag (Services)"
2019-04-18 17:24:11.986 +02:00 [Information] Authorization was successful.
2019-04-18 17:24:11.987 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:24:11.989 +02:00 [Information] Authorization was successful.
2019-04-18 17:24:11.990 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0066ms.
2019-04-18 17:24:11.991 +02:00 [Information] Executing action method "Services.APIService.WinkelUitzonderingenPerBezorgdagController.GetAlleWinkelUitzonderingenPerBezorgdag (Services)" - Validation state: Valid
2019-04-18 17:24:11.991 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:24:11.994 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:24:11.995 +02:00 [Information] Executed action method "Services.APIService.WinkelUitzonderingenPerBezorgdagController.GetAlleWinkelUitzonderingenPerBezorgdag (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 2.988ms.
2019-04-18 17:24:11.996 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 9.6752ms
2019-04-18 17:24:11.997 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.WinkelUitzonderingenPerBezorgdag, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:24:11.999 +02:00 [Information] Request finished in 48.2276ms 200 application/json; charset=utf-8
2019-04-18 17:24:12.046 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[Date], [x].[BestelDeadline], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
LEFT JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]
WHERE CONVERT(date, [x].[Date]) >= GETDATE()"
2019-04-18 17:24:12.048 +02:00 [Information] Executed action "Services.APIService.WinkelUitzonderingenPerBezorgdagController.GetAlleWinkelUitzonderingenPerBezorgdag (Services)" in 59.3405ms
2019-04-18 17:24:12.049 +02:00 [Information] Request finished in 97.4312ms 200 application/json; charset=utf-8
2019-04-18 17:25:05.722 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 17:25:05.727 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:25:05.728 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:25:05.729 +02:00 [Information] Request finished in 7.159ms 204 
2019-04-18 17:25:05.742 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 17:25:05.743 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:25:05.744 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:25:05.745 +02:00 [Information] Successfully validated the token.
2019-04-18 17:25:05.745 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:25:05.746 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:25:05.768 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:25:05.777 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:25:05.779 +02:00 [Information] Route matched with "{action = \"getBezorgdagen\", controller = \"Bezorgdag\"}". Executing action "Services.APIService.BezorgdagController.getBezorgdagen (Services)"
2019-04-18 17:25:05.780 +02:00 [Information] Authorization was successful.
2019-04-18 17:25:05.781 +02:00 [Information] Executing action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)" with arguments (["40"]) - Validation state: Valid
2019-04-18 17:25:05.792 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.797 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:05.799 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.801 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:05.806 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.809 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:05.811 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.814 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:05.816 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.819 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:05.822 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.824 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:05.827 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.829 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:05.831 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.836 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:05.839 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.842 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:05.844 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.846 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:05.848 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.850 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:05.854 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.857 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:05.860 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.862 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:05.865 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.867 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:05.870 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.873 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:05.875 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.877 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:05.880 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.882 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:05.885 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.889 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:05.892 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.894 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:05.896 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.899 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:05.900 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.904 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:05.908 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.910 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:05.914 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.916 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:05.919 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.923 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:05.926 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.929 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:05.931 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.933 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:05.937 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.940 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:05.942 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.944 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:05.946 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.950 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:05.955 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.958 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:05.961 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.963 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:05.965 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.967 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:05.971 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.974 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:05.976 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.978 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:05.980 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.983 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:05.985 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.988 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:05.991 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.993 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:05.996 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:05.998 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:06.000 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:06.004 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:06.007 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:06.009 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:06.012 +02:00 [Information] Executed action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 229.0284ms.
2019-04-18 17:25:06.013 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[System.DateTime, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"'.
2019-04-18 17:25:06.015 +02:00 [Information] Executed action "Services.APIService.BezorgdagController.getBezorgdagen (Services)" in 234.1704ms
2019-04-18 17:25:06.016 +02:00 [Information] Request finished in 274.5137ms 200 application/json; charset=utf-8
2019-04-18 17:25:06.038 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 17:25:06.039 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 17:25:06.040 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:25:06.043 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:25:06.056 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:25:06.056 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 17:25:06.056 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 17:25:06.057 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:25:06.058 +02:00 [Information] Request finished in 19.5994ms 204 
2019-04-18 17:25:06.059 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:25:06.060 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:25:06.061 +02:00 [Information] Request finished in 22.6062ms 204 
2019-04-18 17:25:06.063 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:25:06.064 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:25:06.066 +02:00 [Information] Request finished in 10.228ms 204 
2019-04-18 17:25:06.067 +02:00 [Information] Request finished in 10.4697ms 204 
2019-04-18 17:25:06.074 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 17:25:06.074 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 17:25:06.074 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 17:25:06.074 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 17:25:06.075 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:25:06.076 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:25:06.077 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:25:06.078 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:25:06.079 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:25:06.080 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:25:06.082 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:25:06.086 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:25:06.089 +02:00 [Information] Successfully validated the token.
2019-04-18 17:25:06.091 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:25:06.091 +02:00 [Information] Successfully validated the token.
2019-04-18 17:25:06.092 +02:00 [Information] Successfully validated the token.
2019-04-18 17:25:06.093 +02:00 [Information] Successfully validated the token.
2019-04-18 17:25:06.093 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:25:06.094 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:25:06.094 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:25:06.095 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:25:06.097 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:25:06.098 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:25:06.098 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:25:06.099 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:25:06.108 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:25:06.110 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:25:06.114 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:25:06.114 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:25:06.117 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:25:06.121 +02:00 [Information] Route matched with "{action = \"GetDeadlinePerDatum\", controller = \"Deadline\"}". Executing action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)"
2019-04-18 17:25:06.124 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:25:06.126 +02:00 [Information] Authorization was successful.
2019-04-18 17:25:06.128 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:25:06.129 +02:00 [Information] Route matched with "{action = \"GetProductenbijDatum\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenbijDatum (Services)"
2019-04-18 17:25:06.129 +02:00 [Information] Executing action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 17:25:06.131 +02:00 [Information] Route matched with "{action = \"GetWinkelBijDatum\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)"
2019-04-18 17:25:06.134 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 17:25:06.135 +02:00 [Information] Authorization was successful.
2019-04-18 17:25:06.140 +02:00 [Information] Authorization was successful.
2019-04-18 17:25:06.140 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:06.141 +02:00 [Information] Authorization was successful.
2019-04-18 17:25:06.142 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenbijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 17:25:06.142 +02:00 [Information] Executing action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 17:25:06.145 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 17:25:06.146 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__bezorgdag_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [x].[Dag], [x].[BestelDeadlineDag], [x].[BestelDeadlineTijd], [x].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [x]
WHERE [x].[Dag] = @__bezorgdag_0"
2019-04-18 17:25:06.147 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:06.148 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:25:06.149 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.2073ms.
2019-04-18 17:25:06.151 +02:00 [Information] Executed action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 13.0958ms.
2019-04-18 17:25:06.157 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:25:06.158 +02:00 [Information] Executing JsonResult, writing value of type '"System.DateTime"'.
2019-04-18 17:25:06.160 +02:00 [Information] Executed action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" in 34.0337ms
2019-04-18 17:25:06.161 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:06.161 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:25:06.161 +02:00 [Information] Request finished in 87.3287ms 200 application/json; charset=utf-8
2019-04-18 17:25:06.163 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 17:25:06.164 +02:00 [Information] Executed action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 16.6702ms.
2019-04-18 17:25:06.171 +02:00 [Information] Executing JsonResult, writing value of type '"SogyoLunchApp.Winkel"'.
2019-04-18 17:25:06.172 +02:00 [Information] Executed action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" in 32.3987ms
2019-04-18 17:25:06.174 +02:00 [Information] Request finished in 99.9589ms 200 application/json; charset=utf-8
2019-04-18 17:25:06.176 +02:00 [Information] Executed DbCommand ("9"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 17:25:06.179 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenbijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 32.697ms.
2019-04-18 17:25:06.180 +02:00 [Information] Executed DbCommand ("10"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x.ProductenPerBestellingen].[BestellingId], [x.ProductenPerBestellingen].[ProductId], [x.ProductenPerBestellingen].[Aantal], [x.ProductenPerBestellingen].[Notitie], [x.ProductenPerBestellingen].[Prijs], [p.Product].[ProductId], [p.Product].[CategorieId], [p.Product].[Naam], [p.Product].[Prijs], [p.Product].[WinkelId]
FROM [ProductenPerBestellingen] AS [x.ProductenPerBestellingen]
INNER JOIN [Producten] AS [p.Product] ON [x.ProductenPerBestellingen].[ProductId] = [p.Product].[ProductId]
INNER JOIN (
    SELECT [x0].[BestellingId]
    FROM [Bestellingen] AS [x0]
    WHERE (CONVERT(date, [x0].[Bezorgdatum]) = @__date_Date_0) AND ([x0].[GebruikerId] = @__gebruikerId_1)
) AS [t] ON [x.ProductenPerBestellingen].[BestellingId] = [t].[BestellingId]
ORDER BY [t].[BestellingId]"
2019-04-18 17:25:06.180 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:25:06.183 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 42.6365ms
2019-04-18 17:25:06.185 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenbijDatum (Services)" in 50.0559ms
2019-04-18 17:25:06.188 +02:00 [Information] Request finished in 113.6741ms 200 application/json; charset=utf-8
2019-04-18 17:25:06.191 +02:00 [Information] Request finished in 116.531ms 200 application/json; charset=utf-8
2019-04-18 17:25:52.299 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:25:52.306 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:25:52.307 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:25:52.308 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:25:52.309 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:25:52.310 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:25:52.311 +02:00 [Information] Request finished in 12.2513ms 204 
2019-04-18 17:25:52.324 +02:00 [Information] Request finished in 17.1707ms 204 
2019-04-18 17:25:52.334 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:25:52.334 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:25:52.337 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:25:52.340 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:25:52.342 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:25:52.343 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:25:52.344 +02:00 [Information] Successfully validated the token.
2019-04-18 17:25:52.344 +02:00 [Information] Successfully validated the token.
2019-04-18 17:25:52.345 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:25:52.345 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:25:52.346 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:25:52.347 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:25:52.575 +02:00 [Information] Executed DbCommand ("225"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:25:52.589 +02:00 [Information] Executed DbCommand ("240"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:25:52.623 +02:00 [Information] Executed DbCommand ("42"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:25:52.623 +02:00 [Information] Executed DbCommand ("29"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:25:52.627 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:25:52.629 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:25:52.630 +02:00 [Information] Authorization was successful.
2019-04-18 17:25:52.631 +02:00 [Information] Authorization was successful.
2019-04-18 17:25:52.631 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:25:52.632 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:25:52.633 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0035ms.
2019-04-18 17:25:52.635 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1908ms.
2019-04-18 17:25:52.637 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:25:52.639 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:25:52.655 +02:00 [Information] Executed DbCommand ("13"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:25:52.657 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 26.9796ms
2019-04-18 17:25:52.658 +02:00 [Information] Request finished in 323.3891ms 200 application/json; charset=utf-8
2019-04-18 17:25:52.683 +02:00 [Information] Executed DbCommand ("40"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:25:52.694 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 62.8543ms
2019-04-18 17:25:52.698 +02:00 [Information] Request finished in 363.718ms 200 application/json; charset=utf-8
2019-04-18 17:27:46.316 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:27:46.317 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:27:46.322 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:27:46.323 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:27:46.324 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:27:46.324 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:27:46.326 +02:00 [Information] Request finished in 10.0435ms 204 
2019-04-18 17:27:46.326 +02:00 [Information] Request finished in 9.2377ms 204 
2019-04-18 17:27:46.344 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:27:46.345 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:27:46.345 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:27:46.346 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:27:46.347 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:27:46.348 +02:00 [Information] Successfully validated the token.
2019-04-18 17:27:46.348 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:27:46.349 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:27:46.350 +02:00 [Information] Successfully validated the token.
2019-04-18 17:27:46.351 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:27:46.351 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:27:46.358 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:27:46.363 +02:00 [Information] Executed DbCommand ("8"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:27:46.363 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:27:46.369 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:27:46.369 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:27:46.372 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:27:46.373 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:27:46.373 +02:00 [Information] Authorization was successful.
2019-04-18 17:27:46.374 +02:00 [Information] Authorization was successful.
2019-04-18 17:27:46.375 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:27:46.375 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:27:46.376 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0817ms.
2019-04-18 17:27:46.377 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0032ms.
2019-04-18 17:27:46.378 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:27:46.379 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:27:46.383 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:27:46.384 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:27:46.385 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 10.7228ms
2019-04-18 17:27:46.387 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 13.6994ms
2019-04-18 17:27:46.388 +02:00 [Information] Request finished in 44.287ms 200 application/json; charset=utf-8
2019-04-18 17:27:46.389 +02:00 [Information] Request finished in 43.5403ms 200 application/json; charset=utf-8
2019-04-18 17:28:16.862 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:28:16.867 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:28:16.867 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:28:16.868 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:28:16.869 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:28:16.869 +02:00 [Information] Request finished in 7.0576ms 204 
2019-04-18 17:28:16.870 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:28:16.872 +02:00 [Information] Request finished in 4.3614ms 204 
2019-04-18 17:28:16.873 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:28:16.874 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:28:16.875 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:28:16.875 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:28:16.876 +02:00 [Information] Successfully validated the token.
2019-04-18 17:28:16.876 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:28:16.877 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:28:16.877 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:28:16.878 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:28:16.879 +02:00 [Information] Successfully validated the token.
2019-04-18 17:28:16.881 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:28:16.882 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:28:16.883 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:28:16.886 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:28:16.890 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:28:16.892 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:28:16.899 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:28:16.900 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:28:16.900 +02:00 [Information] Authorization was successful.
2019-04-18 17:28:16.901 +02:00 [Information] Authorization was successful.
2019-04-18 17:28:16.902 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:28:16.903 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:28:16.903 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0057ms.
2019-04-18 17:28:16.904 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0821ms.
2019-04-18 17:28:16.905 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:28:16.906 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:28:16.908 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:28:16.910 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:28:16.910 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 9.6647ms
2019-04-18 17:28:16.912 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 10.822ms
2019-04-18 17:28:16.913 +02:00 [Information] Request finished in 39.9185ms 200 application/json; charset=utf-8
2019-04-18 17:28:16.914 +02:00 [Information] Request finished in 38.5171ms 200 application/json; charset=utf-8
2019-04-18 17:29:10.696 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:29:10.707 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:29:10.707 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:29:10.710 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:29:10.711 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:29:10.713 +02:00 [Information] Request finished in 16.4166ms 204 
2019-04-18 17:29:10.720 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:29:10.733 +02:00 [Information] Request finished in 25.4594ms 204 
2019-04-18 17:29:10.914 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:29:10.915 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:29:10.917 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:29:10.918 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:29:10.918 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:29:10.919 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:29:10.920 +02:00 [Information] Successfully validated the token.
2019-04-18 17:29:10.922 +02:00 [Information] Successfully validated the token.
2019-04-18 17:29:10.923 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:29:10.924 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:29:10.925 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:29:10.926 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:29:11.363 +02:00 [Information] Executed DbCommand ("432"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:29:11.373 +02:00 [Information] Executed DbCommand ("444"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:29:11.408 +02:00 [Information] Executed DbCommand ("34"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:29:11.411 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:29:11.412 +02:00 [Information] Authorization was successful.
2019-04-18 17:29:11.412 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:29:11.414 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1023ms.
2019-04-18 17:29:11.415 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:29:11.440 +02:00 [Information] Executed DbCommand ("60"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:29:11.446 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:29:11.448 +02:00 [Information] Authorization was successful.
2019-04-18 17:29:11.450 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:29:11.460 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0112ms.
2019-04-18 17:29:11.474 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:29:11.680 +02:00 [Information] Executed DbCommand ("204"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:29:11.682 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 233.5063ms
2019-04-18 17:29:11.688 +02:00 [Information] Request finished in 773.2084ms 200 application/json; charset=utf-8
2019-04-18 17:29:11.692 +02:00 [Information] Executed DbCommand ("276"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:29:11.694 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 282.595ms
2019-04-18 17:29:11.695 +02:00 [Information] Request finished in 780.6849ms 200 application/json; charset=utf-8
2019-04-18 17:29:36.760 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:29:36.762 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:29:36.763 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:29:36.766 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:29:36.767 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:29:36.768 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:29:36.768 +02:00 [Information] Request finished in 7.8496ms 204 
2019-04-18 17:29:36.769 +02:00 [Information] Request finished in 7.4323ms 204 
2019-04-18 17:29:36.779 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:29:36.781 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:29:36.782 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:29:36.786 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:29:36.786 +02:00 [Information] Successfully validated the token.
2019-04-18 17:29:36.788 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:29:36.789 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:29:36.792 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:29:36.794 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:29:36.794 +02:00 [Information] Successfully validated the token.
2019-04-18 17:29:36.796 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:29:36.799 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:29:36.803 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:29:36.803 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:29:36.814 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:29:36.814 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:29:36.819 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:29:36.822 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:29:36.824 +02:00 [Information] Authorization was successful.
2019-04-18 17:29:36.825 +02:00 [Information] Authorization was successful.
2019-04-18 17:29:36.826 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:29:36.826 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:29:36.827 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0968ms.
2019-04-18 17:29:36.828 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0031ms.
2019-04-18 17:29:36.829 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:29:36.830 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:29:36.833 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:29:36.833 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:29:36.835 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 9.851ms
2019-04-18 17:29:36.836 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 13.34ms
2019-04-18 17:29:36.838 +02:00 [Information] Request finished in 59.2568ms 200 application/json; charset=utf-8
2019-04-18 17:29:36.841 +02:00 [Information] Request finished in 54.2305ms 200 application/json; charset=utf-8
2019-04-18 17:29:39.730 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:29:39.730 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:29:39.732 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:29:39.733 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:29:39.734 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:29:39.735 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:29:39.735 +02:00 [Information] Request finished in 5.6524ms 204 
2019-04-18 17:29:39.736 +02:00 [Information] Request finished in 5.9924ms 204 
2019-04-18 17:29:39.996 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:29:40.015 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:29:40.143 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:29:40.144 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:29:40.145 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:29:40.145 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:29:40.146 +02:00 [Information] Successfully validated the token.
2019-04-18 17:29:40.148 +02:00 [Information] Successfully validated the token.
2019-04-18 17:29:40.148 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:29:40.149 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:29:40.150 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:29:40.151 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:29:40.187 +02:00 [Information] Executed DbCommand ("33"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:29:40.192 +02:00 [Information] Executed DbCommand ("10"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:29:40.225 +02:00 [Information] Executed DbCommand ("32"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:29:40.228 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:29:40.229 +02:00 [Information] Authorization was successful.
2019-04-18 17:29:40.230 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:29:40.231 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1134ms.
2019-04-18 17:29:40.234 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:29:40.244 +02:00 [Information] Executed DbCommand ("45"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:29:40.247 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:29:40.248 +02:00 [Information] Authorization was successful.
2019-04-18 17:29:40.248 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:29:40.249 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0044ms.
2019-04-18 17:29:40.251 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:29:40.254 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:29:40.256 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 7.886ms
2019-04-18 17:29:40.257 +02:00 [Information] Request finished in 242.0509ms 200 application/json; charset=utf-8
2019-04-18 17:29:40.272 +02:00 [Information] Executed DbCommand ("37"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:29:40.275 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 46.0628ms
2019-04-18 17:29:40.276 +02:00 [Information] Request finished in 279.9013ms 200 application/json; charset=utf-8
2019-04-18 17:31:38.499 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:31:38.499 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:31:38.519 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:31:38.520 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:31:38.521 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:31:38.529 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:31:38.530 +02:00 [Information] Request finished in 31.2614ms 204 
2019-04-18 17:31:38.531 +02:00 [Information] Request finished in 31.9668ms 204 
2019-04-18 17:31:38.990 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:31:38.995 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:31:38.996 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:31:38.997 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:31:38.996 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:31:39.000 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:31:39.013 +02:00 [Information] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters) in C:\agent1\_work\109\s\src\Microsoft.IdentityModel.Tokens\Validators.cs:line 274
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters) in C:\agent1\_work\109\s\src\System.IdentityModel.Tokens.Jwt\JwtSecurityTokenHandler.cs:line 1182
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters) in C:\agent1\_work\109\s\src\System.IdentityModel.Tokens.Jwt\JwtSecurityTokenHandler.cs:line 739
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken) in C:\agent1\_work\109\s\src\System.IdentityModel.Tokens.Jwt\JwtSecurityTokenHandler.cs:line 723
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2019-04-18 17:31:39.013 +02:00 [Information] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters) in C:\agent1\_work\109\s\src\Microsoft.IdentityModel.Tokens\Validators.cs:line 274
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters) in C:\agent1\_work\109\s\src\System.IdentityModel.Tokens.Jwt\JwtSecurityTokenHandler.cs:line 1182
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters) in C:\agent1\_work\109\s\src\System.IdentityModel.Tokens.Jwt\JwtSecurityTokenHandler.cs:line 739
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken) in C:\agent1\_work\109\s\src\System.IdentityModel.Tokens.Jwt\JwtSecurityTokenHandler.cs:line 723
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
2019-04-18 17:31:39.036 +02:00 [Information] "Bearer" was not authenticated. Failure message: "IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'."
2019-04-18 17:31:39.040 +02:00 [Information] "Bearer" was not authenticated. Failure message: "IDX10223: Lifetime validation failed. The token is expired. ValidTo: '[PII is hidden]', Current time: '[PII is hidden]'."
2019-04-18 17:31:39.042 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:31:39.042 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:31:39.043 +02:00 [Information] Authorization failed.
2019-04-18 17:31:39.044 +02:00 [Information] Authorization failed.
2019-04-18 17:31:39.048 +02:00 [Information] Authorization failed for the request at filter '"Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter"'.
2019-04-18 17:31:39.048 +02:00 [Information] Authorization failed for the request at filter '"Microsoft.AspNetCore.Mvc.Authorization.AuthorizeFilter"'.
2019-04-18 17:31:39.050 +02:00 [Information] Executing ChallengeResult with authentication schemes ([]).
2019-04-18 17:31:39.050 +02:00 [Information] Executing ChallengeResult with authentication schemes ([]).
2019-04-18 17:31:39.052 +02:00 [Information] AuthenticationScheme: "Bearer" was challenged.
2019-04-18 17:31:39.052 +02:00 [Information] AuthenticationScheme: "Bearer" was challenged.
2019-04-18 17:31:39.053 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 9.7141ms
2019-04-18 17:31:39.055 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 10.9145ms
2019-04-18 17:31:39.057 +02:00 [Information] Request finished in 66.4941ms 401 text/plain
2019-04-18 17:31:39.058 +02:00 [Information] Request finished in 62.9681ms 401 text/plain
2019-04-18 17:31:42.449 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/Auth/ExternalLogin  
2019-04-18 17:31:42.450 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:31:42.450 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:31:42.451 +02:00 [Information] Request finished in 2.6998ms 204 
2019-04-18 17:31:42.468 +02:00 [Information] Request starting HTTP/1.1 POST http://localhost:5000/sogyolunchapi/Auth/ExternalLogin application/json;charset=UTF-8 1303
2019-04-18 17:31:42.469 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:31:42.470 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:31:42.477 +02:00 [Information] Route matched with "{action = \"ExternalLogin\", controller = \"Auth\"}". Executing action "SogyoLunchApp.APIService.AuthController.ExternalLogin (Services)"
2019-04-18 17:31:42.480 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:31:42.498 +02:00 [Information] Executing action method "SogyoLunchApp.APIService.AuthController.ExternalLogin (Services)" with arguments (["SogyoLunchApp.APIService.ExternalLoginModel"]) - Validation state: Valid
2019-04-18 17:31:42.726 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:31:43.063 +02:00 [Information] Executed DbCommand ("331"ms) [Parameters=["@__normalizedEmail_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName]
FROM [AspNetUsers] AS [u]
WHERE [u].[NormalizedEmail] = @__normalizedEmail_0"
2019-04-18 17:31:43.309 +02:00 [Information] Executed DbCommand ("235"ms) [Parameters=["@__loginProvider_0='?' (Size = 450), @__providerKey_1='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [userLogin].[LoginProvider], [userLogin].[ProviderKey], [userLogin].[ProviderDisplayName], [userLogin].[UserId]
FROM [AspNetUserLogins] AS [userLogin]
WHERE ([userLogin].[LoginProvider] = @__loginProvider_0) AND ([userLogin].[ProviderKey] = @__providerKey_1)"
2019-04-18 17:31:43.350 +02:00 [Information] Executed DbCommand ("36"ms) [Parameters=["@__userId_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName]
FROM [AspNetUsers] AS [u]
WHERE [u].[Id] = @__userId_0"
2019-04-18 17:31:43.353 +02:00 [Warning] AddLogin for user "3a4a5049-5bff-4683-8042-7e01e6740527" failed because it was already associated with another user.
2019-04-18 17:31:43.360 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__user_Id_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [uc].[Id], [uc].[ClaimType], [uc].[ClaimValue], [uc].[UserId]
FROM [AspNetUserClaims] AS [uc]
WHERE [uc].[UserId] = @__user_Id_0"
2019-04-18 17:31:43.394 +02:00 [Information] Executed DbCommand ("25"ms) [Parameters=["@__userId_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [role].[Name]
FROM [AspNetUserRoles] AS [userRole]
INNER JOIN [AspNetRoles] AS [role] ON [userRole].[RoleId] = [role].[Id]
WHERE [userRole].[UserId] = @__userId_0"
2019-04-18 17:31:43.403 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__normalizedName_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [r].[Id], [r].[ConcurrencyStamp], [r].[Name], [r].[NormalizedName]
FROM [AspNetRoles] AS [r]
WHERE [r].[NormalizedName] = @__normalizedName_0"
2019-04-18 17:31:43.639 +02:00 [Information] Executed DbCommand ("228"ms) [Parameters=["@__role_Id_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [rc].[ClaimType], [rc].[ClaimValue]
FROM [AspNetRoleClaims] AS [rc]
WHERE [rc].[RoleId] = @__role_Id_0"
2019-04-18 17:31:43.658 +02:00 [Information] AuthenticationScheme: "Identity.Application" signed in.
2019-04-18 17:31:43.713 +02:00 [Information] Executed DbCommand ("49"ms) [Parameters=["@__userId_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [role].[Name]
FROM [AspNetUserRoles] AS [userRole]
INNER JOIN [AspNetRoles] AS [role] ON [userRole].[RoleId] = [role].[Id]
WHERE [userRole].[UserId] = @__userId_0"
2019-04-18 17:31:43.958 +02:00 [Information] Executed DbCommand ("230"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:31:44.005 +02:00 [Information] Executed DbCommand ("44"ms) [Parameters=["@__normalizedUserName_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName]
FROM [AspNetUsers] AS [u]
WHERE [u].[NormalizedUserName] = @__normalizedUserName_0"
2019-04-18 17:31:44.389 +02:00 [Information] Executed DbCommand ("365"ms) [Parameters=["@p0='?' (DbType = Guid), @p1='?' (Size = 450), @p2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
DELETE FROM [AspNetUserTokens]
WHERE [UserId] = @p0 AND [LoginProvider] = @p1 AND [Name] = @p2;
SELECT @@ROWCOUNT;"
2019-04-18 17:31:44.440 +02:00 [Information] Executed DbCommand ("48"ms) [Parameters=["@p14='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p15='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTimeOffset), @p6='?' (Size = 256), @p7='?' (Size = 256), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Boolean), @p11='?' (Size = 4000), @p12='?' (DbType = Boolean), @p13='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [LockoutEnabled] = @p4, [LockoutEnd] = @p5, [NormalizedEmail] = @p6, [NormalizedUserName] = @p7, [PasswordHash] = @p8, [PhoneNumber] = @p9, [PhoneNumberConfirmed] = @p10, [SecurityStamp] = @p11, [TwoFactorEnabled] = @p12, [UserName] = @p13
WHERE [Id] = @p14 AND [ConcurrencyStamp] = @p15;
SELECT @@ROWCOUNT;"
2019-04-18 17:31:44.663 +02:00 [Information] Executed DbCommand ("216"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:31:44.705 +02:00 [Information] Executed DbCommand ("34"ms) [Parameters=["@__normalizedUserName_0='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [u].[Id], [u].[AccessFailedCount], [u].[ConcurrencyStamp], [u].[Email], [u].[EmailConfirmed], [u].[LockoutEnabled], [u].[LockoutEnd], [u].[NormalizedEmail], [u].[NormalizedUserName], [u].[PasswordHash], [u].[PhoneNumber], [u].[PhoneNumberConfirmed], [u].[SecurityStamp], [u].[TwoFactorEnabled], [u].[UserName]
FROM [AspNetUsers] AS [u]
WHERE [u].[NormalizedUserName] = @__normalizedUserName_0"
2019-04-18 17:31:44.713 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@p0='?' (DbType = Guid), @p1='?' (Size = 450), @p2='?' (Size = 450), @p3='?' (Size = 4000)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
INSERT INTO [AspNetUserTokens] ([UserId], [LoginProvider], [Name], [Value])
VALUES (@p0, @p1, @p2, @p3);"
2019-04-18 17:31:44.721 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@p14='?' (DbType = Guid), @p0='?' (DbType = Int32), @p1='?' (Size = 4000), @p15='?' (Size = 4000), @p2='?' (Size = 256), @p3='?' (DbType = Boolean), @p4='?' (DbType = Boolean), @p5='?' (DbType = DateTimeOffset), @p6='?' (Size = 256), @p7='?' (Size = 256), @p8='?' (Size = 4000), @p9='?' (Size = 4000), @p10='?' (DbType = Boolean), @p11='?' (Size = 4000), @p12='?' (DbType = Boolean), @p13='?' (Size = 256)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
UPDATE [AspNetUsers] SET [AccessFailedCount] = @p0, [ConcurrencyStamp] = @p1, [Email] = @p2, [EmailConfirmed] = @p3, [LockoutEnabled] = @p4, [LockoutEnd] = @p5, [NormalizedEmail] = @p6, [NormalizedUserName] = @p7, [PasswordHash] = @p8, [PhoneNumber] = @p9, [PhoneNumberConfirmed] = @p10, [SecurityStamp] = @p11, [TwoFactorEnabled] = @p12, [UserName] = @p13
WHERE [Id] = @p14 AND [ConcurrencyStamp] = @p15;
SELECT @@ROWCOUNT;"
2019-04-18 17:31:44.725 +02:00 [Information] Executed action method "SogyoLunchApp.APIService.AuthController.ExternalLogin (Services)", returned result "Microsoft.AspNetCore.Mvc.OkObjectResult" in 2225.9363ms.
2019-04-18 17:31:44.728 +02:00 [Information] Executing ObjectResult, writing value of type '"<>f__AnonymousType1`2[[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"'.
2019-04-18 17:31:44.731 +02:00 [Information] Executed action "SogyoLunchApp.APIService.AuthController.ExternalLogin (Services)" in 2252.7079ms
2019-04-18 17:31:44.733 +02:00 [Information] Request finished in 2264.9426ms 200 application/json; charset=utf-8
2019-04-18 17:31:44.899 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 17:31:44.900 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:31:44.901 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:31:44.912 +02:00 [Information] Request finished in 12.9644ms 204 
2019-04-18 17:31:44.924 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 17:31:44.925 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:31:44.926 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:31:44.928 +02:00 [Information] Successfully validated the token.
2019-04-18 17:31:44.929 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:31:44.932 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:31:45.394 +02:00 [Information] Executed DbCommand ("460"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:31:45.484 +02:00 [Information] Executed DbCommand ("86"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:31:45.488 +02:00 [Information] Route matched with "{action = \"getBezorgdagen\", controller = \"Bezorgdag\"}". Executing action "Services.APIService.BezorgdagController.getBezorgdagen (Services)"
2019-04-18 17:31:45.490 +02:00 [Information] Authorization was successful.
2019-04-18 17:31:45.491 +02:00 [Information] Executing action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)" with arguments (["40"]) - Validation state: Valid
2019-04-18 17:31:45.712 +02:00 [Information] Executed DbCommand ("218"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:45.877 +02:00 [Information] Executed DbCommand ("163"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:45.950 +02:00 [Information] Executed DbCommand ("58"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:45.969 +02:00 [Information] Executed DbCommand ("12"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:45.974 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:46.150 +02:00 [Information] Executed DbCommand ("173"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:46.154 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:46.159 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:46.163 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:46.167 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:46.397 +02:00 [Information] Executed DbCommand ("227"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:46.437 +02:00 [Information] Executed DbCommand ("25"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:46.444 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:46.448 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:46.453 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:46.457 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:46.461 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:46.464 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:46.468 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:46.472 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:46.477 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:46.480 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:46.483 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:46.488 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:46.492 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:46.495 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:46.499 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:46.503 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:46.507 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:46.510 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:46.514 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:46.517 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:46.521 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:46.525 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:46.528 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:46.532 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:46.535 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:46.539 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:46.543 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:46.546 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:46.550 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:46.553 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:46.780 +02:00 [Information] Executed DbCommand ("224"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:46.805 +02:00 [Information] Executed DbCommand ("22"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:46.810 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:47.049 +02:00 [Information] Executed DbCommand ("236"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:47.064 +02:00 [Information] Executed DbCommand ("13"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:47.069 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:47.074 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:47.077 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:47.095 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:47.098 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:47.100 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:47.102 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:47.107 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:47.110 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:47.115 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:47.118 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:47.120 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:47.125 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:47.129 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:47.132 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:47.134 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:47.137 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:47.141 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:47.144 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:47.146 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:47.148 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:47.151 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:47.153 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:47.159 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:47.163 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:47.245 +02:00 [Information] Executed DbCommand ("80"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:47.485 +02:00 [Information] Executed DbCommand ("239"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:47.502 +02:00 [Information] Executed DbCommand ("13"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:47.508 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:47.513 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:47.829 +02:00 [Information] Executed DbCommand ("313"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:47.865 +02:00 [Information] Executed DbCommand ("26"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:47.903 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:47.908 +02:00 [Information] Executed action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 2414.9546ms.
2019-04-18 17:31:47.910 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[System.DateTime, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"'.
2019-04-18 17:31:47.912 +02:00 [Information] Executed action "Services.APIService.BezorgdagController.getBezorgdagen (Services)" in 2421.9901ms
2019-04-18 17:31:47.913 +02:00 [Information] Request finished in 2989.9386ms 200 application/json; charset=utf-8
2019-04-18 17:31:49.351 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 17:31:49.356 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:31:49.359 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:31:49.367 +02:00 [Information] Request finished in 15.2427ms 204 
2019-04-18 17:31:49.498 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 17:31:49.500 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:31:49.501 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:31:49.502 +02:00 [Information] Successfully validated the token.
2019-04-18 17:31:49.503 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:31:49.504 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:31:49.596 +02:00 [Information] Executed DbCommand ("89"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:31:49.614 +02:00 [Information] Executed DbCommand ("13"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:31:49.617 +02:00 [Information] Route matched with "{action = \"getBezorgdagen\", controller = \"Bezorgdag\"}". Executing action "Services.APIService.BezorgdagController.getBezorgdagen (Services)"
2019-04-18 17:31:49.618 +02:00 [Information] Authorization was successful.
2019-04-18 17:31:49.618 +02:00 [Information] Executing action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)" with arguments (["40"]) - Validation state: Valid
2019-04-18 17:31:49.623 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:49.626 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:49.629 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:49.632 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:49.635 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:49.640 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:49.644 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:49.897 +02:00 [Information] Executed DbCommand ("250"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:49.914 +02:00 [Information] Executed DbCommand ("14"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:49.917 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:50.149 +02:00 [Information] Executed DbCommand ("228"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:50.424 +02:00 [Information] Executed DbCommand ("272"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:50.439 +02:00 [Information] Executed DbCommand ("13"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:50.643 +02:00 [Information] Executed DbCommand ("202"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:50.675 +02:00 [Information] Executed DbCommand ("25"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:50.694 +02:00 [Information] Executed DbCommand ("13"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:50.966 +02:00 [Information] Executed DbCommand ("265"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:50.981 +02:00 [Information] Executed DbCommand ("12"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:51.181 +02:00 [Information] Executed DbCommand ("198"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:51.185 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:51.190 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:51.431 +02:00 [Information] Executed DbCommand ("238"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:51.447 +02:00 [Information] Executed DbCommand ("13"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:51.451 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:51.459 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:51.701 +02:00 [Information] Executed DbCommand ("240"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:51.718 +02:00 [Information] Executed DbCommand ("14"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:51.960 +02:00 [Information] Executed DbCommand ("239"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:51.976 +02:00 [Information] Executed DbCommand ("14"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:52.206 +02:00 [Information] Executed DbCommand ("227"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:52.211 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:52.458 +02:00 [Information] Executed DbCommand ("245"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:52.692 +02:00 [Information] Executed DbCommand ("231"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:52.720 +02:00 [Information] Executed DbCommand ("26"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:52.727 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:52.731 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:52.807 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:31:52.810 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:31:52.811 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:31:52.812 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:31:52.812 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:31:52.813 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:31:52.814 +02:00 [Information] Request finished in 6.9743ms 204 
2019-04-18 17:31:52.814 +02:00 [Information] Request finished in 4.2449ms 204 
2019-04-18 17:31:52.818 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:31:52.819 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:31:52.819 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:31:52.820 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:31:52.822 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:31:52.823 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:31:52.825 +02:00 [Information] Successfully validated the token.
2019-04-18 17:31:52.826 +02:00 [Information] Successfully validated the token.
2019-04-18 17:31:52.826 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:31:52.826 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:31:52.827 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:31:52.828 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:31:52.961 +02:00 [Information] Executed DbCommand ("228"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:52.964 +02:00 [Information] Executed DbCommand ("134"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:31:53.097 +02:00 [Information] Executed DbCommand ("48"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:31:53.108 +02:00 [Information] Executed DbCommand ("142"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:53.119 +02:00 [Information] Executed DbCommand ("148"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:31:53.123 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:31:53.126 +02:00 [Information] Executed DbCommand ("15"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:53.126 +02:00 [Information] Authorization was successful.
2019-04-18 17:31:53.128 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:53.128 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:31:53.130 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:53.131 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0045ms.
2019-04-18 17:31:53.133 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:53.134 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:31:53.136 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:53.142 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:31:53.143 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:53.144 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 17.6431ms
2019-04-18 17:31:53.146 +02:00 [Information] Request finished in 327.374ms 200 application/json; charset=utf-8
2019-04-18 17:31:53.148 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:53.151 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:53.152 +02:00 [Information] Executed DbCommand ("52"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:31:53.156 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:31:53.157 +02:00 [Information] Authorization was successful.
2019-04-18 17:31:53.158 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:31:53.158 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:53.159 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.08ms.
2019-04-18 17:31:53.162 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:31:53.244 +02:00 [Information] Executed DbCommand ("83"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:53.261 +02:00 [Information] Executed DbCommand ("98"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:31:53.264 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 106.8414ms
2019-04-18 17:31:53.265 +02:00 [Information] Request finished in 446.8589ms 200 application/json; charset=utf-8
2019-04-18 17:31:53.594 +02:00 [Information] Executed DbCommand ("347"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:53.620 +02:00 [Information] Executed DbCommand ("24"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:53.627 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:53.630 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:53.633 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:53.635 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:53.641 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:53.644 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:53.646 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:53.650 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:53.653 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:53.659 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:53.677 +02:00 [Information] Executed DbCommand ("16"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:53.681 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:53.684 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:53.923 +02:00 [Information] Executed DbCommand ("236"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:53.952 +02:00 [Information] Executed DbCommand ("27"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:54.215 +02:00 [Information] Executed DbCommand ("234"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:54.231 +02:00 [Information] Executed DbCommand ("13"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:54.235 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:54.251 +02:00 [Information] Executed DbCommand ("13"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:54.467 +02:00 [Information] Executed DbCommand ("213"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:54.707 +02:00 [Information] Executed DbCommand ("238"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:54.736 +02:00 [Information] Executed DbCommand ("26"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:54.964 +02:00 [Information] Executed DbCommand ("225"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:54.982 +02:00 [Information] Executed DbCommand ("13"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:54.987 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:55.226 +02:00 [Information] Executed DbCommand ("237"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:55.242 +02:00 [Information] Executed DbCommand ("13"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:55.498 +02:00 [Information] Executed DbCommand ("252"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:55.514 +02:00 [Information] Executed DbCommand ("13"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:55.518 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:55.519 +02:00 [Information] Executed action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 5899.6263ms.
2019-04-18 17:31:55.521 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[System.DateTime, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"'.
2019-04-18 17:31:55.523 +02:00 [Information] Executed action "Services.APIService.BezorgdagController.getBezorgdagen (Services)" in 5905.7064ms
2019-04-18 17:31:55.526 +02:00 [Information] Request finished in 6027.7766ms 200 application/json; charset=utf-8
2019-04-18 17:31:55.556 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 17:31:55.556 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 17:31:55.559 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 17:31:55.559 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 17:31:55.561 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:31:55.561 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:31:55.562 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:31:55.562 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:31:55.563 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:31:55.564 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:31:55.564 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:31:55.565 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:31:55.566 +02:00 [Information] Request finished in 12.004ms 204 
2019-04-18 17:31:55.567 +02:00 [Information] Request finished in 7.8239ms 204 
2019-04-18 17:31:55.570 +02:00 [Information] Request finished in 11.285ms 204 
2019-04-18 17:31:55.575 +02:00 [Information] Request finished in 21.4558ms 204 
2019-04-18 17:31:55.583 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 17:31:55.583 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:31:55.584 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:31:55.592 +02:00 [Information] Successfully validated the token.
2019-04-18 17:31:55.593 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:31:55.596 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:31:55.600 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 17:31:55.601 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 17:31:55.616 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 17:31:55.619 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:31:55.619 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:31:55.620 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:31:55.623 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:31:55.625 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:31:55.626 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:31:55.628 +02:00 [Information] Successfully validated the token.
2019-04-18 17:31:55.628 +02:00 [Information] Successfully validated the token.
2019-04-18 17:31:55.629 +02:00 [Information] Successfully validated the token.
2019-04-18 17:31:55.630 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:31:55.630 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:31:55.631 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:31:55.633 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:31:55.633 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:31:55.634 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:31:55.891 +02:00 [Information] Executed DbCommand ("291"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:31:55.891 +02:00 [Information] Executed DbCommand ("254"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:31:55.891 +02:00 [Information] Executed DbCommand ("246"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:31:55.891 +02:00 [Information] Executed DbCommand ("158"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:31:55.930 +02:00 [Information] Executed DbCommand ("33"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:31:55.931 +02:00 [Information] Executed DbCommand ("36"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:31:55.932 +02:00 [Information] Executed DbCommand ("34"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:31:55.933 +02:00 [Information] Route matched with "{action = \"GetProductenbijDatum\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenbijDatum (Services)"
2019-04-18 17:31:55.937 +02:00 [Information] Route matched with "{action = \"GetWinkelBijDatum\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)"
2019-04-18 17:31:55.937 +02:00 [Information] Authorization was successful.
2019-04-18 17:31:55.938 +02:00 [Information] Authorization was successful.
2019-04-18 17:31:55.939 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenbijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 17:31:55.940 +02:00 [Information] Executing action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 17:31:55.943 +02:00 [Information] Route matched with "{action = \"GetDeadlinePerDatum\", controller = \"Deadline\"}". Executing action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)"
2019-04-18 17:31:55.944 +02:00 [Information] Authorization was successful.
2019-04-18 17:31:55.945 +02:00 [Information] Executing action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 17:31:55.975 +02:00 [Information] Executed DbCommand ("69"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:31:55.978 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 17:31:55.979 +02:00 [Information] Authorization was successful.
2019-04-18 17:31:55.980 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 17:31:55.986 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 4.3611ms.
2019-04-18 17:31:55.987 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:31:56.013 +02:00 [Information] Executed DbCommand ("71"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:56.013 +02:00 [Information] Executed DbCommand ("72"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:56.013 +02:00 [Information] Executed DbCommand ("67"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:31:56.019 +02:00 [Information] Executed DbCommand ("21"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 17:31:56.043 +02:00 [Information] Executed DbCommand ("10"ms) [Parameters=["@__bezorgdag_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [x].[Dag], [x].[BestelDeadlineDag], [x].[BestelDeadlineTijd], [x].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [x]
WHERE [x].[Dag] = @__bezorgdag_0"
2019-04-18 17:31:56.046 +02:00 [Information] Executed action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 99.7075ms.
2019-04-18 17:31:56.047 +02:00 [Information] Executed DbCommand ("26"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:56.047 +02:00 [Information] Executed DbCommand ("30"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:31:56.047 +02:00 [Information] Executing JsonResult, writing value of type '"System.DateTime"'.
2019-04-18 17:31:56.052 +02:00 [Information] Executed action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" in 108.4565ms
2019-04-18 17:31:56.055 +02:00 [Information] Request finished in 472.4979ms 200 application/json; charset=utf-8
2019-04-18 17:31:56.080 +02:00 [Information] Executed action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 138.149ms.
2019-04-18 17:31:56.080 +02:00 [Information] Executed DbCommand ("49"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x.ProductenPerBestellingen].[BestellingId], [x.ProductenPerBestellingen].[ProductId], [x.ProductenPerBestellingen].[Aantal], [x.ProductenPerBestellingen].[Notitie], [x.ProductenPerBestellingen].[Prijs], [p.Product].[ProductId], [p.Product].[CategorieId], [p.Product].[Naam], [p.Product].[Prijs], [p.Product].[WinkelId]
FROM [ProductenPerBestellingen] AS [x.ProductenPerBestellingen]
INNER JOIN [Producten] AS [p.Product] ON [x.ProductenPerBestellingen].[ProductId] = [p.Product].[ProductId]
INNER JOIN (
    SELECT [x0].[BestellingId]
    FROM [Bestellingen] AS [x0]
    WHERE (CONVERT(date, [x0].[Bezorgdatum]) = @__date_Date_0) AND ([x0].[GebruikerId] = @__gebruikerId_1)
) AS [t] ON [x.ProductenPerBestellingen].[BestellingId] = [t].[BestellingId]
ORDER BY [t].[BestellingId]"
2019-04-18 17:31:56.082 +02:00 [Information] Executing JsonResult, writing value of type '"SogyoLunchApp.Winkel"'.
2019-04-18 17:31:56.083 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 17:31:56.085 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 106.2199ms
2019-04-18 17:31:56.086 +02:00 [Information] Executed action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" in 147.2616ms
2019-04-18 17:31:56.092 +02:00 [Information] Request finished in 491.4505ms 200 application/json; charset=utf-8
2019-04-18 17:31:56.094 +02:00 [Information] Request finished in 478.1668ms 200 application/json; charset=utf-8
2019-04-18 17:31:56.100 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenbijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 159.4296ms.
2019-04-18 17:31:56.102 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:31:56.103 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenbijDatum (Services)" in 166.0147ms
2019-04-18 17:31:56.106 +02:00 [Information] Request finished in 505.3278ms 200 application/json; charset=utf-8
2019-04-18 17:35:38.126 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:35:38.126 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:35:38.127 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:35:38.128 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:35:38.128 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:35:38.129 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:35:38.130 +02:00 [Information] Request finished in 37.5525ms 204 
2019-04-18 17:35:38.130 +02:00 [Information] Request finished in 38.9573ms 204 
2019-04-18 17:35:38.135 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:35:38.136 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:35:38.142 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:35:38.143 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:35:38.144 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:35:38.144 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:35:38.145 +02:00 [Information] Successfully validated the token.
2019-04-18 17:35:38.146 +02:00 [Information] Successfully validated the token.
2019-04-18 17:35:38.146 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:35:38.147 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:35:38.149 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:35:38.149 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:35:38.164 +02:00 [Information] Executed DbCommand ("11"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:35:38.164 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:35:38.173 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:35:38.175 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:35:38.176 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:35:38.178 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:35:38.178 +02:00 [Information] Authorization was successful.
2019-04-18 17:35:38.179 +02:00 [Information] Authorization was successful.
2019-04-18 17:35:38.180 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:35:38.181 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:35:38.183 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1895ms.
2019-04-18 17:35:38.183 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0029ms.
2019-04-18 17:35:38.185 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:35:38.185 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:35:38.189 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:35:38.190 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:35:38.191 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 12.1068ms
2019-04-18 17:35:38.193 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 14.7847ms
2019-04-18 17:35:38.194 +02:00 [Information] Request finished in 58.3928ms 200 application/json; charset=utf-8
2019-04-18 17:35:38.196 +02:00 [Information] Request finished in 60.0875ms 200 application/json; charset=utf-8
2019-04-18 17:35:41.527 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:35:41.528 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:35:41.532 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:35:41.533 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:35:41.534 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:35:41.534 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:35:41.535 +02:00 [Information] Request finished in 7.4991ms 204 
2019-04-18 17:35:41.536 +02:00 [Information] Request finished in 7.927ms 204 
2019-04-18 17:35:41.796 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:35:41.797 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:35:41.876 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:35:41.876 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:35:41.877 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:35:41.878 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:35:41.879 +02:00 [Information] Successfully validated the token.
2019-04-18 17:35:41.879 +02:00 [Information] Successfully validated the token.
2019-04-18 17:35:41.880 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:35:41.880 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:35:41.882 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:35:41.883 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:35:41.895 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:35:41.896 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:35:41.914 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:35:41.914 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:35:41.917 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:35:41.920 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:35:41.920 +02:00 [Information] Authorization was successful.
2019-04-18 17:35:41.924 +02:00 [Information] Authorization was successful.
2019-04-18 17:35:41.925 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:35:41.925 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:35:41.926 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1066ms.
2019-04-18 17:35:41.927 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0052ms.
2019-04-18 17:35:41.928 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:35:41.931 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:35:41.945 +02:00 [Information] Executed DbCommand ("13"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:35:41.947 +02:00 [Information] Executed DbCommand ("16"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:35:41.947 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 23.983ms
2019-04-18 17:35:41.954 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 33.5199ms
2019-04-18 17:35:41.955 +02:00 [Information] Request finished in 158.7091ms 200 application/json; charset=utf-8
2019-04-18 17:35:41.956 +02:00 [Information] Request finished in 159.4333ms 200 application/json; charset=utf-8
2019-04-18 17:35:57.102 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:35:57.102 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:35:57.104 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:35:57.104 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:35:57.106 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:35:57.107 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:35:57.107 +02:00 [Information] Request finished in 5.4471ms 204 
2019-04-18 17:35:57.108 +02:00 [Information] Request finished in 5.9628ms 204 
2019-04-18 17:35:57.112 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:35:57.112 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:35:57.113 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:35:57.114 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:35:57.114 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:35:57.115 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:35:57.116 +02:00 [Information] Successfully validated the token.
2019-04-18 17:35:57.116 +02:00 [Information] Successfully validated the token.
2019-04-18 17:35:57.117 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:35:57.117 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:35:57.118 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:35:57.119 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:35:57.159 +02:00 [Information] Executed DbCommand ("36"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:35:57.161 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:35:57.167 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:35:57.169 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:35:57.172 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:35:57.173 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:35:57.174 +02:00 [Information] Authorization was successful.
2019-04-18 17:35:57.175 +02:00 [Information] Authorization was successful.
2019-04-18 17:35:57.176 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:35:57.176 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:35:57.177 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1169ms.
2019-04-18 17:35:57.177 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0049ms.
2019-04-18 17:35:57.179 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:35:57.180 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:35:57.184 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:35:57.185 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:35:57.186 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 11.4352ms
2019-04-18 17:35:57.188 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 14.2083ms
2019-04-18 17:35:57.189 +02:00 [Information] Request finished in 76.6271ms 200 application/json; charset=utf-8
2019-04-18 17:35:57.190 +02:00 [Information] Request finished in 77.7821ms 200 application/json; charset=utf-8
2019-04-18 17:36:04.137 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:36:04.137 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:36:04.142 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:36:04.143 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:36:04.144 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:36:04.144 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:36:04.145 +02:00 [Information] Request finished in 8.5194ms 204 
2019-04-18 17:36:04.146 +02:00 [Information] Request finished in 8.9234ms 204 
2019-04-18 17:36:04.409 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:36:04.409 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:36:04.514 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:36:04.514 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:36:04.515 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:36:04.516 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:36:04.516 +02:00 [Information] Successfully validated the token.
2019-04-18 17:36:04.546 +02:00 [Information] Successfully validated the token.
2019-04-18 17:36:04.547 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:36:04.547 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:36:04.548 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:36:04.549 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:36:04.567 +02:00 [Information] Executed DbCommand ("15"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:36:04.571 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:36:04.578 +02:00 [Information] Executed DbCommand ("7"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:36:04.590 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:36:04.592 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:36:04.636 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:36:04.636 +02:00 [Information] Authorization was successful.
2019-04-18 17:36:04.638 +02:00 [Information] Authorization was successful.
2019-04-18 17:36:04.638 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:36:04.639 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:36:04.640 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0049ms.
2019-04-18 17:36:04.641 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1057ms.
2019-04-18 17:36:04.642 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:36:04.645 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:36:04.652 +02:00 [Information] Executed DbCommand ("9"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:36:04.654 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 18.219ms
2019-04-18 17:36:04.656 +02:00 [Information] Request finished in 246.5971ms 200 application/json; charset=utf-8
2019-04-18 17:36:04.658 +02:00 [Information] Executed DbCommand ("12"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:36:04.661 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 23.1556ms
2019-04-18 17:36:04.662 +02:00 [Information] Request finished in 252.5184ms 200 application/json; charset=utf-8
2019-04-18 17:36:53.611 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:36:53.611 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:36:53.612 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:36:53.613 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:36:53.614 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:36:53.615 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:36:53.616 +02:00 [Information] Request finished in 5.0829ms 204 
2019-04-18 17:36:53.618 +02:00 [Information] Request finished in 6.8398ms 204 
2019-04-18 17:36:53.866 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:36:53.868 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:36:53.869 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:36:53.870 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:36:53.871 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:36:53.876 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:36:53.878 +02:00 [Information] Successfully validated the token.
2019-04-18 17:36:53.879 +02:00 [Information] Successfully validated the token.
2019-04-18 17:36:53.879 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:36:53.880 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:36:53.881 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:36:53.882 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:36:53.902 +02:00 [Information] Executed DbCommand ("17"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:36:53.902 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:36:53.959 +02:00 [Information] Executed DbCommand ("45"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:36:53.959 +02:00 [Information] Executed DbCommand ("45"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:36:53.963 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:36:53.970 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:36:53.970 +02:00 [Information] Authorization was successful.
2019-04-18 17:36:53.971 +02:00 [Information] Authorization was successful.
2019-04-18 17:36:53.972 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:36:53.974 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:36:53.974 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1083ms.
2019-04-18 17:36:53.975 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0044ms.
2019-04-18 17:36:53.976 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:36:53.978 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:36:53.994 +02:00 [Information] Executed DbCommand ("14"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:36:53.994 +02:00 [Information] Executed DbCommand ("15"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:36:53.996 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 24.9825ms
2019-04-18 17:36:53.998 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 28.4103ms
2019-04-18 17:36:53.999 +02:00 [Information] Request finished in 131.7329ms 200 application/json; charset=utf-8
2019-04-18 17:36:54.004 +02:00 [Information] Request finished in 136.7667ms 200 application/json; charset=utf-8
2019-04-18 17:38:40.209 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:38:40.209 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:38:40.217 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:38:40.218 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:38:40.219 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:38:40.220 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:38:40.222 +02:00 [Information] Request finished in 12.8054ms 204 
2019-04-18 17:38:40.224 +02:00 [Information] Request finished in 14.8971ms 204 
2019-04-18 17:38:40.478 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:38:40.479 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:38:40.479 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:38:40.480 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:38:40.481 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:38:40.482 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:38:40.483 +02:00 [Information] Successfully validated the token.
2019-04-18 17:38:40.483 +02:00 [Information] Successfully validated the token.
2019-04-18 17:38:40.484 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:38:40.484 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:38:40.486 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:38:40.486 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:38:40.584 +02:00 [Information] Executed DbCommand ("93"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:38:40.594 +02:00 [Information] Executed DbCommand ("65"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:38:40.604 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:38:40.604 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:38:40.609 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:38:40.615 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:38:40.617 +02:00 [Information] Authorization was successful.
2019-04-18 17:38:40.618 +02:00 [Information] Authorization was successful.
2019-04-18 17:38:40.652 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:38:40.653 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:38:40.654 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1147ms.
2019-04-18 17:38:40.654 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0042ms.
2019-04-18 17:38:40.657 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:38:40.658 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:38:40.661 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:38:40.662 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:38:40.663 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 45.3073ms
2019-04-18 17:38:40.665 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 48.1068ms
2019-04-18 17:38:40.666 +02:00 [Information] Request finished in 187.1924ms 200 application/json; charset=utf-8
2019-04-18 17:38:40.667 +02:00 [Information] Request finished in 188.5519ms 200 application/json; charset=utf-8
2019-04-18 17:39:59.647 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:39:59.647 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:39:59.655 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:39:59.660 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:39:59.661 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:39:59.661 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:39:59.662 +02:00 [Information] Request finished in 14.6939ms 204 
2019-04-18 17:39:59.663 +02:00 [Information] Request finished in 15.453ms 204 
2019-04-18 17:39:59.937 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:39:59.946 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:39:59.947 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:39:59.948 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:39:59.948 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:39:59.949 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:39:59.951 +02:00 [Information] Successfully validated the token.
2019-04-18 17:39:59.961 +02:00 [Information] Successfully validated the token.
2019-04-18 17:39:59.983 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:39:59.983 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:39:59.989 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:40:00.000 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:40:00.087 +02:00 [Information] Executed DbCommand ("42"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:40:00.088 +02:00 [Information] Executed DbCommand ("84"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:40:00.098 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:40:00.101 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:40:00.106 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:40:00.108 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:40:00.109 +02:00 [Information] Authorization was successful.
2019-04-18 17:40:00.109 +02:00 [Information] Authorization was successful.
2019-04-18 17:40:00.110 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:40:00.111 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:40:00.111 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0062ms.
2019-04-18 17:40:00.112 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.094ms.
2019-04-18 17:40:00.113 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:40:00.115 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:40:00.119 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:40:00.120 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:40:00.121 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 12.6643ms
2019-04-18 17:40:00.124 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 14.9843ms
2019-04-18 17:40:00.126 +02:00 [Information] Request finished in 179.5145ms 200 application/json; charset=utf-8
2019-04-18 17:40:00.127 +02:00 [Information] Request finished in 189.6591ms 200 application/json; charset=utf-8
2019-04-18 17:41:01.691 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:41:01.691 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:41:01.704 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:41:01.705 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:41:01.705 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:41:01.706 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:41:01.708 +02:00 [Information] Request finished in 16.4758ms 204 
2019-04-18 17:41:01.708 +02:00 [Information] Request finished in 17.2377ms 204 
2019-04-18 17:41:02.012 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:41:02.013 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:41:02.014 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:41:02.017 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:41:02.030 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:41:02.044 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:41:02.045 +02:00 [Information] Successfully validated the token.
2019-04-18 17:41:02.046 +02:00 [Information] Successfully validated the token.
2019-04-18 17:41:02.047 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:41:02.047 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:41:02.048 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:41:02.049 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:41:02.508 +02:00 [Information] Executed DbCommand ("456"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:41:02.508 +02:00 [Information] Executed DbCommand ("376"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:41:02.538 +02:00 [Information] Executed DbCommand ("26"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:41:02.541 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:41:02.542 +02:00 [Information] Authorization was successful.
2019-04-18 17:41:02.543 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:41:02.544 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0059ms.
2019-04-18 17:41:02.546 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:41:02.550 +02:00 [Information] Executed DbCommand ("35"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:41:02.552 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:41:02.553 +02:00 [Information] Authorization was successful.
2019-04-18 17:41:02.554 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:41:02.555 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1012ms.
2019-04-18 17:41:02.558 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:41:02.592 +02:00 [Information] Executed DbCommand ("44"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:41:02.616 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 73.928ms
2019-04-18 17:41:02.657 +02:00 [Information] Request finished in 645.6066ms 200 application/json; charset=utf-8
2019-04-18 17:41:02.987 +02:00 [Information] Executed DbCommand ("427"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:41:02.989 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 435.9225ms
2019-04-18 17:41:02.991 +02:00 [Information] Request finished in 978.2892ms 200 application/json; charset=utf-8
2019-04-18 17:48:14.672 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 17:48:14.692 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:48:14.695 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:48:14.697 +02:00 [Information] Request finished in 24.9602ms 204 
2019-04-18 17:48:14.713 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bezorgdag?aantalDagen=40  
2019-04-18 17:48:14.714 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:48:14.715 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:48:14.720 +02:00 [Information] Successfully validated the token.
2019-04-18 17:48:14.721 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:48:14.731 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:48:15.120 +02:00 [Information] Executed DbCommand ("254"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:48:15.187 +02:00 [Information] Executed DbCommand ("45"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:48:15.198 +02:00 [Information] Route matched with "{action = \"getBezorgdagen\", controller = \"Bezorgdag\"}". Executing action "Services.APIService.BezorgdagController.getBezorgdagen (Services)"
2019-04-18 17:48:15.201 +02:00 [Information] Authorization was successful.
2019-04-18 17:48:15.210 +02:00 [Information] Executing action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)" with arguments (["40"]) - Validation state: Valid
2019-04-18 17:48:15.233 +02:00 [Information] Executed DbCommand ("14"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.259 +02:00 [Information] Executed DbCommand ("22"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.266 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.270 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.279 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.283 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.286 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.294 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.297 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.300 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.304 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.310 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.314 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.317 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.320 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.324 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.329 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.332 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.335 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.337 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.343 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.345 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.347 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.349 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.351 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.353 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.355 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.358 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.361 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.363 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.365 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.367 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.369 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.372 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.374 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.376 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.378 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.381 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.383 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.385 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.387 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.390 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.392 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.395 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.397 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.400 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.402 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.405 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.409 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.412 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.414 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.416 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.418 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.420 +02:00 [Information] Executed DbCommand ("0"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.428 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.432 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.437 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.442 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.445 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.449 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.452 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.456 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.460 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.463 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.467 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.471 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.477 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.481 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.485 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.493 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.499 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.502 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.511 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.515 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.519 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.523 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.528 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.532 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.537 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.545 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [y].[Dag], [y].[BestelDeadlineDag], [y].[BestelDeadlineTijd], [y].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [y]
WHERE [y].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.547 +02:00 [Information] Executed action method "Services.APIService.BezorgdagController.getBezorgdagen (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 334.8681ms.
2019-04-18 17:48:15.549 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[System.DateTime, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"'.
2019-04-18 17:48:15.551 +02:00 [Information] Executed action "Services.APIService.BezorgdagController.getBezorgdagen (Services)" in 350.956ms
2019-04-18 17:48:15.553 +02:00 [Information] Request finished in 840.4365ms 200 application/json; charset=utf-8
2019-04-18 17:48:15.593 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 17:48:15.593 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 17:48:15.604 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 17:48:15.604 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 17:48:15.605 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:48:15.605 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:48:15.612 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:48:15.613 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:48:15.613 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:48:15.614 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:48:15.615 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:48:15.615 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:48:15.616 +02:00 [Information] Request finished in 23.1499ms 204 
2019-04-18 17:48:15.617 +02:00 [Information] Request finished in 23.7204ms 204 
2019-04-18 17:48:15.617 +02:00 [Information] Request finished in 13.554ms 204 
2019-04-18 17:48:15.618 +02:00 [Information] Request finished in 13.9813ms 204 
2019-04-18 17:48:15.650 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel/2019-04-19  
2019-04-18 17:48:15.651 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/product/2019-04-19  
2019-04-18 17:48:15.651 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/bestelling/2019-04-19/3a4a5049-5bff-4683-8042-7e01e6740527  
2019-04-18 17:48:15.651 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/deadline/2019-04-19  
2019-04-18 17:48:15.652 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:48:15.653 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:48:15.653 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:48:15.654 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:48:15.654 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:48:15.655 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:48:15.659 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:48:15.661 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:48:15.661 +02:00 [Information] Successfully validated the token.
2019-04-18 17:48:15.662 +02:00 [Information] Successfully validated the token.
2019-04-18 17:48:15.662 +02:00 [Information] Successfully validated the token.
2019-04-18 17:48:15.663 +02:00 [Information] Successfully validated the token.
2019-04-18 17:48:15.663 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:48:15.664 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:48:15.665 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:48:15.665 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:48:15.666 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:48:15.667 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:48:15.674 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:48:15.692 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:48:15.692 +02:00 [Information] Executed DbCommand ("11"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:48:15.710 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:48:15.719 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:48:15.720 +02:00 [Information] Route matched with "{action = \"GetWinkelBijDatum\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)"
2019-04-18 17:48:15.726 +02:00 [Information] Authorization was successful.
2019-04-18 17:48:15.729 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:48:15.730 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:48:15.730 +02:00 [Information] Executing action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 17:48:15.734 +02:00 [Information] Executed DbCommand ("3"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:48:15.735 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:48:15.740 +02:00 [Information] Route matched with "{action = \"GetProductenbijDatum\", controller = \"Product\"}". Executing action "Services.APIService.ProductController.GetProductenbijDatum (Services)"
2019-04-18 17:48:15.741 +02:00 [Information] Executed DbCommand ("5"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:48:15.742 +02:00 [Information] Route matched with "{action = \"GetBestellingenPerDatumEnGebruiker\", controller = \"Bestelling\"}". Executing action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)"
2019-04-18 17:48:15.742 +02:00 [Information] Authorization was successful.
2019-04-18 17:48:15.743 +02:00 [Information] Authorization was successful.
2019-04-18 17:48:15.746 +02:00 [Information] Route matched with "{action = \"GetDeadlinePerDatum\", controller = \"Deadline\"}". Executing action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)"
2019-04-18 17:48:15.746 +02:00 [Information] Executing action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" with arguments (["4/19/2019 12:00:00 AM", "3a4a5049-5bff-4683-8042-7e01e6740527"]) - Validation state: Valid
2019-04-18 17:48:15.747 +02:00 [Information] Executing action method "Services.APIService.ProductController.GetProductenbijDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 17:48:15.747 +02:00 [Information] Authorization was successful.
2019-04-18 17:48:15.751 +02:00 [Information] Executing action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" with arguments (["4/19/2019 12:00:00 AM"]) - Validation state: Valid
2019-04-18 17:48:15.758 +02:00 [Information] Executed action method "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 9.0315ms.
2019-04-18 17:48:15.760 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1[[SogyoLunchApp.Bestelling, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:48:15.787 +02:00 [Information] Executed DbCommand ("24"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[BestellingId], [x].[Besteldatum], [x].[Bezorgdatum], [x].[GebruikerId]
FROM [Bestellingen] AS [x]
WHERE (CONVERT(date, [x].[Bezorgdatum]) = @__date_Date_0) AND ([x].[GebruikerId] = @__gebruikerId_1)
ORDER BY [x].[BestellingId]"
2019-04-18 17:48:15.871 +02:00 [Information] Executed DbCommand ("121"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.885 +02:00 [Information] Executed DbCommand ("133"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.885 +02:00 [Information] Executed DbCommand ("138"ms) [Parameters=["@__datum_Date_0='?' (DbType = DateTime2)"], CommandType='Text', CommandTimeout='30']"
""SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [WinkelUitzonderingenPerBezorgdagen] AS [x]
        WHERE CONVERT(date, [x].[Date]) = @__datum_Date_0)
    THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT)
END"
2019-04-18 17:48:15.896 +02:00 [Information] Executed DbCommand ("103"ms) [Parameters=["@__date_Date_0='?' (DbType = DateTime2), @__gebruikerId_1='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x.ProductenPerBestellingen].[BestellingId], [x.ProductenPerBestellingen].[ProductId], [x.ProductenPerBestellingen].[Aantal], [x.ProductenPerBestellingen].[Notitie], [x.ProductenPerBestellingen].[Prijs], [p.Product].[ProductId], [p.Product].[CategorieId], [p.Product].[Naam], [p.Product].[Prijs], [p.Product].[WinkelId]
FROM [ProductenPerBestellingen] AS [x.ProductenPerBestellingen]
INNER JOIN [Producten] AS [p.Product] ON [x.ProductenPerBestellingen].[ProductId] = [p.Product].[ProductId]
INNER JOIN (
    SELECT [x0].[BestellingId]
    FROM [Bestellingen] AS [x0]
    WHERE (CONVERT(date, [x0].[Bezorgdatum]) = @__date_Date_0) AND ([x0].[GebruikerId] = @__gebruikerId_1)
) AS [t] ON [x.ProductenPerBestellingen].[BestellingId] = [t].[BestellingId]
ORDER BY [t].[BestellingId]"
2019-04-18 17:48:15.903 +02:00 [Information] Executed DbCommand ("15"ms) [Parameters=["@__bezorgdag_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [x].[Dag], [x].[BestelDeadlineDag], [x].[BestelDeadlineTijd], [x].[WinkelId]
FROM [StandaardWinkelsPerBezorgdagen] AS [x]
WHERE [x].[Dag] = @__bezorgdag_0"
2019-04-18 17:48:15.904 +02:00 [Information] Executed action "Services.APIService.BestellingController.GetBestellingenPerDatumEnGebruiker (Services)" in 160.2808ms
2019-04-18 17:48:15.905 +02:00 [Information] Executed action method "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 152.7473ms.
2019-04-18 17:48:15.906 +02:00 [Information] Request finished in 254.9995ms 200 application/json; charset=utf-8
2019-04-18 17:48:15.907 +02:00 [Information] Executing JsonResult, writing value of type '"System.DateTime"'.
2019-04-18 17:48:15.908 +02:00 [Information] Executed DbCommand ("17"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:15.910 +02:00 [Information] Executed action "Services.APIService.DeadlineController.GetDeadlinePerDatum (Services)" in 163.0113ms
2019-04-18 17:48:15.913 +02:00 [Information] Request finished in 261.8061ms 200 application/json; charset=utf-8
2019-04-18 17:48:15.915 +02:00 [Information] Executed action method "Services.APIService.WinkelController.GetWinkelBijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 179.0844ms.
2019-04-18 17:48:15.917 +02:00 [Information] Executing JsonResult, writing value of type '"SogyoLunchApp.Winkel"'.
2019-04-18 17:48:15.919 +02:00 [Information] Executed action "Services.APIService.WinkelController.GetWinkelBijDatum (Services)" in 192.9455ms
2019-04-18 17:48:15.920 +02:00 [Information] Request finished in 270.1042ms 200 application/json; charset=utf-8
2019-04-18 17:48:15.932 +02:00 [Information] Executed DbCommand ("52"ms) [Parameters=["@__datum_DayOfWeek_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(2) [s].[Dag], [s].[BestelDeadlineDag], [s].[BestelDeadlineTijd], [s].[WinkelId], [s.Winkel].[WinkelId], [s.Winkel].[Winkellocatie], [s.Winkel].[Winkelnaam]
FROM [StandaardWinkelsPerBezorgdagen] AS [s]
LEFT JOIN [Winkels] AS [s.Winkel] ON [s].[WinkelId] = [s.Winkel].[WinkelId]
WHERE [s].[Dag] = @__datum_DayOfWeek_0"
2019-04-18 17:48:16.087 +02:00 [Information] Executed DbCommand ("151"ms) [Parameters=["@__winkel_0_WinkelId='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[ProductId], [x].[CategorieId], [x].[Naam], [x].[Prijs], [x].[WinkelId]
FROM [Producten] AS [x]
WHERE [x].[WinkelId] = @__winkel_0_WinkelId"
2019-04-18 17:48:16.089 +02:00 [Information] Executed action method "Services.APIService.ProductController.GetProductenbijDatum (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 338.4666ms.
2019-04-18 17:48:16.091 +02:00 [Information] Executing JsonResult, writing value of type '"System.Collections.Generic.List`1[[Domain.Product, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:48:16.093 +02:00 [Information] Executed action "Services.APIService.ProductController.GetProductenbijDatum (Services)" in 350.4354ms
2019-04-18 17:48:16.094 +02:00 [Information] Request finished in 443.1935ms 200 application/json; charset=utf-8
2019-04-18 17:48:30.601 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:48:30.603 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:48:30.605 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:48:30.605 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:48:30.609 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:48:30.610 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:48:30.611 +02:00 [Information] Request finished in 9.4ms 204 
2019-04-18 17:48:30.611 +02:00 [Information] Request finished in 8.8068ms 204 
2019-04-18 17:48:30.615 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:48:30.615 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:48:30.616 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:48:30.617 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:48:30.617 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:48:30.618 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:48:30.619 +02:00 [Information] Successfully validated the token.
2019-04-18 17:48:30.620 +02:00 [Information] Successfully validated the token.
2019-04-18 17:48:30.620 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:48:30.621 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:48:30.622 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:48:30.622 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:48:30.877 +02:00 [Information] Executed DbCommand ("248"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:48:30.888 +02:00 [Information] Executed DbCommand ("262"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:48:30.921 +02:00 [Information] Executed DbCommand ("39"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:48:30.926 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:48:30.927 +02:00 [Information] Authorization was successful.
2019-04-18 17:48:30.928 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:48:30.930 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.6785ms.
2019-04-18 17:48:30.931 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:48:30.932 +02:00 [Information] Executed DbCommand ("37"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:48:30.934 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:48:30.935 +02:00 [Information] Authorization was successful.
2019-04-18 17:48:30.936 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:48:30.937 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.003ms.
2019-04-18 17:48:30.938 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:48:30.951 +02:00 [Information] Executed DbCommand ("12"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:48:30.953 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 17.8149ms
2019-04-18 17:48:30.954 +02:00 [Information] Request finished in 339.0412ms 200 application/json; charset=utf-8
2019-04-18 17:48:30.968 +02:00 [Information] Executed DbCommand ("36"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:48:30.971 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 44.3805ms
2019-04-18 17:48:30.973 +02:00 [Information] Request finished in 357.77ms 200 application/json; charset=utf-8
2019-04-18 17:49:01.766 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:49:01.801 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:49:01.801 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:49:01.803 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:49:01.803 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:49:01.804 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:49:01.805 +02:00 [Information] Request finished in 38.9413ms 204 
2019-04-18 17:49:01.805 +02:00 [Information] Request finished in 3.9455ms 204 
2019-04-18 17:49:01.817 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:49:01.817 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:49:01.829 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:49:01.829 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:49:01.830 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:49:01.831 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:49:01.832 +02:00 [Information] Successfully validated the token.
2019-04-18 17:49:01.833 +02:00 [Information] Successfully validated the token.
2019-04-18 17:49:01.834 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:49:01.834 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:49:01.835 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:49:01.836 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:49:02.072 +02:00 [Information] Executed DbCommand ("233"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:49:02.081 +02:00 [Information] Executed DbCommand ("236"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:49:02.321 +02:00 [Information] Executed DbCommand ("235"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:49:02.331 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:49:02.332 +02:00 [Information] Authorization was successful.
2019-04-18 17:49:02.333 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:49:02.334 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0044ms.
2019-04-18 17:49:02.336 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:49:02.343 +02:00 [Information] Executed DbCommand ("263"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:49:02.346 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:49:02.348 +02:00 [Information] Authorization was successful.
2019-04-18 17:49:02.348 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:49:02.349 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.072ms.
2019-04-18 17:49:02.351 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:49:02.554 +02:00 [Information] Executed DbCommand ("217"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:49:02.560 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 227.8568ms
2019-04-18 17:49:02.563 +02:00 [Information] Request finished in 746.0546ms 200 application/json; charset=utf-8
2019-04-18 17:49:02.572 +02:00 [Information] Executed DbCommand ("220"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:49:02.576 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 228.2841ms
2019-04-18 17:49:02.577 +02:00 [Information] Request finished in 760.0308ms 200 application/json; charset=utf-8
2019-04-18 17:49:31.587 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:49:31.588 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:49:31.593 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:49:31.594 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:49:31.595 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:49:31.597 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:49:31.598 +02:00 [Information] Request finished in 9.8793ms 204 
2019-04-18 17:49:31.609 +02:00 [Information] Request finished in 15.1134ms 204 
2019-04-18 17:49:31.623 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:49:31.624 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:49:31.625 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:49:31.627 +02:00 [Information] Successfully validated the token.
2019-04-18 17:49:31.628 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:49:31.630 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:49:31.662 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:49:31.663 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:49:31.664 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:49:31.665 +02:00 [Information] Successfully validated the token.
2019-04-18 17:49:31.665 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:49:31.666 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:49:31.878 +02:00 [Information] Executed DbCommand ("210"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:49:31.888 +02:00 [Information] Executed DbCommand ("255"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:49:32.066 +02:00 [Information] Executed DbCommand ("171"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:49:32.066 +02:00 [Information] Executed DbCommand ("182"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:49:32.071 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:49:32.073 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:49:32.076 +02:00 [Information] Authorization was successful.
2019-04-18 17:49:32.077 +02:00 [Information] Authorization was successful.
2019-04-18 17:49:32.078 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:49:32.078 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:49:32.079 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.087ms.
2019-04-18 17:49:32.080 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0028ms.
2019-04-18 17:49:32.082 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:49:32.083 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:49:32.276 +02:00 [Information] Executed DbCommand ("190"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:49:32.278 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 201.0213ms
2019-04-18 17:49:32.286 +02:00 [Information] Request finished in 663.0396ms 200 application/json; charset=utf-8
2019-04-18 17:49:32.295 +02:00 [Information] Executed DbCommand ("211"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:49:32.312 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 236.5172ms
2019-04-18 17:49:32.313 +02:00 [Information] Request finished in 651.4255ms 200 application/json; charset=utf-8
2019-04-18 17:49:47.671 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie?CategorieId=1  
2019-04-18 17:49:47.674 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:49:47.676 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:49:47.677 +02:00 [Information] Request finished in 6.3204ms 204 
2019-04-18 17:49:47.680 +02:00 [Information] Request starting HTTP/1.1 DELETE http://localhost:5000/sogyolunchapi/categorie?CategorieId=1  
2019-04-18 17:49:47.682 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:49:47.683 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:49:47.684 +02:00 [Information] Successfully validated the token.
2019-04-18 17:49:47.684 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:49:47.686 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:49:47.925 +02:00 [Information] Executed DbCommand ("237"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:49:47.964 +02:00 [Information] Executed DbCommand ("34"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:49:47.969 +02:00 [Information] Route matched with "{action = \"DeleteCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.DeleteCategorie (Services)"
2019-04-18 17:49:47.971 +02:00 [Information] Authorization was successful.
2019-04-18 17:49:47.972 +02:00 [Information] Executing action method "Services.APIService.CategorieController.DeleteCategorie (Services)" with arguments (["1"]) - Validation state: Valid
2019-04-18 17:49:47.993 +02:00 [Information] Executed DbCommand ("13"ms) [Parameters=["@__get_Item_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[CategorieId], [e].[CategorieNaam], [e].[VolgordeNummer], [e].[WinkelId]
FROM [Categorien] AS [e]
WHERE [e].[CategorieId] = @__get_Item_0"
2019-04-18 17:49:48.171 +02:00 [Information] Executed DbCommand ("166"ms) [Parameters=["@p0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
DELETE FROM [Categorien]
WHERE [CategorieId] = @p0;
SELECT @@ROWCOUNT;"
2019-04-18 17:49:48.176 +02:00 [Information] Executed action method "Services.APIService.CategorieController.DeleteCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 199.4186ms.
2019-04-18 17:49:48.179 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 17:49:48.180 +02:00 [Information] Executed action "Services.APIService.CategorieController.DeleteCategorie (Services)" in 208.6976ms
2019-04-18 17:49:48.181 +02:00 [Information] Request finished in 500.3687ms 200 
2019-04-18 17:49:48.184 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:49:48.185 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:49:48.186 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:49:48.187 +02:00 [Information] Request finished in 2.5671ms 204 
2019-04-18 17:49:48.191 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:49:48.191 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:49:48.192 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:49:48.193 +02:00 [Information] Successfully validated the token.
2019-04-18 17:49:48.194 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:49:48.195 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:49:48.444 +02:00 [Information] Executed DbCommand ("247"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:49:48.646 +02:00 [Information] Executed DbCommand ("197"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:49:48.670 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:49:48.687 +02:00 [Information] Authorization was successful.
2019-04-18 17:49:48.699 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:49:48.714 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1105ms.
2019-04-18 17:49:48.728 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:49:48.979 +02:00 [Information] Executed DbCommand ("248"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:49:48.983 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 296.0577ms
2019-04-18 17:49:48.986 +02:00 [Information] Request finished in 795.8004ms 200 application/json; charset=utf-8
2019-04-18 17:49:49.909 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie?CategorieId=8  
2019-04-18 17:49:49.911 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:49:49.911 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:49:49.912 +02:00 [Information] Request finished in 3.5378ms 204 
2019-04-18 17:49:49.915 +02:00 [Information] Request starting HTTP/1.1 DELETE http://localhost:5000/sogyolunchapi/categorie?CategorieId=8  
2019-04-18 17:49:49.915 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:49:49.916 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:49:49.917 +02:00 [Information] Successfully validated the token.
2019-04-18 17:49:49.918 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:49:49.919 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:49:50.176 +02:00 [Information] Executed DbCommand ("254"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:49:50.419 +02:00 [Information] Executed DbCommand ("226"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:49:50.422 +02:00 [Information] Route matched with "{action = \"DeleteCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.DeleteCategorie (Services)"
2019-04-18 17:49:50.425 +02:00 [Information] Authorization was successful.
2019-04-18 17:49:50.426 +02:00 [Information] Executing action method "Services.APIService.CategorieController.DeleteCategorie (Services)" with arguments (["8"]) - Validation state: Valid
2019-04-18 17:49:50.484 +02:00 [Information] Executed DbCommand ("55"ms) [Parameters=["@__get_Item_0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[CategorieId], [e].[CategorieNaam], [e].[VolgordeNummer], [e].[WinkelId]
FROM [Categorien] AS [e]
WHERE [e].[CategorieId] = @__get_Item_0"
2019-04-18 17:49:50.676 +02:00 [Information] Executed DbCommand ("189"ms) [Parameters=["@p0='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
DELETE FROM [Categorien]
WHERE [CategorieId] = @p0;
SELECT @@ROWCOUNT;"
2019-04-18 17:49:50.678 +02:00 [Information] Executed action method "Services.APIService.CategorieController.DeleteCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 250.3968ms.
2019-04-18 17:49:50.680 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 17:49:50.680 +02:00 [Information] Executed action "Services.APIService.CategorieController.DeleteCategorie (Services)" in 255.5864ms
2019-04-18 17:49:50.681 +02:00 [Information] Request finished in 766.5863ms 200 
2019-04-18 17:49:50.686 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:49:50.691 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:49:50.692 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:49:50.693 +02:00 [Information] Request finished in 6.932ms 204 
2019-04-18 17:49:50.697 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:49:50.698 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:49:50.699 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:49:50.700 +02:00 [Information] Successfully validated the token.
2019-04-18 17:49:50.701 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:49:50.702 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:49:50.951 +02:00 [Information] Executed DbCommand ("245"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:49:51.193 +02:00 [Information] Executed DbCommand ("234"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:49:51.196 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:49:51.198 +02:00 [Information] Authorization was successful.
2019-04-18 17:49:51.199 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:49:51.201 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0965ms.
2019-04-18 17:49:51.203 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:49:51.446 +02:00 [Information] Executed DbCommand ("242"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:49:51.448 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 250.39ms
2019-04-18 17:49:51.450 +02:00 [Information] Request finished in 752.5525ms 200 application/json; charset=utf-8
2019-04-18 17:49:54.733 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:49:54.739 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:49:54.741 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:49:54.742 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:49:54.742 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:49:54.743 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:49:54.744 +02:00 [Information] Request finished in 11.3802ms 204 
2019-04-18 17:49:54.745 +02:00 [Information] Request finished in 6.0326ms 204 
2019-04-18 17:49:55.017 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/winkel  
2019-04-18 17:49:55.017 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:49:55.139 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:49:55.397 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:49:55.398 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:49:55.399 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:49:55.400 +02:00 [Information] Successfully validated the token.
2019-04-18 17:49:55.401 +02:00 [Information] Successfully validated the token.
2019-04-18 17:49:55.401 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:49:55.402 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:49:55.405 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:49:55.411 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:49:55.693 +02:00 [Information] Executed DbCommand ("272"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:49:55.706 +02:00 [Information] Executed DbCommand ("288"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:49:55.970 +02:00 [Information] Executed DbCommand ("238"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:49:55.970 +02:00 [Information] Executed DbCommand ("269"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:49:55.981 +02:00 [Information] Route matched with "{action = \"getWinkels\", controller = \"Winkel\"}". Executing action "Services.APIService.WinkelController.getWinkels (Services)"
2019-04-18 17:49:55.981 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:49:55.983 +02:00 [Information] Authorization was successful.
2019-04-18 17:49:55.991 +02:00 [Information] Authorization was successful.
2019-04-18 17:49:55.993 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:49:55.993 +02:00 [Information] Executing action method "Services.APIService.WinkelController.getWinkels (Services)" - Validation state: Valid
2019-04-18 17:49:55.994 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1071ms.
2019-04-18 17:49:55.995 +02:00 [Information] Executed action method "Services.APIService.WinkelController.getWinkels (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.0045ms.
2019-04-18 17:49:55.996 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:49:55.997 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1[[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:49:56.205 +02:00 [Information] Executed DbCommand ("205"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:49:56.207 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 224.0475ms
2019-04-18 17:49:56.208 +02:00 [Information] Request finished in 1191.1519ms 200 application/json; charset=utf-8
2019-04-18 17:49:56.254 +02:00 [Information] Executed DbCommand ("255"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [w].[WinkelId], [w].[Winkellocatie], [w].[Winkelnaam]
FROM [Winkels] AS [w]"
2019-04-18 17:49:56.277 +02:00 [Information] Executed action "Services.APIService.WinkelController.getWinkels (Services)" in 285.7957ms
2019-04-18 17:49:56.283 +02:00 [Information] Request finished in 1265.8186ms 200 application/json; charset=utf-8
2019-04-18 17:50:09.713 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:50:09.717 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:50:09.718 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:50:09.718 +02:00 [Information] Request finished in 5.8642ms 204 
2019-04-18 17:50:09.722 +02:00 [Information] Request starting HTTP/1.1 POST http://localhost:5000/sogyolunchapi/categorie application/json;charset=UTF-8 59
2019-04-18 17:50:09.723 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:50:09.724 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:50:09.727 +02:00 [Information] Successfully validated the token.
2019-04-18 17:50:09.728 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:50:09.729 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:50:09.738 +02:00 [Information] Executed DbCommand ("6"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:50:09.746 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:50:09.748 +02:00 [Information] Route matched with "{action = \"AddCategorie\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.AddCategorie (Services)"
2019-04-18 17:50:09.750 +02:00 [Information] Authorization was successful.
2019-04-18 17:50:09.755 +02:00 [Information] Executing action method "Services.APIService.CategorieController.AddCategorie (Services)" with arguments (["SogyoLunchApp.Categorie"]) - Validation state: Valid
2019-04-18 17:50:09.764 +02:00 [Information] Executed DbCommand ("4"ms) [Parameters=["@p0='?' (Size = 4000), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)"], CommandType='Text', CommandTimeout='30']"
""SET NOCOUNT ON;
INSERT INTO [Categorien] ([CategorieNaam], [VolgordeNummer], [WinkelId])
VALUES (@p0, @p1, @p2);
SELECT [CategorieId]
FROM [Categorien]
WHERE @@ROWCOUNT = 1 AND [CategorieId] = scope_identity();"
2019-04-18 17:50:09.769 +02:00 [Information] Executed action method "Services.APIService.CategorieController.AddCategorie (Services)", returned result "Microsoft.AspNetCore.Mvc.OkResult" in 12.0755ms.
2019-04-18 17:50:09.771 +02:00 [Information] Executing HttpStatusCodeResult, setting HTTP status code 200
2019-04-18 17:50:09.772 +02:00 [Information] Executed action "Services.APIService.CategorieController.AddCategorie (Services)" in 22.3724ms
2019-04-18 17:50:09.774 +02:00 [Information] Request finished in 51.9612ms 200 
2019-04-18 17:50:09.782 +02:00 [Information] Request starting HTTP/1.1 OPTIONS http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:50:09.783 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:50:09.784 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:50:09.785 +02:00 [Information] Request finished in 2.8203ms 204 
2019-04-18 17:50:09.788 +02:00 [Information] Request starting HTTP/1.1 GET http://localhost:5000/sogyolunchapi/categorie  
2019-04-18 17:50:09.789 +02:00 [Warning] The CORS protocol does not allow specifying a wildcard (any) origin and credentials at the same time. Configure the policy by listing individual origins if credentials needs to be supported.
2019-04-18 17:50:09.789 +02:00 [Information] CORS policy execution successful.
2019-04-18 17:50:09.791 +02:00 [Information] Successfully validated the token.
2019-04-18 17:50:09.792 +02:00 [Warning] Missing required parameters "Username" and "Password" for connection string "LanthirDatabase"
2019-04-18 17:50:09.793 +02:00 [Information] Entity Framework Core "2.2.2-servicing-10034" initialized '"LunchAppContext"' using provider '"Microsoft.EntityFrameworkCore.SqlServer"' with options: "MigrationsAssembly=Services "
2019-04-18 17:50:09.797 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[Id], [e].[AccessFailedCount], [e].[ConcurrencyStamp], [e].[Email], [e].[EmailConfirmed], [e].[LockoutEnabled], [e].[LockoutEnd], [e].[NormalizedEmail], [e].[NormalizedUserName], [e].[PasswordHash], [e].[PhoneNumber], [e].[PhoneNumberConfirmed], [e].[SecurityStamp], [e].[TwoFactorEnabled], [e].[UserName]
FROM [AspNetUsers] AS [e]
WHERE [e].[Id] = @__get_Item_0"
2019-04-18 17:50:09.802 +02:00 [Information] Executed DbCommand ("1"ms) [Parameters=["@__get_Item_0='?' (DbType = Guid), @__get_Item_1='?' (Size = 450), @__get_Item_2='?' (Size = 450)"], CommandType='Text', CommandTimeout='30']"
""SELECT TOP(1) [e].[UserId], [e].[LoginProvider], [e].[Name], [e].[Value]
FROM [AspNetUserTokens] AS [e]
WHERE (([e].[UserId] = @__get_Item_0) AND ([e].[LoginProvider] = @__get_Item_1)) AND ([e].[Name] = @__get_Item_2)"
2019-04-18 17:50:09.805 +02:00 [Information] Route matched with "{action = \"GetAlleCategorien\", controller = \"Categorie\"}". Executing action "Services.APIService.CategorieController.GetAlleCategorien (Services)"
2019-04-18 17:50:09.806 +02:00 [Information] Authorization was successful.
2019-04-18 17:50:09.807 +02:00 [Information] Executing action method "Services.APIService.CategorieController.GetAlleCategorien (Services)" - Validation state: Valid
2019-04-18 17:50:09.809 +02:00 [Information] Executed action method "Services.APIService.CategorieController.GetAlleCategorien (Services)", returned result "Microsoft.AspNetCore.Mvc.JsonResult" in 0.1051ms.
2019-04-18 17:50:09.811 +02:00 [Information] Executing JsonResult, writing value of type '"Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions+IncludableQueryable`2[[SogyoLunchApp.Categorie, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null],[SogyoLunchApp.Winkel, Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
2019-04-18 17:50:09.814 +02:00 [Information] Executed DbCommand ("2"ms) [Parameters=[""], CommandType='Text', CommandTimeout='30']"
""SELECT [x].[CategorieId], [x].[CategorieNaam], [x].[VolgordeNummer], [x].[WinkelId], [x.Winkel].[WinkelId], [x.Winkel].[Winkellocatie], [x.Winkel].[Winkelnaam]
FROM [Categorien] AS [x]
INNER JOIN [Winkels] AS [x.Winkel] ON [x].[WinkelId] = [x.Winkel].[WinkelId]"
2019-04-18 17:50:09.817 +02:00 [Information] Executed action "Services.APIService.CategorieController.GetAlleCategorien (Services)" in 11.4261ms
2019-04-18 17:50:09.819 +02:00 [Information] Request finished in 31.3741ms 200 application/json; charset=utf-8
